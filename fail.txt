
## FAILING TESTS for TODO-REBARE 

- tests/pattern/*.hs
  all WORK with "--no-pattern-inline" 


  Macro
    unit-pos

      T1089b.hs:                              FAIL (0.98s)
      - fixpoint "Unknown func-sort:"

    Classes?
      NatClass.hs 
      VerifiedMonoid.hs?
      - handle "define" 

  esop
      Fib.hs:                                 FAIL (1.01s)

TERMINATION

  unit-pos 
    GhcSort1.hs:                            FAIL (9.06s)
    T1245.hs:                               FAIL (1.01s)

  esop
    Splay.hs
    Base.hs 

  Error-Messages
    ElabLocation.hs:        FAIL (1.00s)
      Did not match message: ElabLocation.hs:11:9-11:15: Error
      - SRCSPAN

-------------------------------------------------------------




      RecQSort.hs:                            FAIL (1.43s)
      qsloop.hs:                              FAIL (0.92s)
      Strata.hs:                              FAIL (1.11s)
      nestedRecursion.hs:                     FAIL (1.18s)
      TerminationNum0.hs:                     FAIL (1.09s)
      Sum.hs:                                 FAIL (1.25s)
      contra0.hs:                             FAIL (1.12s)
      testRec.hs:                             FAIL (1.17s)
      GeneralizedTermination.hs:              FAIL (0.98s)
      TerminationNum.hs:                      FAIL (1.05s)
      AutoSize.hs:                            FAIL (3.44s)
      T745.hs:                                FAIL (0.99s)
      MaybeMonad.hs:                          FAIL (1.24s)
      RG.hs:                                  FAIL (0.64s)
      AutoTerm.hs:                            FAIL (1.35s)
    TerminationExprSort.hs:                   FAIL (1.03s)
    TerminationExprNum.hs:                    FAIL (0.83s)
    TerminationExprUnb.hs:                    FAIL (1.00s)
    ElabLocation.hs:                          FAIL (1.08s)

      Data/Text.hs:                           FAIL (5.00s)
      Data/Text/Foreign.hs:                   FAIL (2.56s)
      Data/Text/Array.hs:                     FAIL (0.74s)
      Data/Text/UnsafeChar.hs:                FAIL (1.93s)
      Data/Text/Search.hs:                    FAIL (2.16s)
      Data/Text/Fusion.hs:                    FAIL (3.23s)
      Data/Text/Lazy.hs:                      FAIL (7.34s)
      Data/Text/Private.hs:                   FAIL (2.17s)
      Data/Text/Unsafe.hs:                    FAIL (2.48s)
      Data/Text/Internal.hs:                  FAIL (2.26s)
      Data/Text/Lazy/Encoding.hs:             FAIL (10.71s)
      Data/Text/Lazy/Builder.hs:              FAIL (7.61s)
      Data/Text/Lazy/Search.hs:               FAIL (5.78s)
      Data/Text/Lazy/Fusion.hs:               FAIL (5.94s)
      Data/Text/Lazy/Internal.hs:             FAIL (5.06s)
      Data/Text/Fusion/Size.hs:               FAIL (1.11s)

      Data/ByteString.hs:                     FAIL (6.43s)
      Data/ByteString.T.hs:                   FAIL (5.78s)
      - QUALIF issues?

      Data/ByteString/Char8.hs:               FAIL (5.39s)
        ? Error: Unknown data constructor `Chunk` from imported D.B.L.Internal 

      Data/ByteString/LazyZip.hs:             FAIL (5.39s)
      Data/ByteString/Lazy.hs:                FAIL (4.44s)
      - QUALIF issues?
      
      Fib.hs:                                 FAIL (1.21s)

      Data/Vector/Algorithms/AmericanFlag.hs: FAIL (0.68s)
      - Plugged / class / offset ?

      Data/Vector/Algorithms/Merge.hs:        FAIL (17.80s)
      - Hole left in FQ constraint? 

      Data/Vector/Algorithms/Combinators.hs:  FAIL (1.19s)
      - Illegal type specification for `Data.Vector.Generic.New.New` ?
      - DELETING a bunch of imports solves the problem...


rjhala@borscht ~/r/s/liquidhaskell (phadej-ghc-8.4)> stack exec -- liquid -i benchmarks/bytestring-0.9.2.1/ benchmarks/bytestring-0.9.2.1/Data/ByteString/Internal.hs 
rjhala@borscht ~/r/s/liquidhaskell (phadej-ghc-8.4)> stack exec -- liquid -i benchmarks/bytestring-0.9.2.1/ benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy/Internal.hs 
rjhala@borscht ~/r/s/liquidhaskell (phadej-ghc-8.4)> stack exec -- liquid -i benchmarks/bytestring-0.9.2.1/ benchmarks/bytestring-0.9.2.1/Data/ByteString/Fusion.hs 
rjhala@borscht ~/r/s/liquidhaskell (phadej-ghc-8.4)> stack exec -- liquid -i benchmarks/bytestring-0.9.2.1/ benchmarks/bytestring-0.9.2.1/Data/ByteString/Fusion.T.hs 

rjhala@borscht ~/r/s/liquidhaskell (phadej-ghc-8.4)> stack exec -- liquid -i benchmarks/bytestring-0.9.2.1/ benchmarks/bytestring-0.9.2.1/Data/ByteString/Unsafe.hs 
rjhala@borscht ~/r/s/liquidhaskell (phadej-ghc-8.4)> stack exec -- liquid -i benchmarks/bytestring-0.9.2.1/ benchmarks/bytestring-0.9.2.1/Data/ByteString.hs 

--


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:517:1-6: Error: Liquid Type Mismatch
  
 517 | unpack ps  = unpackFoldrINLINED ps
       ^^^^^^
  
   Inferred type
     VV : {v : [Word8] | len v >= 0}
  
   not a subtype of Required type
     VV : {VV : [Word8] | len VV == bLength ps}
  
   In Context
     ps : {ps : ByteString | 0 <= bLength ps}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:545:1-10: Error: Liquid Type Mismatch
  
 545 | unpackList (PS fp off len) = withPtr fp $ \p -> do
       ^^^^^^^^^^
  
   Inferred type
     VV : {v : [Word8] | len v >= 0}
  
   not a subtype of Required type
     VV : {VV : [Word8] | len VV == bLength ?a}
  
   In Context
     ?a : {?a : ByteString | 0 <= bLength ?a}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:838:9-10: Error: Liquid Type Mismatch
  
 838 |         go []            _   = return ()
               ^^
  
   Inferred type
     VV : {v : Int | v >= 0
                     && s + v <= fplen p
                     && v == l}
  
   not a subtype of Required type
     VV : {VV : Int | VV <= plen b}
  
   In Context
     l : {l : Int | l >= 0
                    && s + l <= fplen p}
      
     p : (ForeignPtr Word8)
      
     b : {b : (Ptr Word8) | 0 <= plen b}
      
     s : {s : Int | s >= 0
                    && s <= fplen p}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1044:9-10: Error: Liquid Type Mismatch
  
 1044 |         {-@ decrease go 4 @-}
                ^^
  
   Inferred type
     VV : {v : Int | v == 1}
  
   not a subtype of Required type
     VV : {VV : Int | VV <= plen a}
  
   In Context
     a : {a : (Ptr Word8) | 0 <= plen a}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1175:5-6: Error: Liquid Type Mismatch
  
 1175 |            | otherwise = do c' <- peekByteOff p i
            ^^
  
   Inferred type
     VV : {v : Int | 0 <= v
                     && v <= bLength ps
                     && v + s <= fplen x
                     && s + v <= fplen x
                     && v <= fplen x
                     && v <= l + 1
                     && 0 <= v + 1
                     && v <= l
                     && v >= 0
                     && v == b}
  
   not a subtype of Required type
     VV : {VV : Int | 0 <= VV
                      && VV < plen a}
  
   In Context
     l : {l : Int | l >= 0
                    && s + l <= fplen x}
      
     a : {a : (Ptr a##xo) | 0 <= plen a}
      
     b : {b : Int | 0 <= b
                    && b <= bLength ps
                    && b + s <= fplen x
                    && s + b <= fplen x
                    && b <= fplen x
                    && b <= l + 1
                    && 0 <= b + 1
                    && b <= l
                    && b >= 0}
      
     x : (ForeignPtr Word8)
      
     s : {s : Int | s >= 0
                    && s <= fplen x}
      
     ps : {ps : ByteString | 0 <= bLength ps}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1219:1-9: Error: Liquid Type Mismatch
  
 1219 | 
        ^^^^^^^^^
  
   Inferred type
     VV : {v : [ByteString] | len v >= 0
                              && len v > 0}
  
   not a subtype of Required type
     VV : {VV : [ByteString] | (bLengths VV + len VV) - 1 == bLength ?a}
  
   In Context
     ?a : {?a : ByteString | bLength ?a > 0
                             && 0 <= bLength ?a}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1537:5-6: Error: Liquid Type Mismatch
  
 1537 |     go ptr n | n >= l    = return Nothing
            ^^
  
   Inferred type
     VV : {v : Int | v == 1}
  
   not a subtype of Required type
     VV : {VV : Int | VV <= plen a}
  
   In Context
     a : {a : (Ptr Word8) | 0 <= plen a}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1583:7-8: Error: Liquid Type Mismatch
  
 1583 |       go f' t end | f' == end = return t
              ^^
  
   Inferred type
     VV : {v : (Ptr Word8) | 0 <= plen v
                             && v == b}
  
   not a subtype of Required type
     VV : {VV : (Ptr Word8) | 0 < plen VV}
  
   In Context
     b : {b : (Ptr Word8) | 0 <= plen b}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1858:1-5: Error: Liquid Type Mismatch
  
 1858 |                   | otherwise = a : rng (a+1) b
        ^^^^^
  
   Inferred type
     VV : {v : ByteString | 0 <= bLength v}
  
   not a subtype of Required type
     VV : {VV : ByteString | bLength ?a < bLength VV}
  
   In Context
     ?a : {?a : ByteString | 0 <= bLength ?a}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1972:1-14: Error: Liquid Type Mismatch
  
 1972 | 
        ^^^^^^^^^^^^^^
  
   Inferred type
     VV : {v : Int | v == len}
  
   not a subtype of Required type
     VV : {VV : Int | VV >= 0}
  
   In Context
     len : Int


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:2269:5-6: Error: Liquid Type Mismatch
  
 2269 |                                 then return n
            ^^
  
   Inferred type
     VV : {v : (Ptr Word8) | 0 <= plen v
                             && v == a}
  
   not a subtype of Required type
     VV : {VV : (Ptr Word8) | 0 < plen VV}
  
   In Context
     a : {a : (Ptr Word8) | 0 <= plen a}


-------


rjhala@borscht ~/r/s/liquidhaskell (phadej-ghc-8.4) [2]> stack exec -- liquid -i benchmarks/bytestring-0.9.2.1/ benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs


**** RESULT: UNSAFE ************************************************************


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:441:1-4: Error: Liquid Type Mismatch
  
 441 | pack ws = go Empty (chunks defaultChunkSize ws)
       ^^^^
  
   Inferred type
     VV : {v : ByteString | (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (lbLength Data.ByteString.Lazy.empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.empty - 1)
                            && (lbLength Data.ByteString.Lazy.Internal.Empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.Internal.Empty - 1)
                            && lbLength v >= 0}
  
   not a subtype of Required type
     VV : {VV : ByteString | lbLength VV == len ws}
  
   In Context
     ws : {ws : [Word8] | len ws >= 0}
      
     Data.ByteString.Lazy.empty : {Data.ByteString.Lazy.empty : ByteString | lbLength Data.ByteString.Lazy.empty == 0
                                                                             && lbLength Data.ByteString.Lazy.empty >= 0}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:592:1-4: Error: Liquid Type Mismatch
  
 592 | init Empty          = errorEmptyList "init"
       ^^^^
  
   Inferred type
     VV : {v : ByteString | (lbLength Data.ByteString.Lazy.Internal.Empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.Internal.Empty - 1)
                            && (lbLength Data.ByteString.Lazy.empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.empty - 1)
                            && (not (lbLength ?b > 0) => lbLength v == 0)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && lbLength v >= 0}
  
   not a subtype of Required type
     VV : {VV : ByteString | lbLength VV == lbLength ?b - 1}
  
   In Context
     c0 : {c0 : ByteString | bLength c0 > 0
                             && 0 <= bLength c0}
      
     Data.ByteString.Lazy.empty : {Data.ByteString.Lazy.empty : ByteString | lbLength Data.ByteString.Lazy.empty == 0
                                                                             && lbLength Data.ByteString.Lazy.empty >= 0}
      
     ?b : {?b : ByteString | lbLength ?b > 0
                             && lbLength ?b >= 0}
      
     cs0 : {cs0 : ByteString | lbLength cs0 >= 0}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:641:1-11: Error: Liquid Type Mismatch
  
 641 | intersperse _ Empty        = Empty
       ^^^^^^^^^^^
  
   Inferred type
     VV : {v : ByteString | Data.ByteString.Lazy.Internal.lbiRest v == ?c
                            && Data.ByteString.Lazy.Internal.lbiHead v == ?a
                            && lbLength v == bLength ?a + lbLength ?c
                            && lbLength v >= 0}
  
   not a subtype of Required type
     VV : {VV : ByteString | (lbLength ?d > 0 => lbLength VV == 2 * lbLength ?d - 1)
                             && (not (lbLength ?d > 0) => lbLength VV == 0)}
  
   In Context
     ?c : {?c : ByteString | (lbLength Data.ByteString.Lazy.Internal.Empty > 0 => lbLength ?c == 2 * lbLength Data.ByteString.Lazy.Internal.Empty - 1)
                             && (lbLength Data.ByteString.Lazy.empty > 0 => lbLength ?c == 2 * lbLength Data.ByteString.Lazy.empty - 1)
                             && (not (lbLength ?d > 0) => lbLength ?c == 0)
                             && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength ?c == Data.ByteString.Lazy.Internal.defaultChunkSize)
                             && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength ?c == Data.ByteString.Lazy.Internal.defaultChunkSize)
                             && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength ?c == Data.ByteString.Lazy.Internal.chunkOverhead)
                             && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength ?c == Data.ByteString.Lazy.Internal.chunkOverhead)
                             && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength ?c == Data.ByteString.Lazy.Internal.smallChunkSize)
                             && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength ?c == Data.ByteString.Lazy.Internal.smallChunkSize)
                             && (not (lbLength cs > 0) => lbLength ?c == 0)
                             && lbLength ?c >= 0}
      
     Data.ByteString.Lazy.empty : {Data.ByteString.Lazy.empty : ByteString | lbLength Data.ByteString.Lazy.empty == 0
                                                                             && lbLength Data.ByteString.Lazy.empty >= 0}
      
     cs : {cs : ByteString | lbLength cs >= 0}
      
     c : {c : ByteString | bLength c > 0
                           && 0 <= bLength c}
      
     ?d : {?d : ByteString | lbLength ?d >= 0}
      
     ?a : {?a : ByteString | bLength ?a == (if bLength c > 0 then 2 * bLength c - 1 else 0)
                             && 0 <= bLength ?a}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:654:1-9: Error: Liquid Type Mismatch
  
 654 | transpose css = L.map (\ss -> Chunk (S.pack ss) Empty)
       ^^^^^^^^^
  
   Inferred type
     VV : {v : ByteString | bLength v == len ss
                            && 0 <= bLength v
                            && v == ?a}
  
   not a subtype of Required type
     VV : {VV : ByteString | bLength VV > 0}
  
   In Context
     ss : {ss : [Word8] | len ss >= 0}
      
     ?a : {?a : ByteString | bLength ?a == len ss
                             && 0 <= bLength ?a}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:729:1-6: Error: Liquid Type Mismatch
  
 729 | concat css0 = to css0
       ^^^^^^
  
   Inferred type
     VV : {v : ByteString | (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (lbLength Data.ByteString.Lazy.empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.empty - 1)
                            && (lbLength Data.ByteString.Lazy.Internal.Empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.Internal.Empty - 1)
                            && lbLength v >= 0}
  
   not a subtype of Required type
     VV : {VV : ByteString | lbLength VV == lbLengths css0}
  
   In Context
     Data.ByteString.Lazy.empty : {Data.ByteString.Lazy.empty : ByteString | lbLength Data.ByteString.Lazy.empty == 0
                                                                             && lbLength Data.ByteString.Lazy.empty >= 0}
      
     css0 : {css0 : [ByteString] | len css0 >= 0
                                   && lbLengths css0 >= 0}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:1064:1-9: Error: Liquid Type Mismatch
  
 1064 | splitWith _ Empty     = []
        ^^^^^^^^^
  
   Inferred type
     VV : {v : [ByteString] | len v >= 0
                              && len v > 0
                              && len v >= len ?a
                              && (not (Data.ByteString.Lazy.Internal.defaultChunkSize >= 0) => len v == 0)
                              && (not (Data.ByteString.Lazy.Internal.chunkOverhead >= 0) => len v == 0)
                              && (not (Data.ByteString.Lazy.Internal.smallChunkSize >= 0) => len v == 0)
                              && lbLengths v >= 0}
  
   not a subtype of Required type
     VV : {VV : [ByteString] | (lbLengths VV + len VV) - 1 == lbLength ?b}
  
   In Context
     c0 : {c0 : ByteString | bLength c0 > 0
                             && 0 <= bLength c0}
      
     ?b : {?b : ByteString | lbLength ?b > 0
                             && lbLength ?b >= 0}
      
     ?a : {?a : [ByteString] | (bLengths ?a + len ?a) - 1 == bLength c0
                               && len ?a >= 0}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:1097:1-5: Error: Liquid Type Mismatch
  
 1097 | split _ Empty     = []
        ^^^^^
  
   Inferred type
     VV : {v : [ByteString] | len v >= 0
                              && len v > 0
                              && len v >= len ?b
                              && (not (Data.ByteString.Lazy.Internal.defaultChunkSize >= 0) => len v == 0)
                              && (not (Data.ByteString.Lazy.Internal.chunkOverhead >= 0) => len v == 0)
                              && (not (Data.ByteString.Lazy.Internal.smallChunkSize >= 0) => len v == 0)
                              && lbLengths v >= 0}
  
   not a subtype of Required type
     VV : {VV : [ByteString] | (lbLengths VV + len VV) - 1 == lbLength ?a}
  
   In Context
     c0 : {c0 : ByteString | bLength c0 > 0
                             && 0 <= bLength c0}
      
     ?b : {?b : [ByteString] | (bLengths ?b + len ?b) - 1 == bLength c0
                               && len ?b >= 0}
      
     ?a : {?a : ByteString | lbLength ?a > 0
                             && lbLength ?a >= 0}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:1132:1-5: Error: Liquid Type Mismatch
  
 1132 | group Empty          = []
        ^^^^^
  
   Inferred type
     VV : {v : [ByteString] | len v >= 0
                              && len v > 0
                              && len v >= len ?b
                              && (not (Data.ByteString.Lazy.Internal.defaultChunkSize >= 0) => len v == 0)
                              && (not (Data.ByteString.Lazy.Internal.chunkOverhead >= 0) => len v == 0)
                              && (not (Data.ByteString.Lazy.Internal.smallChunkSize >= 0) => len v == 0)
                              && lbLengths v >= 0}
  
   not a subtype of Required type
     VV : {VV : [ByteString] | lbLengths VV == lbLength ?a}
  
   In Context
     c0 : {c0 : ByteString | bLength c0 > 0
                             && 0 <= bLength c0}
      
     ?b : {?b : [ByteString] | bLengths ?b == bLength c0
                               && len ?b >= 0}
      
     ?a : {?a : ByteString | lbLength ?a >= 0}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:1168:1-7: Error: Liquid Type Mismatch
  
 1168 | groupBy _ Empty          = []
        ^^^^^^^
  
   Inferred type
     VV : {v : [ByteString] | len v >= 0
                              && len v > 0
                              && len v >= len ?b
                              && (not (Data.ByteString.Lazy.Internal.defaultChunkSize >= 0) => len v == 0)
                              && (not (Data.ByteString.Lazy.Internal.chunkOverhead >= 0) => len v == 0)
                              && (not (Data.ByteString.Lazy.Internal.smallChunkSize >= 0) => len v == 0)
                              && lbLengths v >= 0}
  
   not a subtype of Required type
     VV : {VV : [ByteString] | lbLengths VV == lbLength ?a}
  
   In Context
     c0 : {c0 : ByteString | bLength c0 > 0
                             && 0 <= bLength c0}
      
     ?b : {?b : [ByteString] | bLengths ?b == bLength c0
                               && len ?b >= 0}
      
     ?a : {?a : ByteString | lbLength ?a >= 0}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:1665:1-17: Error: Liquid Type Mismatch
  
 1665 |     where go acc []     = acc
        ^^^^^^^^^^^^^^^^^
  
   Inferred type
     VV : {v : ByteString | (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (lbLength Data.ByteString.Lazy.empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.empty - 1)
                            && (lbLength Data.ByteString.Lazy.Internal.Empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.Internal.Empty - 1)
                            && lbLength v >= 0}
  
   not a subtype of Required type
     VV : {VV : ByteString | lbLength VV == bLengths cs}
  
   In Context
     Data.ByteString.Lazy.empty : {Data.ByteString.Lazy.empty : ByteString | lbLength Data.ByteString.Lazy.empty == 0
                                                                             && lbLength Data.ByteString.Lazy.empty >= 0}
      
     cs : {cs : [ByteString] | len cs >= 0}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:1674:1-9: Error: Liquid Type Mismatch
  
 1674 |     where go acc []     = acc
        ^^^^^^^^^
  
   Inferred type
     VV : {v : ByteString | (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.smallChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.smallChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.chunkOverhead) => lbLength v == Data.ByteString.Lazy.Internal.chunkOverhead)
                            && (not (lbLength Data.ByteString.Lazy.Internal.Empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (not (lbLength Data.ByteString.Lazy.empty < Data.ByteString.Lazy.Internal.defaultChunkSize) => lbLength v == Data.ByteString.Lazy.Internal.defaultChunkSize)
                            && (lbLength Data.ByteString.Lazy.Internal.Empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.Internal.Empty - 1)
                            && (lbLength Data.ByteString.Lazy.empty > 0 => lbLength v == 2 * lbLength Data.ByteString.Lazy.empty - 1)
                            && lbLength v >= 0}
  
   not a subtype of Required type
     VV : {VV : ByteString | lbLength VV == bLengths cs}
  
   In Context
     Data.ByteString.Lazy.empty : {Data.ByteString.Lazy.empty : ByteString | lbLength Data.ByteString.Lazy.empty == 0
                                                                             && lbLength Data.ByteString.Lazy.empty >= 0}
      
     cs : {cs : [ByteString] | len cs >= 0
                               && len cs > 0
                               && (not (Data.ByteString.Lazy.Internal.defaultChunkSize >= 0) => len cs == 0)
                               && (not (Data.ByteString.Lazy.Internal.chunkOverhead >= 0) => len cs == 0)
                               && (not (Data.ByteString.Lazy.Internal.smallChunkSize >= 0) => len cs == 0)}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString/Lazy.hs:1687:5-6: Error: Liquid Type Mismatch
  
 1687 |     go (d::Int) ptr n
            ^^
  
   Inferred type
     VV : {v : (Ptr Word8) | 0 <= plen v
                             && v == b}
  
   not a subtype of Required type
     VV : {VV : (Ptr Word8) | 0 < plen VV}
  
   In Context
     b : {b : (Ptr Word8) | 0 <= plen b}



----

Data/ByteString.hs


**** RESULT: UNSAFE ************************************************************


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1175:5-6: Error: Liquid Type Mismatch
  
 1175 |            | otherwise = do c' <- peekByteOff p i
            ^^
  
   Inferred type
     VV : {v : Int | 0 <= v
                     && v <= bLength ps
                     && s + v <= fplen x
                     && v <= fplen x
                     && v <= l + 1
                     && 0 <= v + 1
                     && v + s <= fplen x
                     && l - v <= plen a
                     && v <= l
                     && v >= 0
                     && v == b}
  
   not a subtype of Required type
     VV : {VV : Int | 0 <= VV
                      && VV < plen a}
  
   In Context
     l : {l : Int | l >= 0
                    && s + l <= fplen x}
      
     a : {a : (Ptr a##xo) | 0 <= plen a}
      
     b : {b : Int | 0 <= b
                    && b <= bLength ps
                    && s + b <= fplen x
                    && b <= fplen x
                    && b <= l + 1
                    && 0 <= b + 1
                    && b + s <= fplen x
                    && l - b <= plen a
                    && b <= l
                    && b >= 0}
      
     x : (ForeignPtr Word8)
      
     s : {s : Int | s >= 0
                    && s <= fplen x}
      
     ps : {ps : ByteString | 0 <= bLength ps}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1583:7-8: Error: Liquid Type Mismatch
  
 1583 |       go f' t end | f' == end = return t
              ^^
  
   Inferred type
     VV : {v : (Ptr Word8) | 0 <= plen v
                             && v == b}
  
   not a subtype of Required type
     VV : {VV : (Ptr Word8) | 0 < plen VV}
  
   In Context
     b : {b : (Ptr Word8) | 0 <= plen b}


 /Users/rjhala/research/stack/liquidhaskell/benchmarks/bytestring-0.9.2.1/Data/ByteString.hs:1972:1-14: Error: Liquid Type Mismatch
  
 1972 | 
        ^^^^^^^^^^^^^^
  
   Inferred type
     VV : {v : Int | v == len}
  
   not a subtype of Required type
     VV : {VV : Int | VV >= 0}
  
   In Context
     len : Int
