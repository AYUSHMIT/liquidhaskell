Unknown flag: -i

liquid [OPTIONS] [FILE]
  Refinement Types for Haskell

Common flags:
     --idirs=DIR                             Paths to Spec Include Directory
  -d --diffcheck                             Incremental Checking: only check
                                             changed binders
  -l --linear                                Use uninterpreted integer
                                             multiplication and division
     --stringtheory                          Interpretation of Strings by z3
     --higherorder                           Allow higher order binders into
                                             the logic
     --higherorderqs                         Allow higher order qualifiers to
                                             get automatically instantiated
     --extensionality                        Allow function extentionality
                                             axioms
     --alphaequivalence                      Allow lambda alpha-equivalence
                                             axioms
  -b --betaequivalence                       Allow lambda beta-equivalence
                                             axioms
     --normalform                            Allow lambda
                                             normalization-equivalence axioms
  -f --fullcheck                             Full Checking: check all binders
                                             (DEFAULT)
     --savequery                             Save fixpoint query to file
                                             (slow)
     --check-var=ITEM --checks               Check a specific (top-level)
                                             binder
     --no-check-unknown                      Don't complain about
                                             specifications for unexported and
                                             unused values
     --no-termination-check --notermination  Disable Termination Check
     --total-Haskell --totalhaskell          Check for termination and
                                             totality, Overrides no-termination
                                             flags
     --auto-proofs --autoproofs              Automatically construct proofs
                                             from axioms
     --no-warnings --nowarnings              Don't display warnings, only
                                             show errors
     --no-annotations --noannotations        Don't create intermediate
                                             annotation files
     --trust-internals --trustinternals      Trust GHC generated code
     --no-case-expand --nocaseexpand         Don't expand the default case in
                                             a case-expression
     --strata                                Enable Strata Analysis
     --no-true-types --notruetypes           Disable Trueing Top Level Types
     --totality                              Check totality
     --prune-unsorted --pruneunsorted        Disable prunning unsorted
                                             Predicates
     --cores=INT                             Use m cores to solve logical
                                             constraints
     --minpartsize=INT                       If solving on multiple cores,
                                             ensure that partitions are of at
                                             least m size
     --maxpartsize=INT                       If solving on multiple cores,
                                             once there are as many partitions
                                             as there are cores, don't merge
                                             partitions if they will exceed
                                             this size. Overrides the
                                             minpartsize option.
     --maxparams=INT                         Restrict qualifier mining to
                                             those taking at most `m'
                                             parameters (2 by default)
     --smtsolver=SMTSOLVER                   Name of SMT-Solver
     --short-names --shortnames              Print shortened names, i.e. drop
                                             all module qualifiers.
     --short-errors --shorterrors            Don't show long error messages,
                                             just line numbers.
     --cabal-dir --cabaldir                  Find and use .cabal to add paths
                                             to sources for imported files
  -g --ghc-option=OPTION --ghcoptions        Pass this option to GHC
     --c-files=OPTION --cfiles               Tell GHC to compile and link
                                             against these files
     --no-eliminate --noeliminate            Don't use KVar elimination
                                             during solving
     --port=INT                              Port at which lhi should listen
     --exact-data-cons --exactdc             Exact Type for Data Constructors
     --no-measure-fields --nomeasurefields   Do not automatically lift data
                                             constructor fields into measures
     --scrape-imports                        Scrape qualifiers from imported
                                             specifications
     --scrape-internals                      Scrape qualifiers from auto
                                             generated specifications
     --scrape-used-imports                   Scrape qualifiers from used,
                                             imported specifications
     --elimStats --elimstats                 Print eliminate stats
     --elimBound=INT --elimbound             Maximum chain length for
                                             eliminating KVars
  -j --json                                  Print results in JSON (for
                                             editor integration)
     --counter-examples --counterexamples    Attempt to generate
                                             counter-examples to type errors
                                             (experimental!)
     --time-binds --timebinds                Solve each (top-level) asserted
                                             type signature separately & time
                                             solving.
     --no-pattern-inline --nopatterninline   Don't inline special patterns
                                             (e.g. `>>=` and `return`) during
                                             constraint generation.
  -u --untidy-core --untidycore              Print fully qualified identifier
                                             names in verbose mode
     --no-simplify-core --nosimplifycore     Don't simplify GHC core before
                                             constraint generation
     --non-linear-cuts --nonlincuts          (TRUE) Treat non-linear kvars as
                                             cuts
     --ignore-quals --ignorequals            (FALSE) Do inference without
                                             qualifiers, use eliminate only,
                                             with Cuts assigned True. Useful
                                             for prover.
  -? --help                                  Display help message
  -V --version                               Print version information
     --numeric-version                       Print just the version number
  -v --verbose                               Loud verbosity
  -q --quiet                                 Quiet verbosity

LiquidHaskell is a Refinement Type based verifier for Haskell

To check a Haskell file foo.hs, type:
  liquid foo.hs

