LiquidHaskell Version 0.8.10.2.1, Git revision 49e92440fbc1bd615f3db7c4f2650f4aeca5a3e8 (dirty) [develop@49e92440fbc1bd615f3db7c4f2650f4aeca5a3e8 (Mon Dec 13 14:28:31 2021 +0100)] 
Copyright 2013-19 Regents of the University of California. All Rights Reserved.

("Module Dependencies",[SGDSimple])
Targets: tests/relational/pos/SGDSimple.hs
[1;94m
**** [Checking: tests/relational/pos/SGDSimple.hs] *****************************
[0m("Module Dependencies",[SGDSimple])
***************************** GHC CoreBinds ***************************
[SGDSimple.update :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 50 0}]
 SGDSimple.update
   = \ (x :: GHC.Types.Int) ->
       break<6>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
       GHC.Num.+
         @ GHC.Types.Int
         GHC.Num.$fNumInt
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
          GHC.Types.I# 1#),
 SGDSimple.update'
   :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 50 0}]
 SGDSimple.update'
   = \ _ [Occ=Dead] (x :: GHC.Types.Int) ->
       break<1>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
       GHC.Num.+
         @ GHC.Types.Int
         GHC.Num.$fNumInt
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
          GHC.Types.I# 1#),
 SGDSimple.bind
   :: GHC.Types.Int
      -> (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True,
          Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)}]
 SGDSimple.bind
   = \ (x :: GHC.Types.Int) (f :: GHC.Types.Int -> GHC.Types.Int) ->
       break<0>(x,f)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:1-14>
       f (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
          x),
 SGDSimple.sgd'' :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 90 0}]
 SGDSimple.sgd''
   = \ (x :: GHC.Types.Int) ->
       break<5>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
       let {
         u :: GHC.Types.Int -> GHC.Types.Int
         [LclId,
          Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                  WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
         u = break<2>()
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
             SGDSimple.update'
               (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
                GHC.Types.I# 0#) } in
       let {
         b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
         [LclId,
          Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                  WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
         b1
           = break<3>(x)
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
             SGDSimple.bind
               (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
                x) } in
       break<4>(b1,u)
       b1
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
          u),
 SGDSimple.sgd :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 30 0}]
 SGDSimple.sgd
   = \ (x :: GHC.Types.Int) ->
       break<7>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:1-21>
       SGDSimple.bind
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
          SGDSimple.update),
 SGDSimple.sgd' :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 60 0}]
 SGDSimple.sgd'
   = \ (x :: GHC.Types.Int) ->
       break<9>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
       SGDSimple.bind
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
          x)
         (\ (z :: GHC.Types.Int) ->
            break<8>(z)
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
            SGDSimple.update
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
               z)),
 SGDSimple.$trModule :: GHC.Types.Module
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 90 30}]
 SGDSimple.$trModule
   = GHC.Types.Module
       (GHC.Types.TrNameS "main"#) (GHC.Types.TrNameS "SGDSimple"#)]
***************************** REC CoreBinds ***************************
[SGDSimple.update :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 50 0}]
 SGDSimple.update
   = \ (x :: GHC.Types.Int) ->
       break<6>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
       GHC.Num.+
         @ GHC.Types.Int
         GHC.Num.$fNumInt
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
          GHC.Types.I# 1#),
 SGDSimple.update'
   :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 50 0}]
 SGDSimple.update'
   = \ _ [Occ=Dead] (x :: GHC.Types.Int) ->
       break<1>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
       GHC.Num.+
         @ GHC.Types.Int
         GHC.Num.$fNumInt
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
          GHC.Types.I# 1#),
 SGDSimple.bind
   :: GHC.Types.Int
      -> (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True,
          Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)}]
 SGDSimple.bind
   = \ (x :: GHC.Types.Int) (f :: GHC.Types.Int -> GHC.Types.Int) ->
       break<0>(x,f)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:1-14>
       f (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
          x),
 SGDSimple.sgd'' :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 90 0}]
 SGDSimple.sgd''
   = \ (x :: GHC.Types.Int) ->
       break<5>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
       let {
         u :: GHC.Types.Int -> GHC.Types.Int
         [LclId,
          Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                  WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
         u = break<2>()
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
             SGDSimple.update'
               (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
                GHC.Types.I# 0#) } in
       let {
         b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
         [LclId,
          Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                  WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
         b1
           = break<3>(x)
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
             SGDSimple.bind
               (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
                x) } in
       break<4>(b1,u)
       b1
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
          u),
 SGDSimple.sgd :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 30 0}]
 SGDSimple.sgd
   = \ (x :: GHC.Types.Int) ->
       break<7>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:1-21>
       SGDSimple.bind
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
          SGDSimple.update),
 SGDSimple.sgd' :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 60 0}]
 SGDSimple.sgd'
   = \ (x :: GHC.Types.Int) ->
       break<9>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
       SGDSimple.bind
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
          x)
         (\ (z :: GHC.Types.Int) ->
            break<8>(z)
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
            SGDSimple.update
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
               z)),
 SGDSimple.$trModule :: GHC.Types.Module
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 90 30}]
 SGDSimple.$trModule
   = GHC.Types.Module
       (GHC.Types.TrNameS "main"#) (GHC.Types.TrNameS "SGDSimple"#)]
***************************** RWR CoreBinds ***************************
[SGDSimple.update :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 50 0}]
 SGDSimple.update
   = \ (x :: GHC.Types.Int) ->
       break<6>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
       GHC.Num.+
         @ GHC.Types.Int
         GHC.Num.$fNumInt
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
          GHC.Types.I# 1#),
 SGDSimple.update'
   :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 50 0}]
 SGDSimple.update'
   = \ _ [Occ=Dead] (x :: GHC.Types.Int) ->
       break<1>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
       GHC.Num.+
         @ GHC.Types.Int
         GHC.Num.$fNumInt
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
          GHC.Types.I# 1#),
 SGDSimple.bind
   :: GHC.Types.Int
      -> (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True,
          Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)}]
 SGDSimple.bind
   = \ (x :: GHC.Types.Int) (f :: GHC.Types.Int -> GHC.Types.Int) ->
       break<0>(x,f)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:1-14>
       f (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
          x),
 SGDSimple.sgd'' :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 90 0}]
 SGDSimple.sgd''
   = \ (x :: GHC.Types.Int) ->
       break<5>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
       let {
         u :: GHC.Types.Int -> GHC.Types.Int
         [LclId,
          Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                  WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
         u = break<2>()
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
             SGDSimple.update'
               (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
                GHC.Types.I# 0#) } in
       let {
         b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
         [LclId,
          Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                  WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
         b1
           = break<3>(x)
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
             SGDSimple.bind
               (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
                x) } in
       break<4>(b1,u)
       b1
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
          u),
 SGDSimple.sgd :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 30 0}]
 SGDSimple.sgd
   = \ (x :: GHC.Types.Int) ->
       break<7>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:1-21>
       SGDSimple.bind
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
          SGDSimple.update),
 SGDSimple.sgd' :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 60 0}]
 SGDSimple.sgd'
   = \ (x :: GHC.Types.Int) ->
       break<9>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
       SGDSimple.bind
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
          x)
         (\ (z :: GHC.Types.Int) ->
            break<8>(z)
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
            SGDSimple.update
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
               z)),
 SGDSimple.$trModule :: GHC.Types.Module
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 90 30}]
 SGDSimple.$trModule
   = GHC.Types.Module
       (GHC.Types.TrNameS "main"#) (GHC.Types.TrNameS "SGDSimple"#)]
[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mpaths = fromList ["/Users/elizavetavasilenko/liquidhaskell/.stack-work/install/x86_64-osx/5d60b98bf8cdc93e152c354bce9feb2a3635f068345c68643efd96ff8be68a5c/8.10.2/share/x86_64-osx-ghc-8.10.2/liquidhaskell-0.8.10.2.1/include/",".","/Users/elizavetavasilenko/liquidhaskell/.stack-work/install/x86_64-osx/5d60b98bf8cdc93e152c354bce9feb2a3635f068345c68643efd96ff8be68a5c/8.10.2/share/x86_64-osx-ghc-8.10.2/liquidhaskell-0.8.10.2.1/include/810"]
[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Transformed Core ***************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  transformRecExpr ***************************************************
[0m[1;90m 
[0m*************** Transform Rec Expr CoreBinds *****************
[SGDSimple.update :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 50 0}]
 SGDSimple.update
   = \ (x :: GHC.Types.Int) ->
       let {
         lq_anf$##7205759403792795921 :: GHC.Prim.Int#
         [LclId]
         lq_anf$##7205759403792795921 = 1# } in
       let {
         lq_anf$##7205759403792795922 :: GHC.Types.Int
         [LclId]
         lq_anf$##7205759403792795922
           = GHC.Types.I# lq_anf$##7205759403792795921 } in
       break<6>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
       GHC.Num.+
         @ GHC.Types.Int
         GHC.Num.$fNumInt
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
          lq_anf$##7205759403792795922),
 SGDSimple.update'
   :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 50 0}]
 SGDSimple.update'
   = \ _ [Occ=Dead] (x :: GHC.Types.Int) ->
       let {
         lq_anf$##7205759403792795923 :: GHC.Prim.Int#
         [LclId]
         lq_anf$##7205759403792795923 = 1# } in
       let {
         lq_anf$##7205759403792795924 :: GHC.Types.Int
         [LclId]
         lq_anf$##7205759403792795924
           = GHC.Types.I# lq_anf$##7205759403792795923 } in
       break<1>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
       GHC.Num.+
         @ GHC.Types.Int
         GHC.Num.$fNumInt
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
          lq_anf$##7205759403792795924),
 SGDSimple.bind
   :: GHC.Types.Int
      -> (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True,
          Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)}]
 SGDSimple.bind
   = \ (x :: GHC.Types.Int) (f :: GHC.Types.Int -> GHC.Types.Int) ->
       break<0>(x,f)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:1-14>
       f (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
          x),
 SGDSimple.sgd'' :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 90 0}]
 SGDSimple.sgd''
   = \ (x :: GHC.Types.Int) ->
       let {
         lq_anf$##7205759403792795925 :: GHC.Prim.Int#
         [LclId]
         lq_anf$##7205759403792795925 = 0# } in
       let {
         lq_anf$##7205759403792795926 :: GHC.Types.Int
         [LclId]
         lq_anf$##7205759403792795926
           = GHC.Types.I# lq_anf$##7205759403792795925 } in
       let {
         u :: GHC.Types.Int -> GHC.Types.Int
         [LclId,
          Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                  WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
         u = break<2>()
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
             SGDSimple.update'
               (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
                lq_anf$##7205759403792795926) } in
       let {
         b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
         [LclId,
          Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                  WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
         b1
           = break<3>(x)
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
             src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
             SGDSimple.bind
               (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
                x) } in
       break<5>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
       break<4>(b1,u)
       b1
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
          u),
 SGDSimple.sgd :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 30 0}]
 SGDSimple.sgd
   = \ (x :: GHC.Types.Int) ->
       break<7>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:1-21>
       SGDSimple.bind
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
          x)
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
          SGDSimple.update),
 SGDSimple.sgd' :: GHC.Types.Int -> GHC.Types.Int
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 60 0}]
 SGDSimple.sgd'
   = \ (x :: GHC.Types.Int) ->
       let {
         lq_anf$##7205759403792795927 :: GHC.Types.Int -> GHC.Types.Int
         [LclId]
         lq_anf$##7205759403792795927
           = \ (z :: GHC.Types.Int) ->
               break<8>(z)
               src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
               SGDSimple.update
                 (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
                  z) } in
       break<9>(x)
       src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
       SGDSimple.bind
         (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
          x)
         lq_anf$##7205759403792795927,
 SGDSimple.$trModule :: GHC.Types.Module
 [LclIdX,
  Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
          WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 90 30}]
 SGDSimple.$trModule
   = let {
       lq_anf$##7205759403792795928 :: GHC.Prim.Addr#
       [LclId]
       lq_anf$##7205759403792795928 = "main"# } in
     let {
       lq_anf$##7205759403792795929 :: GHC.Types.TrName
       [LclId]
       lq_anf$##7205759403792795929
         = GHC.Types.TrNameS lq_anf$##7205759403792795928 } in
     let {
       lq_anf$##7205759403792795930 :: GHC.Prim.Addr#
       [LclId]
       lq_anf$##7205759403792795930 = "SGDSimple"# } in
     let {
       lq_anf$##7205759403792795931 :: GHC.Types.TrName
       [LclId]
       lq_anf$##7205759403792795931
         = GHC.Types.TrNameS lq_anf$##7205759403792795930 } in
     GHC.Types.Module
       lq_anf$##7205759403792795929 lq_anf$##7205759403792795931]
Assm To CHECK
e: SGDSimple.update

d: SGDSimple.update

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Assm To CHECK
e: SGDSimple.update'

d: SGDSimple.update'

t: y1:GHC.Types.Int -> x1:GHC.Types.Int -> GHC.Types.Int

s: y2:GHC.Types.Int -> x2:GHC.Types.Int -> GHC.Types.Int

p: true => (x1 < x2 => r1 y1 x1 < r2 y2 x2)
Assm To CHECK
e: SGDSimple.bind

d: SGDSimple.bind

t: x1:GHC.Types.Int -> f1:(z1:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int

s: x2:GHC.Types.Int -> f2:(z2:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int

p: x1 < x2 => ((z1 < z2 => r1 <= r2) => r1 x1 f1 < r2 x2 f2)
Assm To CHECK
e: SGDSimple.sgd

d: SGDSimple.sgd

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Assm To CHECK
e: SGDSimple.sgd'

d: SGDSimple.sgd'

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Assm To CHECK
e: SGDSimple.sgd''

d: SGDSimple.sgd''

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Init To CHECK
e: SGDSimple.sgd'' :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 90 0}]
SGDSimple.sgd''
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795925 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795925 = 0# } in
      let {
        lq_anf$##7205759403792795926 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795926
          = GHC.Types.I# lq_anf$##7205759403792795925 } in
      let {
        u :: GHC.Types.Int -> GHC.Types.Int
        [LclId,
         Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                 WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
        u = break<2>()
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
            SGDSimple.update'
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
               lq_anf$##7205759403792795926) } in
      let {
        b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
        [LclId,
         Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                 WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
        b1
          = break<3>(x)
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
            SGDSimple.bind
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
               x) } in
      break<5>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
      break<4>(b1,u)
      b1
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
         u)

d: SGDSimple.sgd'' :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 90 0}]
SGDSimple.sgd''
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795925 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795925 = 0# } in
      let {
        lq_anf$##7205759403792795926 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795926
          = GHC.Types.I# lq_anf$##7205759403792795925 } in
      let {
        u :: GHC.Types.Int -> GHC.Types.Int
        [LclId,
         Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                 WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
        u = break<2>()
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
            SGDSimple.update'
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
               lq_anf$##7205759403792795926) } in
      let {
        b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
        [LclId,
         Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                 WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
        b1
          = break<3>(x)
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
            SGDSimple.bind
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
               x) } in
      break<5>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
      break<4>(b1,u)
      b1
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
         u)

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Bind Rec To CHECK
e: SGDSimple.sgd'' :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 90 0}]
SGDSimple.sgd''
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795925 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795925 = 0# } in
      let {
        lq_anf$##7205759403792795926 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795926
          = GHC.Types.I# lq_anf$##7205759403792795925 } in
      let {
        u :: GHC.Types.Int -> GHC.Types.Int
        [LclId,
         Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                 WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
        u = break<2>()
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
            SGDSimple.update'
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
               lq_anf$##7205759403792795926) } in
      let {
        b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
        [LclId,
         Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                 WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
        b1
          = break<3>(x)
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
            SGDSimple.bind
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
               x) } in
      break<5>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
      break<4>(b1,u)
      b1
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
         u);

d: SGDSimple.sgd'' :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 90 0}]
SGDSimple.sgd''
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795925 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795925 = 0# } in
      let {
        lq_anf$##7205759403792795926 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795926
          = GHC.Types.I# lq_anf$##7205759403792795925 } in
      let {
        u :: GHC.Types.Int -> GHC.Types.Int
        [LclId,
         Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                 WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
        u = break<2>()
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
            SGDSimple.update'
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
               lq_anf$##7205759403792795926) } in
      let {
        b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
        [LclId,
         Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
                 WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
        b1
          = break<3>(x)
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
            src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
            SGDSimple.bind
              (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
               x) } in
      break<5>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
      break<4>(b1,u)
      b1
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
         u);

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Let To CHECK
e: let {
  lq_anf$##7205759403792795925 :: GHC.Prim.Int#
  [LclId]
  lq_anf$##7205759403792795925 = 0# } in
let {
  lq_anf$##7205759403792795926 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795926
    = GHC.Types.I# lq_anf$##7205759403792795925 } in
let {
  u :: GHC.Types.Int -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
  u = break<2>()
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
      SGDSimple.update'
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
         lq_anf$##7205759403792795926) } in
let {
  b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
  b1
    = break<3>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
         xl_auT) } in
break<5>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
break<4>(b1,u)
b1
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   u)

d: let {
  lq_anf$##7205759403792795925 :: GHC.Prim.Int#
  [LclId]
  lq_anf$##7205759403792795925 = 0# } in
let {
  lq_anf$##7205759403792795926 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795926
    = GHC.Types.I# lq_anf$##7205759403792795925 } in
let {
  u :: GHC.Types.Int -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
  u = break<2>()
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
      SGDSimple.update'
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
         lq_anf$##7205759403792795926) } in
let {
  b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
  b1
    = break<3>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
         xr_auT) } in
break<5>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
break<4>(b1,u)
b1
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   u)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
Init To CHECK
e: SGDSimple.sgd' :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 60 0}]
SGDSimple.sgd'
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795927 :: GHC.Types.Int -> GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795927
          = \ (z :: GHC.Types.Int) ->
              break<8>(z)
              src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
              SGDSimple.update
                (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
                 z) } in
      break<9>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
         x)
        lq_anf$##7205759403792795927

d: SGDSimple.sgd' :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 60 0}]
SGDSimple.sgd'
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795927 :: GHC.Types.Int -> GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795927
          = \ (z :: GHC.Types.Int) ->
              break<8>(z)
              src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
              SGDSimple.update
                (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
                 z) } in
      break<9>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
         x)
        lq_anf$##7205759403792795927

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Bind Rec To CHECK
e: SGDSimple.sgd' :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 60 0}]
SGDSimple.sgd'
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795927 :: GHC.Types.Int -> GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795927
          = \ (z :: GHC.Types.Int) ->
              break<8>(z)
              src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
              SGDSimple.update
                (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
                 z) } in
      break<9>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
         x)
        lq_anf$##7205759403792795927;

d: SGDSimple.sgd' :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 60 0}]
SGDSimple.sgd'
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795927 :: GHC.Types.Int -> GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795927
          = \ (z :: GHC.Types.Int) ->
              break<8>(z)
              src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
              SGDSimple.update
                (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
                 z) } in
      break<9>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
         x)
        lq_anf$##7205759403792795927;

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Let To CHECK
e: let {
  lq_anf$##7205759403792795927 :: GHC.Types.Int -> GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795927
    = \ (z :: GHC.Types.Int) ->
        break<8>(z)
        src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
        SGDSimple.update
          (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
           z) } in
break<9>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xl_auR)
  lq_anf$##7205759403792795927

d: let {
  lq_anf$##7205759403792795927 :: GHC.Types.Int -> GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795927
    = \ (z :: GHC.Types.Int) ->
        break<8>(z)
        src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
        SGDSimple.update
          (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
           z) } in
break<9>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32>
SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xr_auR)
  lq_anf$##7205759403792795927

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
Init To CHECK
e: SGDSimple.sgd :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 30 0}]
SGDSimple.sgd
  = \ (x :: GHC.Types.Int) ->
      break<7>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:1-21>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
         SGDSimple.update)

d: SGDSimple.sgd :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 30 0}]
SGDSimple.sgd
  = \ (x :: GHC.Types.Int) ->
      break<7>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:1-21>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
         SGDSimple.update)

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Bind Rec To CHECK
e: SGDSimple.sgd :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 30 0}]
SGDSimple.sgd
  = \ (x :: GHC.Types.Int) ->
      break<7>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:1-21>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
         SGDSimple.update);

d: SGDSimple.sgd :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 30 0}]
SGDSimple.sgd
  = \ (x :: GHC.Types.Int) ->
      break<7>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:1-21>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
         SGDSimple.update);

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Synth To CHECK
e: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
   xl_auQ)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
   SGDSimple.update)

d: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
   xr_auQ)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
   SGDSimple.update)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
Init To CHECK
e: SGDSimple.bind
  :: GHC.Types.Int
     -> (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)}]
SGDSimple.bind
  = \ (x :: GHC.Types.Int) (f :: GHC.Types.Int -> GHC.Types.Int) ->
      break<0>(x,f)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:1-14>
      f (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
         x)

d: SGDSimple.bind
  :: GHC.Types.Int
     -> (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)}]
SGDSimple.bind
  = \ (x :: GHC.Types.Int) (f :: GHC.Types.Int -> GHC.Types.Int) ->
      break<0>(x,f)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:1-14>
      f (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
         x)

t: x1:GHC.Types.Int -> f1:(z1:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int

s: x2:GHC.Types.Int -> f2:(z2:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int

p: x1 < x2 => ((z1 < z2 => r1 <= r2) => r1 x1 f1 < r2 x2 f2)
Bind Rec To CHECK
e: SGDSimple.bind
  :: GHC.Types.Int
     -> (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)}]
SGDSimple.bind
  = \ (x :: GHC.Types.Int) (f :: GHC.Types.Int -> GHC.Types.Int) ->
      break<0>(x,f)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:1-14>
      f (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
         x);

d: SGDSimple.bind
  :: GHC.Types.Int
     -> (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)}]
SGDSimple.bind
  = \ (x :: GHC.Types.Int) (f :: GHC.Types.Int -> GHC.Types.Int) ->
      break<0>(x,f)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:1-14>
      f (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
         x);

t: x1:GHC.Types.Int -> f1:(z1:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int

s: x2:GHC.Types.Int -> f2:(z2:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int

p: x1 < x2 => ((z1 < z2 => r1 <= r2) => r1 x1 f1 < r2 x2 f2)
Synth To CHECK
e: fl_auP
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
   xl_auO)

d: fr_auP
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
   xr_auO)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
Init To CHECK
e: SGDSimple.update'
  :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 50 0}]
SGDSimple.update'
  = \ _ [Occ=Dead] (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795923 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795923 = 1# } in
      let {
        lq_anf$##7205759403792795924 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795924
          = GHC.Types.I# lq_anf$##7205759403792795923 } in
      break<1>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
      GHC.Num.+
        @ GHC.Types.Int
        GHC.Num.$fNumInt
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
         lq_anf$##7205759403792795924)

d: SGDSimple.update'
  :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 50 0}]
SGDSimple.update'
  = \ _ [Occ=Dead] (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795923 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795923 = 1# } in
      let {
        lq_anf$##7205759403792795924 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795924
          = GHC.Types.I# lq_anf$##7205759403792795923 } in
      break<1>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
      GHC.Num.+
        @ GHC.Types.Int
        GHC.Num.$fNumInt
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
         lq_anf$##7205759403792795924)

t: y1:GHC.Types.Int -> x1:GHC.Types.Int -> GHC.Types.Int

s: y2:GHC.Types.Int -> x2:GHC.Types.Int -> GHC.Types.Int

p: true => (x1 < x2 => r1 y1 x1 < r2 y2 x2)
Bind Rec To CHECK
e: SGDSimple.update'
  :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 50 0}]
SGDSimple.update'
  = \ _ [Occ=Dead] (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795923 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795923 = 1# } in
      let {
        lq_anf$##7205759403792795924 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795924
          = GHC.Types.I# lq_anf$##7205759403792795923 } in
      break<1>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
      GHC.Num.+
        @ GHC.Types.Int
        GHC.Num.$fNumInt
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
         lq_anf$##7205759403792795924);

d: SGDSimple.update'
  :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 50 0}]
SGDSimple.update'
  = \ _ [Occ=Dead] (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795923 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795923 = 1# } in
      let {
        lq_anf$##7205759403792795924 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795924
          = GHC.Types.I# lq_anf$##7205759403792795923 } in
      break<1>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
      GHC.Num.+
        @ GHC.Types.Int
        GHC.Num.$fNumInt
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
         lq_anf$##7205759403792795924);

t: y1:GHC.Types.Int -> x1:GHC.Types.Int -> GHC.Types.Int

s: y2:GHC.Types.Int -> x2:GHC.Types.Int -> GHC.Types.Int

p: true => (x1 < x2 => r1 y1 x1 < r2 y2 x2)
Let To CHECK
e: let {
  lq_anf$##7205759403792795923 :: GHC.Prim.Int#
  [LclId]
  lq_anf$##7205759403792795923 = 1# } in
let {
  lq_anf$##7205759403792795924 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795924
    = GHC.Types.I# lq_anf$##7205759403792795923 } in
break<1>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xl_auN)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
   lq_anf$##7205759403792795924)

d: let {
  lq_anf$##7205759403792795923 :: GHC.Prim.Int#
  [LclId]
  lq_anf$##7205759403792795923 = 1# } in
let {
  lq_anf$##7205759403792795924 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795924
    = GHC.Types.I# lq_anf$##7205759403792795923 } in
break<1>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xr_auN)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
   lq_anf$##7205759403792795924)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
Init To CHECK
e: SGDSimple.update :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 50 0}]
SGDSimple.update
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795921 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795921 = 1# } in
      let {
        lq_anf$##7205759403792795922 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795922
          = GHC.Types.I# lq_anf$##7205759403792795921 } in
      break<6>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
      GHC.Num.+
        @ GHC.Types.Int
        GHC.Num.$fNumInt
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
         lq_anf$##7205759403792795922)

d: SGDSimple.update :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 50 0}]
SGDSimple.update
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795921 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795921 = 1# } in
      let {
        lq_anf$##7205759403792795922 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795922
          = GHC.Types.I# lq_anf$##7205759403792795921 } in
      break<6>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
      GHC.Num.+
        @ GHC.Types.Int
        GHC.Num.$fNumInt
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
         lq_anf$##7205759403792795922)

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Bind Rec To CHECK
e: SGDSimple.update :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 50 0}]
SGDSimple.update
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795921 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795921 = 1# } in
      let {
        lq_anf$##7205759403792795922 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795922
          = GHC.Types.I# lq_anf$##7205759403792795921 } in
      break<6>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
      GHC.Num.+
        @ GHC.Types.Int
        GHC.Num.$fNumInt
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
         lq_anf$##7205759403792795922);

d: SGDSimple.update :: GHC.Types.Int -> GHC.Types.Int
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 50 0}]
SGDSimple.update
  = \ (x :: GHC.Types.Int) ->
      let {
        lq_anf$##7205759403792795921 :: GHC.Prim.Int#
        [LclId]
        lq_anf$##7205759403792795921 = 1# } in
      let {
        lq_anf$##7205759403792795922 :: GHC.Types.Int
        [LclId]
        lq_anf$##7205759403792795922
          = GHC.Types.I# lq_anf$##7205759403792795921 } in
      break<6>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
      GHC.Num.+
        @ GHC.Types.Int
        GHC.Num.$fNumInt
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
         x)
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
         lq_anf$##7205759403792795922);

t: x1:GHC.Types.Int -> GHC.Types.Int

s: x2:GHC.Types.Int -> GHC.Types.Int

p: x1 < x2 => r1 x1 < r2 x2
Let To CHECK
e: let {
  lq_anf$##7205759403792795921 :: GHC.Prim.Int#
  [LclId]
  lq_anf$##7205759403792795921 = 1# } in
let {
  lq_anf$##7205759403792795922 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795922
    = GHC.Types.I# lq_anf$##7205759403792795921 } in
break<6>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xl_atA)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
   lq_anf$##7205759403792795922)

d: let {
  lq_anf$##7205759403792795921 :: GHC.Prim.Int#
  [LclId]
  lq_anf$##7205759403792795921 = 1# } in
let {
  lq_anf$##7205759403792795922 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795922
    = GHC.Types.I# lq_anf$##7205759403792795921 } in
break<6>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xr_atA)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
   lq_anf$##7205759403792795922)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
ASSUME x1 < x2 => r1 < r2 : x1 < x2 => r1 x1 < r2 x2
ASSUME x1 < x2 => r1 < r2 : x1 < x2 => r1 x1 < r2 x2
ASSUME x1 < x2 => r1 < r2 : x1 < x2 => r1 x1 < r2 x2
ASSUME x1 < x2 => ((z1 < z2 => r1 <= r2) => r1 < r2) : x1 < x2 => ((z1 < z2 => r1 <= r2) => r1 x1 f1 < r2 x2 f2)
ASSUME true => (x1 < x2 => r1 < r2) : true => (x1 < x2 => r1 y1 x1 < r2 y2 x2)
ASSUME x1 < x2 => r1 < r2 : x1 < x2 => r1 x1 < r2 x2
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: 1#

d: 1#

t: {lq_tmp$x##503 : GHC.Prim.Int# | lq_tmp$x##503 == 1}

s: {lq_tmp$x##504 : GHC.Prim.Int# | lq_tmp$x##504 == 1}

p: []
Let To CHECK
e: let {
  lq_anf$##7205759403792795922 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795922
    = GHC.Types.I# lq_anf$##7205759403792795921l_dBr } in
break<6>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xl_atA)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
   lq_anf$##7205759403792795922)

d: let {
  lq_anf$##7205759403792795922 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795922
    = GHC.Types.I# lq_anf$##7205759403792795921r_dBr } in
break<6>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:1-16>
GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xr_atA)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
   lq_anf$##7205759403792795922)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
Let qs: []
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Types.I#

d: GHC.Types.I#

t: lq_tmp$x##514:GHC.Prim.Int# -> {lq_tmp$x##512 : GHC.Types.Int | lq_tmp$x##512 == lq_tmp$x##514
                                                                && lq_tmp$x##512 == GHC.Types.I# lq_tmp$x##514}

s: lq_tmp$x##518:GHC.Prim.Int# -> {lq_tmp$x##516 : GHC.Types.Int | lq_tmp$x##516 == lq_tmp$x##518
                                                                && lq_tmp$x##516 == GHC.Types.I# lq_tmp$x##518}

p: []
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##522:GHC.Prim.Int# -> {lq_tmp$x##520 : GHC.Types.Int | lq_tmp$x##520 == lq_tmp$x##522
                                                                && lq_tmp$x##520 == GHC.Types.I# lq_tmp$x##522}

d: lq_tmp$x##526:GHC.Prim.Int# -> {lq_tmp$x##524 : GHC.Types.Int | lq_tmp$x##524 == lq_tmp$x##526
                                                                && lq_tmp$x##524 == GHC.Types.I# lq_tmp$x##526}

t: []

s: lq_anf$##7205759403792795921l_dBr

p: lq_anf$##7205759403792795921r_dBr
SELFIFICATION (lq_anf$##7205759403792795921l_dBr, {lq_tmp$x##505 : GHC.Prim.Int# | lq_tmp$x##505 == 1}, {lq_tmp$x##505 : GHC.Prim.Int# | lq_tmp$x##505 == 1
                                                                                                                           && lq_tmp$x##505 == lq_anf$##7205759403792795921l_dBr})
SELFIFICATION (lq_anf$##7205759403792795921r_dBr, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1}, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1
                                                                                                                           && lq_tmp$x##506 == lq_anf$##7205759403792795921r_dBr})
SELFIFICATION (lq_anf$##7205759403792795921l_dBr, {lq_tmp$x##505 : GHC.Prim.Int# | lq_tmp$x##505 == 1}, {lq_tmp$x##505 : GHC.Prim.Int# | lq_tmp$x##505 == 1
                                                                                                                           && lq_tmp$x##505 == lq_anf$##7205759403792795921l_dBr})
SELFIFICATION (lq_anf$##7205759403792795921r_dBr, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1}, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1
                                                                                                                           && lq_tmp$x##506 == lq_anf$##7205759403792795921r_dBr})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795921l_dBr

d: lq_anf$##7205759403792795921r_dBr

t: {lq_tmp$x##527 : GHC.Prim.Int# | lq_tmp$x##527 == 1
                                 && lq_tmp$x##527 == lq_anf$##7205759403792795921l_dBr}

s: {lq_tmp$x##528 : GHC.Prim.Int# | lq_tmp$x##528 == 1
                                 && lq_tmp$x##528 == lq_anf$##7205759403792795921r_dBr}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Types.I# lq_anf$##7205759403792795921l_dBr

d: GHC.Types.I# lq_anf$##7205759403792795921r_dBr

t: {lq_tmp$x##520 : GHC.Types.Int | lq_tmp$x##520 == lq_anf$##7205759403792795921l_dBr
                                 && lq_tmp$x##520 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr}

s: {lq_tmp$x##524 : GHC.Types.Int | lq_tmp$x##524 == lq_anf$##7205759403792795921r_dBr
                                 && lq_tmp$x##524 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr}

p: []
SELFIFICATION (lq_anf$##7205759403792795921r_dBr, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1}, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1
                                                                                                                           && lq_tmp$x##506 == lq_anf$##7205759403792795921r_dBr})
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Types.I#

d: GHC.Types.I#

t: lq_tmp$x##534:GHC.Prim.Int# -> {lq_tmp$x##532 : GHC.Types.Int | lq_tmp$x##532 == lq_tmp$x##534
                                                                && lq_tmp$x##532 == GHC.Types.I# lq_tmp$x##534}

s: lq_tmp$x##538:GHC.Prim.Int# -> {lq_tmp$x##536 : GHC.Types.Int | lq_tmp$x##536 == lq_tmp$x##538
                                                                && lq_tmp$x##536 == GHC.Types.I# lq_tmp$x##538}

p: []
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##542:GHC.Prim.Int# -> {lq_tmp$x##540 : GHC.Types.Int | lq_tmp$x##540 == lq_tmp$x##542
                                                                && lq_tmp$x##540 == GHC.Types.I# lq_tmp$x##542}

d: lq_tmp$x##546:GHC.Prim.Int# -> {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_tmp$x##546
                                                                && lq_tmp$x##544 == GHC.Types.I# lq_tmp$x##546}

t: []

s: lq_anf$##7205759403792795921l_dBr

p: lq_anf$##7205759403792795921r_dBr
SELFIFICATION (lq_anf$##7205759403792795921l_dBr, {lq_tmp$x##505 : GHC.Prim.Int# | lq_tmp$x##505 == 1}, {lq_tmp$x##505 : GHC.Prim.Int# | lq_tmp$x##505 == 1
                                                                                                                           && lq_tmp$x##505 == lq_anf$##7205759403792795921l_dBr})
SELFIFICATION (lq_anf$##7205759403792795921r_dBr, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1}, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1
                                                                                                                           && lq_tmp$x##506 == lq_anf$##7205759403792795921r_dBr})
SELFIFICATION (lq_anf$##7205759403792795921l_dBr, {lq_tmp$x##505 : GHC.Prim.Int# | lq_tmp$x##505 == 1}, {lq_tmp$x##505 : GHC.Prim.Int# | lq_tmp$x##505 == 1
                                                                                                                           && lq_tmp$x##505 == lq_anf$##7205759403792795921l_dBr})
SELFIFICATION (lq_anf$##7205759403792795921r_dBr, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1}, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1
                                                                                                                           && lq_tmp$x##506 == lq_anf$##7205759403792795921r_dBr})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795921l_dBr

d: lq_anf$##7205759403792795921r_dBr

t: {lq_tmp$x##547 : GHC.Prim.Int# | lq_tmp$x##547 == 1
                                 && lq_tmp$x##547 == lq_anf$##7205759403792795921l_dBr}

s: {lq_tmp$x##548 : GHC.Prim.Int# | lq_tmp$x##548 == 1
                                 && lq_tmp$x##548 == lq_anf$##7205759403792795921r_dBr}

p: []
Synth To CHECK
e: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xl_atA)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
   lq_anf$##7205759403792795922l_dBs)

d: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xr_atA)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
   lq_anf$##7205759403792795922r_dBs)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (lq_anf$##7205759403792795921r_dBr, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1}, {lq_tmp$x##506 : GHC.Prim.Int# | lq_tmp$x##506 == 1
                                                                                                                           && lq_tmp$x##506 == lq_anf$##7205759403792795921r_dBr})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Let qs: []
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##564:a -> lq_tmp$x##565:a -> {lq_tmp$x##559 : a | lq_tmp$x##559 == lq_tmp$x##564 + lq_tmp$x##565}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##575:a -> lq_tmp$x##576:a -> {lq_tmp$x##570 : a | lq_tmp$x##570 == lq_tmp$x##575 + lq_tmp$x##576}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##586:a -> lq_tmp$x##587:a -> {lq_tmp$x##581 : a | lq_tmp$x##581 == lq_tmp$x##586 + lq_tmp$x##587}

s: lq_tmp$x##596:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##597:GHC.Types.Int -> lq_tmp$x##598:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##597 + lq_tmp$x##598}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##608:a -> lq_tmp$x##609:a -> {lq_tmp$x##603 : a | lq_tmp$x##603 == lq_tmp$x##608 + lq_tmp$x##609}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##619:a -> lq_tmp$x##620:a -> {lq_tmp$x##614 : a | lq_tmp$x##614 == lq_tmp$x##619 + lq_tmp$x##620}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##629:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##630:GHC.Types.Int -> lq_tmp$x##631:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##630 + lq_tmp$x##631}

s: lq_tmp$x##640:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##641:GHC.Types.Int -> lq_tmp$x##642:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##641 + lq_tmp$x##642}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##652:a -> lq_tmp$x##653:a -> {lq_tmp$x##647 : a | lq_tmp$x##647 == lq_tmp$x##652 + lq_tmp$x##653}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##663:a -> lq_tmp$x##664:a -> {lq_tmp$x##658 : a | lq_tmp$x##658 == lq_tmp$x##663 + lq_tmp$x##664}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##674:a -> lq_tmp$x##675:a -> {lq_tmp$x##669 : a | lq_tmp$x##669 == lq_tmp$x##674 + lq_tmp$x##675}

s: lq_tmp$x##684:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##685:GHC.Types.Int -> lq_tmp$x##686:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##685 + lq_tmp$x##686}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##696:a -> lq_tmp$x##697:a -> {lq_tmp$x##691 : a | lq_tmp$x##691 == lq_tmp$x##696 + lq_tmp$x##697}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##707:a -> lq_tmp$x##708:a -> {lq_tmp$x##702 : a | lq_tmp$x##702 == lq_tmp$x##707 + lq_tmp$x##708}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##717:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##718:GHC.Types.Int -> lq_tmp$x##719:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##718 + lq_tmp$x##719}

d: lq_tmp$x##728:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##729:GHC.Types.Int -> lq_tmp$x##730:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##729 + lq_tmp$x##730}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##732 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##732 == GHC.Num.$fNumInt}

s: {lq_tmp$x##734 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##734 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

d: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

t: lq_tmp$x##718:GHC.Types.Int -> lq_tmp$x##719:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##718 + lq_tmp$x##719}

s: lq_tmp$x##729:GHC.Types.Int -> lq_tmp$x##730:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##729 + lq_tmp$x##730}

p: []
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##748:a -> lq_tmp$x##749:a -> {lq_tmp$x##743 : a | lq_tmp$x##743 == lq_tmp$x##748 + lq_tmp$x##749}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##759:a -> lq_tmp$x##760:a -> {lq_tmp$x##754 : a | lq_tmp$x##754 == lq_tmp$x##759 + lq_tmp$x##760}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##770:a -> lq_tmp$x##771:a -> {lq_tmp$x##765 : a | lq_tmp$x##765 == lq_tmp$x##770 + lq_tmp$x##771}

s: lq_tmp$x##780:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##781:GHC.Types.Int -> lq_tmp$x##782:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##781 + lq_tmp$x##782}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##792:a -> lq_tmp$x##793:a -> {lq_tmp$x##787 : a | lq_tmp$x##787 == lq_tmp$x##792 + lq_tmp$x##793}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##803:a -> lq_tmp$x##804:a -> {lq_tmp$x##798 : a | lq_tmp$x##798 == lq_tmp$x##803 + lq_tmp$x##804}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##813:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##814:GHC.Types.Int -> lq_tmp$x##815:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##814 + lq_tmp$x##815}

s: lq_tmp$x##824:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##825:GHC.Types.Int -> lq_tmp$x##826:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##825 + lq_tmp$x##826}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##836:a -> lq_tmp$x##837:a -> {lq_tmp$x##831 : a | lq_tmp$x##831 == lq_tmp$x##836 + lq_tmp$x##837}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##847:a -> lq_tmp$x##848:a -> {lq_tmp$x##842 : a | lq_tmp$x##842 == lq_tmp$x##847 + lq_tmp$x##848}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##858:a -> lq_tmp$x##859:a -> {lq_tmp$x##853 : a | lq_tmp$x##853 == lq_tmp$x##858 + lq_tmp$x##859}

s: lq_tmp$x##868:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##869:GHC.Types.Int -> lq_tmp$x##870:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##869 + lq_tmp$x##870}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##880:a -> lq_tmp$x##881:a -> {lq_tmp$x##875 : a | lq_tmp$x##875 == lq_tmp$x##880 + lq_tmp$x##881}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##891:a -> lq_tmp$x##892:a -> {lq_tmp$x##886 : a | lq_tmp$x##886 == lq_tmp$x##891 + lq_tmp$x##892}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##901:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##902:GHC.Types.Int -> lq_tmp$x##903:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##902 + lq_tmp$x##903}

d: lq_tmp$x##912:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##913:GHC.Types.Int -> lq_tmp$x##914:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##913 + lq_tmp$x##914}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##916 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##916 == GHC.Num.$fNumInt}

s: {lq_tmp$x##918 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##918 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##902:GHC.Types.Int -> lq_tmp$x##903:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##902 + lq_tmp$x##903}

d: lq_tmp$x##913:GHC.Types.Int -> lq_tmp$x##914:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##913 + lq_tmp$x##914}

t: []

s: xl_atA

p: xr_atA
SELFIFICATION (xl_atA, GHC.Types.Int, {VV##499 : GHC.Types.Int | VV##499 == xl_atA})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
SELFIFICATION (xl_atA, GHC.Types.Int, {VV##499 : GHC.Types.Int | VV##499 == xl_atA})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_atA

d: xr_atA

t: {lq_tmp$x##923 : GHC.Types.Int | lq_tmp$x##923 == xl_atA}

s: {lq_tmp$x##924 : GHC.Types.Int | lq_tmp$x##924 == xr_atA}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xl_atA)

d: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xr_atA)

t: lq_tmp$x##903:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xl_atA + lq_tmp$x##903}

s: lq_tmp$x##914:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xr_atA + lq_tmp$x##914}

p: []
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##936:a -> lq_tmp$x##937:a -> {lq_tmp$x##931 : a | lq_tmp$x##931 == lq_tmp$x##936 + lq_tmp$x##937}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##947:a -> lq_tmp$x##948:a -> {lq_tmp$x##942 : a | lq_tmp$x##942 == lq_tmp$x##947 + lq_tmp$x##948}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##958:a -> lq_tmp$x##959:a -> {lq_tmp$x##953 : a | lq_tmp$x##953 == lq_tmp$x##958 + lq_tmp$x##959}

s: lq_tmp$x##968:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##969:GHC.Types.Int -> lq_tmp$x##970:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##969 + lq_tmp$x##970}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##980:a -> lq_tmp$x##981:a -> {lq_tmp$x##975 : a | lq_tmp$x##975 == lq_tmp$x##980 + lq_tmp$x##981}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##991:a -> lq_tmp$x##992:a -> {lq_tmp$x##986 : a | lq_tmp$x##986 == lq_tmp$x##991 + lq_tmp$x##992}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##1001:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1002:GHC.Types.Int -> lq_tmp$x##1003:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1002 + lq_tmp$x##1003}

s: lq_tmp$x##1012:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1013:GHC.Types.Int -> lq_tmp$x##1014:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1013 + lq_tmp$x##1014}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1024:a -> lq_tmp$x##1025:a -> {lq_tmp$x##1019 : a | lq_tmp$x##1019 == lq_tmp$x##1024 + lq_tmp$x##1025}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1035:a -> lq_tmp$x##1036:a -> {lq_tmp$x##1030 : a | lq_tmp$x##1030 == lq_tmp$x##1035 + lq_tmp$x##1036}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1046:a -> lq_tmp$x##1047:a -> {lq_tmp$x##1041 : a | lq_tmp$x##1041 == lq_tmp$x##1046 + lq_tmp$x##1047}

s: lq_tmp$x##1056:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1057:GHC.Types.Int -> lq_tmp$x##1058:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1057 + lq_tmp$x##1058}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1068:a -> lq_tmp$x##1069:a -> {lq_tmp$x##1063 : a | lq_tmp$x##1063 == lq_tmp$x##1068 + lq_tmp$x##1069}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1079:a -> lq_tmp$x##1080:a -> {lq_tmp$x##1074 : a | lq_tmp$x##1074 == lq_tmp$x##1079 + lq_tmp$x##1080}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##1089:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1090:GHC.Types.Int -> lq_tmp$x##1091:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1090 + lq_tmp$x##1091}

d: lq_tmp$x##1100:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1101:GHC.Types.Int -> lq_tmp$x##1102:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1101 + lq_tmp$x##1102}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##1104 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1104 == GHC.Num.$fNumInt}

s: {lq_tmp$x##1106 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1106 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

d: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

t: lq_tmp$x##1090:GHC.Types.Int -> lq_tmp$x##1091:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1090 + lq_tmp$x##1091}

s: lq_tmp$x##1101:GHC.Types.Int -> lq_tmp$x##1102:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1101 + lq_tmp$x##1102}

p: []
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1120:a -> lq_tmp$x##1121:a -> {lq_tmp$x##1115 : a | lq_tmp$x##1115 == lq_tmp$x##1120 + lq_tmp$x##1121}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1131:a -> lq_tmp$x##1132:a -> {lq_tmp$x##1126 : a | lq_tmp$x##1126 == lq_tmp$x##1131 + lq_tmp$x##1132}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1142:a -> lq_tmp$x##1143:a -> {lq_tmp$x##1137 : a | lq_tmp$x##1137 == lq_tmp$x##1142 + lq_tmp$x##1143}

s: lq_tmp$x##1152:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1153:GHC.Types.Int -> lq_tmp$x##1154:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1153 + lq_tmp$x##1154}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1164:a -> lq_tmp$x##1165:a -> {lq_tmp$x##1159 : a | lq_tmp$x##1159 == lq_tmp$x##1164 + lq_tmp$x##1165}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1175:a -> lq_tmp$x##1176:a -> {lq_tmp$x##1170 : a | lq_tmp$x##1170 == lq_tmp$x##1175 + lq_tmp$x##1176}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##1185:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1186:GHC.Types.Int -> lq_tmp$x##1187:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1186 + lq_tmp$x##1187}

s: lq_tmp$x##1196:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1197:GHC.Types.Int -> lq_tmp$x##1198:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1197 + lq_tmp$x##1198}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1208:a -> lq_tmp$x##1209:a -> {lq_tmp$x##1203 : a | lq_tmp$x##1203 == lq_tmp$x##1208 + lq_tmp$x##1209}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1219:a -> lq_tmp$x##1220:a -> {lq_tmp$x##1214 : a | lq_tmp$x##1214 == lq_tmp$x##1219 + lq_tmp$x##1220}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1230:a -> lq_tmp$x##1231:a -> {lq_tmp$x##1225 : a | lq_tmp$x##1225 == lq_tmp$x##1230 + lq_tmp$x##1231}

s: lq_tmp$x##1240:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1241:GHC.Types.Int -> lq_tmp$x##1242:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1241 + lq_tmp$x##1242}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1252:a -> lq_tmp$x##1253:a -> {lq_tmp$x##1247 : a | lq_tmp$x##1247 == lq_tmp$x##1252 + lq_tmp$x##1253}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1263:a -> lq_tmp$x##1264:a -> {lq_tmp$x##1258 : a | lq_tmp$x##1258 == lq_tmp$x##1263 + lq_tmp$x##1264}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##1273:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1274:GHC.Types.Int -> lq_tmp$x##1275:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1274 + lq_tmp$x##1275}

d: lq_tmp$x##1284:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1285:GHC.Types.Int -> lq_tmp$x##1286:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1285 + lq_tmp$x##1286}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##1288 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1288 == GHC.Num.$fNumInt}

s: {lq_tmp$x##1290 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1290 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##1274:GHC.Types.Int -> lq_tmp$x##1275:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1274 + lq_tmp$x##1275}

d: lq_tmp$x##1285:GHC.Types.Int -> lq_tmp$x##1286:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1285 + lq_tmp$x##1286}

t: []

s: xl_atA

p: xr_atA
SELFIFICATION (xl_atA, GHC.Types.Int, {VV##499 : GHC.Types.Int | VV##499 == xl_atA})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
SELFIFICATION (xl_atA, GHC.Types.Int, {VV##499 : GHC.Types.Int | VV##499 == xl_atA})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_atA

d: xr_atA

t: {lq_tmp$x##1295 : GHC.Types.Int | lq_tmp$x##1295 == xl_atA}

s: {lq_tmp$x##1296 : GHC.Types.Int | lq_tmp$x##1296 == xr_atA}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##1275:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xl_atA + lq_tmp$x##1275}

d: lq_tmp$x##1286:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xr_atA + lq_tmp$x##1286}

t: []

s: lq_anf$##7205759403792795922l_dBs

p: lq_anf$##7205759403792795922r_dBs
SELFIFICATION (lq_anf$##7205759403792795922l_dBs, {lq_tmp$x##540 : GHC.Types.Int | lq_tmp$x##540 == lq_anf$##7205759403792795921l_dBr
                                                                     && lq_tmp$x##540 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr}, {lq_tmp$x##540 : GHC.Types.Int | lq_tmp$x##540 == lq_anf$##7205759403792795921l_dBr
                                                                                                                                                                           && lq_tmp$x##540 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr
                                                                                                                                                                           && lq_tmp$x##540 == lq_anf$##7205759403792795922l_dBs})
SELFIFICATION (lq_anf$##7205759403792795922r_dBs, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                     && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr}, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == lq_anf$##7205759403792795922r_dBs})
SELFIFICATION (lq_anf$##7205759403792795922l_dBs, {lq_tmp$x##540 : GHC.Types.Int | lq_tmp$x##540 == lq_anf$##7205759403792795921l_dBr
                                                                     && lq_tmp$x##540 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr}, {lq_tmp$x##540 : GHC.Types.Int | lq_tmp$x##540 == lq_anf$##7205759403792795921l_dBr
                                                                                                                                                                           && lq_tmp$x##540 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr
                                                                                                                                                                           && lq_tmp$x##540 == lq_anf$##7205759403792795922l_dBs})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
SELFIFICATION (lq_anf$##7205759403792795922r_dBs, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                     && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr}, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == lq_anf$##7205759403792795922r_dBs})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795922l_dBs

d: lq_anf$##7205759403792795922r_dBs

t: {lq_tmp$x##1299 : GHC.Types.Int | lq_tmp$x##1299 == lq_anf$##7205759403792795921l_dBr
                                  && lq_tmp$x##1299 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr
                                  && lq_tmp$x##1299 == lq_anf$##7205759403792795922l_dBs}

s: {lq_tmp$x##1300 : GHC.Types.Int | lq_tmp$x##1300 == lq_anf$##7205759403792795921r_dBr
                                  && lq_tmp$x##1300 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr
                                  && lq_tmp$x##1300 == lq_anf$##7205759403792795922r_dBs}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xl_atA)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
   lq_anf$##7205759403792795922l_dBs)

d: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xr_atA)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:16>
   lq_anf$##7205759403792795922r_dBs)

t: {VV : GHC.Types.Int | VV == xl_atA + lq_anf$##7205759403792795922l_dBs}

s: {VV : GHC.Types.Int | VV == xr_atA + lq_anf$##7205759403792795922r_dBs}

p: []
SELFIFICATION (lq_anf$##7205759403792795922r_dBs, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                     && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr}, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == lq_anf$##7205759403792795922r_dBs})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1312:a -> lq_tmp$x##1313:a -> {lq_tmp$x##1307 : a | lq_tmp$x##1307 == lq_tmp$x##1312 + lq_tmp$x##1313}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1323:a -> lq_tmp$x##1324:a -> {lq_tmp$x##1318 : a | lq_tmp$x##1318 == lq_tmp$x##1323 + lq_tmp$x##1324}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1334:a -> lq_tmp$x##1335:a -> {lq_tmp$x##1329 : a | lq_tmp$x##1329 == lq_tmp$x##1334 + lq_tmp$x##1335}

s: lq_tmp$x##1344:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1345:GHC.Types.Int -> lq_tmp$x##1346:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1345 + lq_tmp$x##1346}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1356:a -> lq_tmp$x##1357:a -> {lq_tmp$x##1351 : a | lq_tmp$x##1351 == lq_tmp$x##1356 + lq_tmp$x##1357}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1367:a -> lq_tmp$x##1368:a -> {lq_tmp$x##1362 : a | lq_tmp$x##1362 == lq_tmp$x##1367 + lq_tmp$x##1368}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##1377:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1378:GHC.Types.Int -> lq_tmp$x##1379:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1378 + lq_tmp$x##1379}

s: lq_tmp$x##1388:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1389:GHC.Types.Int -> lq_tmp$x##1390:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1389 + lq_tmp$x##1390}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1400:a -> lq_tmp$x##1401:a -> {lq_tmp$x##1395 : a | lq_tmp$x##1395 == lq_tmp$x##1400 + lq_tmp$x##1401}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1411:a -> lq_tmp$x##1412:a -> {lq_tmp$x##1406 : a | lq_tmp$x##1406 == lq_tmp$x##1411 + lq_tmp$x##1412}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1422:a -> lq_tmp$x##1423:a -> {lq_tmp$x##1417 : a | lq_tmp$x##1417 == lq_tmp$x##1422 + lq_tmp$x##1423}

s: lq_tmp$x##1432:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1433:GHC.Types.Int -> lq_tmp$x##1434:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1433 + lq_tmp$x##1434}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1444:a -> lq_tmp$x##1445:a -> {lq_tmp$x##1439 : a | lq_tmp$x##1439 == lq_tmp$x##1444 + lq_tmp$x##1445}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1455:a -> lq_tmp$x##1456:a -> {lq_tmp$x##1450 : a | lq_tmp$x##1450 == lq_tmp$x##1455 + lq_tmp$x##1456}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##1465:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1466:GHC.Types.Int -> lq_tmp$x##1467:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1466 + lq_tmp$x##1467}

d: lq_tmp$x##1476:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1477:GHC.Types.Int -> lq_tmp$x##1478:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1477 + lq_tmp$x##1478}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##1480 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1480 == GHC.Num.$fNumInt}

s: {lq_tmp$x##1482 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1482 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

d: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

t: lq_tmp$x##1466:GHC.Types.Int -> lq_tmp$x##1467:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1466 + lq_tmp$x##1467}

s: lq_tmp$x##1477:GHC.Types.Int -> lq_tmp$x##1478:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1477 + lq_tmp$x##1478}

p: []
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1496:a -> lq_tmp$x##1497:a -> {lq_tmp$x##1491 : a | lq_tmp$x##1491 == lq_tmp$x##1496 + lq_tmp$x##1497}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1507:a -> lq_tmp$x##1508:a -> {lq_tmp$x##1502 : a | lq_tmp$x##1502 == lq_tmp$x##1507 + lq_tmp$x##1508}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1518:a -> lq_tmp$x##1519:a -> {lq_tmp$x##1513 : a | lq_tmp$x##1513 == lq_tmp$x##1518 + lq_tmp$x##1519}

s: lq_tmp$x##1528:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1529:GHC.Types.Int -> lq_tmp$x##1530:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1529 + lq_tmp$x##1530}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1540:a -> lq_tmp$x##1541:a -> {lq_tmp$x##1535 : a | lq_tmp$x##1535 == lq_tmp$x##1540 + lq_tmp$x##1541}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1551:a -> lq_tmp$x##1552:a -> {lq_tmp$x##1546 : a | lq_tmp$x##1546 == lq_tmp$x##1551 + lq_tmp$x##1552}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##1561:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1562:GHC.Types.Int -> lq_tmp$x##1563:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1562 + lq_tmp$x##1563}

s: lq_tmp$x##1572:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1573:GHC.Types.Int -> lq_tmp$x##1574:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1573 + lq_tmp$x##1574}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1584:a -> lq_tmp$x##1585:a -> {lq_tmp$x##1579 : a | lq_tmp$x##1579 == lq_tmp$x##1584 + lq_tmp$x##1585}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1595:a -> lq_tmp$x##1596:a -> {lq_tmp$x##1590 : a | lq_tmp$x##1590 == lq_tmp$x##1595 + lq_tmp$x##1596}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1606:a -> lq_tmp$x##1607:a -> {lq_tmp$x##1601 : a | lq_tmp$x##1601 == lq_tmp$x##1606 + lq_tmp$x##1607}

s: lq_tmp$x##1616:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1617:GHC.Types.Int -> lq_tmp$x##1618:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1617 + lq_tmp$x##1618}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1628:a -> lq_tmp$x##1629:a -> {lq_tmp$x##1623 : a | lq_tmp$x##1623 == lq_tmp$x##1628 + lq_tmp$x##1629}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1639:a -> lq_tmp$x##1640:a -> {lq_tmp$x##1634 : a | lq_tmp$x##1634 == lq_tmp$x##1639 + lq_tmp$x##1640}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##1649:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1650:GHC.Types.Int -> lq_tmp$x##1651:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1650 + lq_tmp$x##1651}

d: lq_tmp$x##1660:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1661:GHC.Types.Int -> lq_tmp$x##1662:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1661 + lq_tmp$x##1662}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##1664 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1664 == GHC.Num.$fNumInt}

s: {lq_tmp$x##1666 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1666 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##1650:GHC.Types.Int -> lq_tmp$x##1651:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1650 + lq_tmp$x##1651}

d: lq_tmp$x##1661:GHC.Types.Int -> lq_tmp$x##1662:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1661 + lq_tmp$x##1662}

t: []

s: xl_atA

p: xr_atA
SELFIFICATION (xl_atA, GHC.Types.Int, {VV##499 : GHC.Types.Int | VV##499 == xl_atA})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
SELFIFICATION (xl_atA, GHC.Types.Int, {VV##499 : GHC.Types.Int | VV##499 == xl_atA})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_atA

d: xr_atA

t: {lq_tmp$x##1671 : GHC.Types.Int | lq_tmp$x##1671 == xl_atA}

s: {lq_tmp$x##1672 : GHC.Types.Int | lq_tmp$x##1672 == xr_atA}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xl_atA)

d: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:10:12>
   xr_atA)

t: lq_tmp$x##1651:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xl_atA + lq_tmp$x##1651}

s: lq_tmp$x##1662:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xr_atA + lq_tmp$x##1662}

p: []
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1684:a -> lq_tmp$x##1685:a -> {lq_tmp$x##1679 : a | lq_tmp$x##1679 == lq_tmp$x##1684 + lq_tmp$x##1685}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1695:a -> lq_tmp$x##1696:a -> {lq_tmp$x##1690 : a | lq_tmp$x##1690 == lq_tmp$x##1695 + lq_tmp$x##1696}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1706:a -> lq_tmp$x##1707:a -> {lq_tmp$x##1701 : a | lq_tmp$x##1701 == lq_tmp$x##1706 + lq_tmp$x##1707}

s: lq_tmp$x##1716:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1717:GHC.Types.Int -> lq_tmp$x##1718:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1717 + lq_tmp$x##1718}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1728:a -> lq_tmp$x##1729:a -> {lq_tmp$x##1723 : a | lq_tmp$x##1723 == lq_tmp$x##1728 + lq_tmp$x##1729}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1739:a -> lq_tmp$x##1740:a -> {lq_tmp$x##1734 : a | lq_tmp$x##1734 == lq_tmp$x##1739 + lq_tmp$x##1740}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##1749:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1750:GHC.Types.Int -> lq_tmp$x##1751:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1750 + lq_tmp$x##1751}

s: lq_tmp$x##1760:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1761:GHC.Types.Int -> lq_tmp$x##1762:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1761 + lq_tmp$x##1762}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1772:a -> lq_tmp$x##1773:a -> {lq_tmp$x##1767 : a | lq_tmp$x##1767 == lq_tmp$x##1772 + lq_tmp$x##1773}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1783:a -> lq_tmp$x##1784:a -> {lq_tmp$x##1778 : a | lq_tmp$x##1778 == lq_tmp$x##1783 + lq_tmp$x##1784}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1794:a -> lq_tmp$x##1795:a -> {lq_tmp$x##1789 : a | lq_tmp$x##1789 == lq_tmp$x##1794 + lq_tmp$x##1795}

s: lq_tmp$x##1804:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1805:GHC.Types.Int -> lq_tmp$x##1806:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1805 + lq_tmp$x##1806}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1816:a -> lq_tmp$x##1817:a -> {lq_tmp$x##1811 : a | lq_tmp$x##1811 == lq_tmp$x##1816 + lq_tmp$x##1817}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1827:a -> lq_tmp$x##1828:a -> {lq_tmp$x##1822 : a | lq_tmp$x##1822 == lq_tmp$x##1827 + lq_tmp$x##1828}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##1837:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1838:GHC.Types.Int -> lq_tmp$x##1839:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1838 + lq_tmp$x##1839}

d: lq_tmp$x##1848:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1849:GHC.Types.Int -> lq_tmp$x##1850:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1849 + lq_tmp$x##1850}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##1852 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1852 == GHC.Num.$fNumInt}

s: {lq_tmp$x##1854 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1854 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

d: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

t: lq_tmp$x##1838:GHC.Types.Int -> lq_tmp$x##1839:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1838 + lq_tmp$x##1839}

s: lq_tmp$x##1849:GHC.Types.Int -> lq_tmp$x##1850:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1849 + lq_tmp$x##1850}

p: []
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1868:a -> lq_tmp$x##1869:a -> {lq_tmp$x##1863 : a | lq_tmp$x##1863 == lq_tmp$x##1868 + lq_tmp$x##1869}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1879:a -> lq_tmp$x##1880:a -> {lq_tmp$x##1874 : a | lq_tmp$x##1874 == lq_tmp$x##1879 + lq_tmp$x##1880}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1890:a -> lq_tmp$x##1891:a -> {lq_tmp$x##1885 : a | lq_tmp$x##1885 == lq_tmp$x##1890 + lq_tmp$x##1891}

s: lq_tmp$x##1900:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1901:GHC.Types.Int -> lq_tmp$x##1902:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1901 + lq_tmp$x##1902}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1912:a -> lq_tmp$x##1913:a -> {lq_tmp$x##1907 : a | lq_tmp$x##1907 == lq_tmp$x##1912 + lq_tmp$x##1913}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1923:a -> lq_tmp$x##1924:a -> {lq_tmp$x##1918 : a | lq_tmp$x##1918 == lq_tmp$x##1923 + lq_tmp$x##1924}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##1933:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1934:GHC.Types.Int -> lq_tmp$x##1935:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1934 + lq_tmp$x##1935}

s: lq_tmp$x##1944:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1945:GHC.Types.Int -> lq_tmp$x##1946:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1945 + lq_tmp$x##1946}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1956:a -> lq_tmp$x##1957:a -> {lq_tmp$x##1951 : a | lq_tmp$x##1951 == lq_tmp$x##1956 + lq_tmp$x##1957}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##1967:a -> lq_tmp$x##1968:a -> {lq_tmp$x##1962 : a | lq_tmp$x##1962 == lq_tmp$x##1967 + lq_tmp$x##1968}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##1978:a -> lq_tmp$x##1979:a -> {lq_tmp$x##1973 : a | lq_tmp$x##1973 == lq_tmp$x##1978 + lq_tmp$x##1979}

s: lq_tmp$x##1988:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##1989:GHC.Types.Int -> lq_tmp$x##1990:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##1989 + lq_tmp$x##1990}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2000:a -> lq_tmp$x##2001:a -> {lq_tmp$x##1995 : a | lq_tmp$x##1995 == lq_tmp$x##2000 + lq_tmp$x##2001}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2011:a -> lq_tmp$x##2012:a -> {lq_tmp$x##2006 : a | lq_tmp$x##2006 == lq_tmp$x##2011 + lq_tmp$x##2012}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2021:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2022:GHC.Types.Int -> lq_tmp$x##2023:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2022 + lq_tmp$x##2023}

d: lq_tmp$x##2032:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2033:GHC.Types.Int -> lq_tmp$x##2034:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2033 + lq_tmp$x##2034}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##2036 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2036 == GHC.Num.$fNumInt}

s: {lq_tmp$x##2038 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2038 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2022:GHC.Types.Int -> lq_tmp$x##2023:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2022 + lq_tmp$x##2023}

d: lq_tmp$x##2033:GHC.Types.Int -> lq_tmp$x##2034:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2033 + lq_tmp$x##2034}

t: []

s: xl_atA

p: xr_atA
SELFIFICATION (xl_atA, GHC.Types.Int, {VV##499 : GHC.Types.Int | VV##499 == xl_atA})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
SELFIFICATION (xl_atA, GHC.Types.Int, {VV##499 : GHC.Types.Int | VV##499 == xl_atA})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_atA

d: xr_atA

t: {lq_tmp$x##2043 : GHC.Types.Int | lq_tmp$x##2043 == xl_atA}

s: {lq_tmp$x##2044 : GHC.Types.Int | lq_tmp$x##2044 == xr_atA}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2023:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xl_atA + lq_tmp$x##2023}

d: lq_tmp$x##2034:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xr_atA + lq_tmp$x##2034}

t: []

s: lq_anf$##7205759403792795922l_dBs

p: lq_anf$##7205759403792795922r_dBs
SELFIFICATION (lq_anf$##7205759403792795922l_dBs, {lq_tmp$x##540 : GHC.Types.Int | lq_tmp$x##540 == lq_anf$##7205759403792795921l_dBr
                                                                     && lq_tmp$x##540 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr}, {lq_tmp$x##540 : GHC.Types.Int | lq_tmp$x##540 == lq_anf$##7205759403792795921l_dBr
                                                                                                                                                                           && lq_tmp$x##540 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr
                                                                                                                                                                           && lq_tmp$x##540 == lq_anf$##7205759403792795922l_dBs})
SELFIFICATION (lq_anf$##7205759403792795922r_dBs, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                     && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr}, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == lq_anf$##7205759403792795922r_dBs})
SELFIFICATION (lq_anf$##7205759403792795922l_dBs, {lq_tmp$x##540 : GHC.Types.Int | lq_tmp$x##540 == lq_anf$##7205759403792795921l_dBr
                                                                     && lq_tmp$x##540 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr}, {lq_tmp$x##540 : GHC.Types.Int | lq_tmp$x##540 == lq_anf$##7205759403792795921l_dBr
                                                                                                                                                                           && lq_tmp$x##540 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr
                                                                                                                                                                           && lq_tmp$x##540 == lq_anf$##7205759403792795922l_dBs})
SELFIFICATION (xr_atA, GHC.Types.Int, {VV##500 : GHC.Types.Int | VV##500 == xr_atA})
SELFIFICATION (lq_anf$##7205759403792795922r_dBs, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                     && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr}, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == lq_anf$##7205759403792795922r_dBs})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795922l_dBs

d: lq_anf$##7205759403792795922r_dBs

t: {lq_tmp$x##2047 : GHC.Types.Int | lq_tmp$x##2047 == lq_anf$##7205759403792795921l_dBr
                                  && lq_tmp$x##2047 == GHC.Types.I# lq_anf$##7205759403792795921l_dBr
                                  && lq_tmp$x##2047 == lq_anf$##7205759403792795922l_dBs}

s: {lq_tmp$x##2048 : GHC.Types.Int | lq_tmp$x##2048 == lq_anf$##7205759403792795921r_dBr
                                  && lq_tmp$x##2048 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr
                                  && lq_tmp$x##2048 == lq_anf$##7205759403792795922r_dBs}

p: []
consRelSynth Unary synthed preds:[]
base RelSub
t: {VV : GHC.Types.Int | VV == xl_atA + lq_anf$##7205759403792795922l_dBs}

s: {VV : GHC.Types.Int | VV == xr_atA + lq_anf$##7205759403792795922r_dBs}

p: true

q: r1 < r2
SELFIFICATION (lq_anf$##7205759403792795922r_dBs, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                     && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr}, {lq_tmp$x##544 : GHC.Types.Int | lq_tmp$x##544 == lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == GHC.Types.I# lq_anf$##7205759403792795921r_dBr
                                                                                                                                                                           && lq_tmp$x##544 == lq_anf$##7205759403792795922r_dBs})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: 1#

d: 1#

t: {lq_tmp$x##2063 : GHC.Prim.Int# | lq_tmp$x##2063 == 1}

s: {lq_tmp$x##2064 : GHC.Prim.Int# | lq_tmp$x##2064 == 1}

p: []
Let To CHECK
e: let {
  lq_anf$##7205759403792795924 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795924
    = GHC.Types.I# lq_anf$##7205759403792795923l_dBt } in
break<1>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xl_auN)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
   lq_anf$##7205759403792795924)

d: let {
  lq_anf$##7205759403792795924 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795924
    = GHC.Types.I# lq_anf$##7205759403792795923r_dBt } in
break<1>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:1-19>
GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xr_auN)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
   lq_anf$##7205759403792795924)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
Let qs: []
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Types.I#

d: GHC.Types.I#

t: lq_tmp$x##2074:GHC.Prim.Int# -> {lq_tmp$x##2072 : GHC.Types.Int | lq_tmp$x##2072 == lq_tmp$x##2074
                                                                  && lq_tmp$x##2072 == GHC.Types.I# lq_tmp$x##2074}

s: lq_tmp$x##2078:GHC.Prim.Int# -> {lq_tmp$x##2076 : GHC.Types.Int | lq_tmp$x##2076 == lq_tmp$x##2078
                                                                  && lq_tmp$x##2076 == GHC.Types.I# lq_tmp$x##2078}

p: []
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2082:GHC.Prim.Int# -> {lq_tmp$x##2080 : GHC.Types.Int | lq_tmp$x##2080 == lq_tmp$x##2082
                                                                  && lq_tmp$x##2080 == GHC.Types.I# lq_tmp$x##2082}

d: lq_tmp$x##2086:GHC.Prim.Int# -> {lq_tmp$x##2084 : GHC.Types.Int | lq_tmp$x##2084 == lq_tmp$x##2086
                                                                  && lq_tmp$x##2084 == GHC.Types.I# lq_tmp$x##2086}

t: []

s: lq_anf$##7205759403792795923l_dBt

p: lq_anf$##7205759403792795923r_dBt
SELFIFICATION (lq_anf$##7205759403792795923l_dBt, {lq_tmp$x##2065 : GHC.Prim.Int# | lq_tmp$x##2065 == 1}, {lq_tmp$x##2065 : GHC.Prim.Int# | lq_tmp$x##2065 == 1
                                                                                                                              && lq_tmp$x##2065 == lq_anf$##7205759403792795923l_dBt})
SELFIFICATION (lq_anf$##7205759403792795923r_dBt, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1}, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1
                                                                                                                              && lq_tmp$x##2066 == lq_anf$##7205759403792795923r_dBt})
SELFIFICATION (lq_anf$##7205759403792795923l_dBt, {lq_tmp$x##2065 : GHC.Prim.Int# | lq_tmp$x##2065 == 1}, {lq_tmp$x##2065 : GHC.Prim.Int# | lq_tmp$x##2065 == 1
                                                                                                                              && lq_tmp$x##2065 == lq_anf$##7205759403792795923l_dBt})
SELFIFICATION (lq_anf$##7205759403792795923r_dBt, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1}, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1
                                                                                                                              && lq_tmp$x##2066 == lq_anf$##7205759403792795923r_dBt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795923l_dBt

d: lq_anf$##7205759403792795923r_dBt

t: {lq_tmp$x##2087 : GHC.Prim.Int# | lq_tmp$x##2087 == 1
                                  && lq_tmp$x##2087 == lq_anf$##7205759403792795923l_dBt}

s: {lq_tmp$x##2088 : GHC.Prim.Int# | lq_tmp$x##2088 == 1
                                  && lq_tmp$x##2088 == lq_anf$##7205759403792795923r_dBt}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Types.I# lq_anf$##7205759403792795923l_dBt

d: GHC.Types.I# lq_anf$##7205759403792795923r_dBt

t: {lq_tmp$x##2080 : GHC.Types.Int | lq_tmp$x##2080 == lq_anf$##7205759403792795923l_dBt
                                  && lq_tmp$x##2080 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt}

s: {lq_tmp$x##2084 : GHC.Types.Int | lq_tmp$x##2084 == lq_anf$##7205759403792795923r_dBt
                                  && lq_tmp$x##2084 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt}

p: []
SELFIFICATION (lq_anf$##7205759403792795923r_dBt, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1}, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1
                                                                                                                              && lq_tmp$x##2066 == lq_anf$##7205759403792795923r_dBt})
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Types.I#

d: GHC.Types.I#

t: lq_tmp$x##2094:GHC.Prim.Int# -> {lq_tmp$x##2092 : GHC.Types.Int | lq_tmp$x##2092 == lq_tmp$x##2094
                                                                  && lq_tmp$x##2092 == GHC.Types.I# lq_tmp$x##2094}

s: lq_tmp$x##2098:GHC.Prim.Int# -> {lq_tmp$x##2096 : GHC.Types.Int | lq_tmp$x##2096 == lq_tmp$x##2098
                                                                  && lq_tmp$x##2096 == GHC.Types.I# lq_tmp$x##2098}

p: []
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2102:GHC.Prim.Int# -> {lq_tmp$x##2100 : GHC.Types.Int | lq_tmp$x##2100 == lq_tmp$x##2102
                                                                  && lq_tmp$x##2100 == GHC.Types.I# lq_tmp$x##2102}

d: lq_tmp$x##2106:GHC.Prim.Int# -> {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_tmp$x##2106
                                                                  && lq_tmp$x##2104 == GHC.Types.I# lq_tmp$x##2106}

t: []

s: lq_anf$##7205759403792795923l_dBt

p: lq_anf$##7205759403792795923r_dBt
SELFIFICATION (lq_anf$##7205759403792795923l_dBt, {lq_tmp$x##2065 : GHC.Prim.Int# | lq_tmp$x##2065 == 1}, {lq_tmp$x##2065 : GHC.Prim.Int# | lq_tmp$x##2065 == 1
                                                                                                                              && lq_tmp$x##2065 == lq_anf$##7205759403792795923l_dBt})
SELFIFICATION (lq_anf$##7205759403792795923r_dBt, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1}, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1
                                                                                                                              && lq_tmp$x##2066 == lq_anf$##7205759403792795923r_dBt})
SELFIFICATION (lq_anf$##7205759403792795923l_dBt, {lq_tmp$x##2065 : GHC.Prim.Int# | lq_tmp$x##2065 == 1}, {lq_tmp$x##2065 : GHC.Prim.Int# | lq_tmp$x##2065 == 1
                                                                                                                              && lq_tmp$x##2065 == lq_anf$##7205759403792795923l_dBt})
SELFIFICATION (lq_anf$##7205759403792795923r_dBt, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1}, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1
                                                                                                                              && lq_tmp$x##2066 == lq_anf$##7205759403792795923r_dBt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795923l_dBt

d: lq_anf$##7205759403792795923r_dBt

t: {lq_tmp$x##2107 : GHC.Prim.Int# | lq_tmp$x##2107 == 1
                                  && lq_tmp$x##2107 == lq_anf$##7205759403792795923l_dBt}

s: {lq_tmp$x##2108 : GHC.Prim.Int# | lq_tmp$x##2108 == 1
                                  && lq_tmp$x##2108 == lq_anf$##7205759403792795923r_dBt}

p: []
Synth To CHECK
e: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xl_auN)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
   lq_anf$##7205759403792795924l_dBu)

d: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xr_auN)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
   lq_anf$##7205759403792795924r_dBu)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (lq_anf$##7205759403792795923r_dBt, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1}, {lq_tmp$x##2066 : GHC.Prim.Int# | lq_tmp$x##2066 == 1
                                                                                                                              && lq_tmp$x##2066 == lq_anf$##7205759403792795923r_dBt})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Let qs: []
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2124:a -> lq_tmp$x##2125:a -> {lq_tmp$x##2119 : a | lq_tmp$x##2119 == lq_tmp$x##2124 + lq_tmp$x##2125}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2135:a -> lq_tmp$x##2136:a -> {lq_tmp$x##2130 : a | lq_tmp$x##2130 == lq_tmp$x##2135 + lq_tmp$x##2136}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2146:a -> lq_tmp$x##2147:a -> {lq_tmp$x##2141 : a | lq_tmp$x##2141 == lq_tmp$x##2146 + lq_tmp$x##2147}

s: lq_tmp$x##2156:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2157:GHC.Types.Int -> lq_tmp$x##2158:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2157 + lq_tmp$x##2158}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2168:a -> lq_tmp$x##2169:a -> {lq_tmp$x##2163 : a | lq_tmp$x##2163 == lq_tmp$x##2168 + lq_tmp$x##2169}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2179:a -> lq_tmp$x##2180:a -> {lq_tmp$x##2174 : a | lq_tmp$x##2174 == lq_tmp$x##2179 + lq_tmp$x##2180}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##2189:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2190:GHC.Types.Int -> lq_tmp$x##2191:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2190 + lq_tmp$x##2191}

s: lq_tmp$x##2200:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2201:GHC.Types.Int -> lq_tmp$x##2202:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2201 + lq_tmp$x##2202}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2212:a -> lq_tmp$x##2213:a -> {lq_tmp$x##2207 : a | lq_tmp$x##2207 == lq_tmp$x##2212 + lq_tmp$x##2213}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2223:a -> lq_tmp$x##2224:a -> {lq_tmp$x##2218 : a | lq_tmp$x##2218 == lq_tmp$x##2223 + lq_tmp$x##2224}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2234:a -> lq_tmp$x##2235:a -> {lq_tmp$x##2229 : a | lq_tmp$x##2229 == lq_tmp$x##2234 + lq_tmp$x##2235}

s: lq_tmp$x##2244:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2245:GHC.Types.Int -> lq_tmp$x##2246:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2245 + lq_tmp$x##2246}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2256:a -> lq_tmp$x##2257:a -> {lq_tmp$x##2251 : a | lq_tmp$x##2251 == lq_tmp$x##2256 + lq_tmp$x##2257}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2267:a -> lq_tmp$x##2268:a -> {lq_tmp$x##2262 : a | lq_tmp$x##2262 == lq_tmp$x##2267 + lq_tmp$x##2268}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2277:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2278:GHC.Types.Int -> lq_tmp$x##2279:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2278 + lq_tmp$x##2279}

d: lq_tmp$x##2288:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2289:GHC.Types.Int -> lq_tmp$x##2290:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2289 + lq_tmp$x##2290}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##2292 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2292 == GHC.Num.$fNumInt}

s: {lq_tmp$x##2294 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2294 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

d: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

t: lq_tmp$x##2278:GHC.Types.Int -> lq_tmp$x##2279:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2278 + lq_tmp$x##2279}

s: lq_tmp$x##2289:GHC.Types.Int -> lq_tmp$x##2290:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2289 + lq_tmp$x##2290}

p: []
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2308:a -> lq_tmp$x##2309:a -> {lq_tmp$x##2303 : a | lq_tmp$x##2303 == lq_tmp$x##2308 + lq_tmp$x##2309}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2319:a -> lq_tmp$x##2320:a -> {lq_tmp$x##2314 : a | lq_tmp$x##2314 == lq_tmp$x##2319 + lq_tmp$x##2320}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2330:a -> lq_tmp$x##2331:a -> {lq_tmp$x##2325 : a | lq_tmp$x##2325 == lq_tmp$x##2330 + lq_tmp$x##2331}

s: lq_tmp$x##2340:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2341:GHC.Types.Int -> lq_tmp$x##2342:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2341 + lq_tmp$x##2342}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2352:a -> lq_tmp$x##2353:a -> {lq_tmp$x##2347 : a | lq_tmp$x##2347 == lq_tmp$x##2352 + lq_tmp$x##2353}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2363:a -> lq_tmp$x##2364:a -> {lq_tmp$x##2358 : a | lq_tmp$x##2358 == lq_tmp$x##2363 + lq_tmp$x##2364}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##2373:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2374:GHC.Types.Int -> lq_tmp$x##2375:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2374 + lq_tmp$x##2375}

s: lq_tmp$x##2384:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2385:GHC.Types.Int -> lq_tmp$x##2386:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2385 + lq_tmp$x##2386}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2396:a -> lq_tmp$x##2397:a -> {lq_tmp$x##2391 : a | lq_tmp$x##2391 == lq_tmp$x##2396 + lq_tmp$x##2397}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2407:a -> lq_tmp$x##2408:a -> {lq_tmp$x##2402 : a | lq_tmp$x##2402 == lq_tmp$x##2407 + lq_tmp$x##2408}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2418:a -> lq_tmp$x##2419:a -> {lq_tmp$x##2413 : a | lq_tmp$x##2413 == lq_tmp$x##2418 + lq_tmp$x##2419}

s: lq_tmp$x##2428:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2429:GHC.Types.Int -> lq_tmp$x##2430:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2429 + lq_tmp$x##2430}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2440:a -> lq_tmp$x##2441:a -> {lq_tmp$x##2435 : a | lq_tmp$x##2435 == lq_tmp$x##2440 + lq_tmp$x##2441}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2451:a -> lq_tmp$x##2452:a -> {lq_tmp$x##2446 : a | lq_tmp$x##2446 == lq_tmp$x##2451 + lq_tmp$x##2452}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2461:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2462:GHC.Types.Int -> lq_tmp$x##2463:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2462 + lq_tmp$x##2463}

d: lq_tmp$x##2472:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2473:GHC.Types.Int -> lq_tmp$x##2474:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2473 + lq_tmp$x##2474}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##2476 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2476 == GHC.Num.$fNumInt}

s: {lq_tmp$x##2478 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2478 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2462:GHC.Types.Int -> lq_tmp$x##2463:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2462 + lq_tmp$x##2463}

d: lq_tmp$x##2473:GHC.Types.Int -> lq_tmp$x##2474:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2473 + lq_tmp$x##2474}

t: []

s: xl_auN

p: xr_auN
SELFIFICATION (xl_auN, GHC.Types.Int, {VV##2058 : GHC.Types.Int | VV##2058 == xl_auN})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
SELFIFICATION (xl_auN, GHC.Types.Int, {VV##2058 : GHC.Types.Int | VV##2058 == xl_auN})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auN

d: xr_auN

t: {lq_tmp$x##2483 : GHC.Types.Int | lq_tmp$x##2483 == xl_auN}

s: {lq_tmp$x##2484 : GHC.Types.Int | lq_tmp$x##2484 == xr_auN}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xl_auN)

d: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xr_auN)

t: lq_tmp$x##2463:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xl_auN + lq_tmp$x##2463}

s: lq_tmp$x##2474:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xr_auN + lq_tmp$x##2474}

p: []
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2496:a -> lq_tmp$x##2497:a -> {lq_tmp$x##2491 : a | lq_tmp$x##2491 == lq_tmp$x##2496 + lq_tmp$x##2497}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2507:a -> lq_tmp$x##2508:a -> {lq_tmp$x##2502 : a | lq_tmp$x##2502 == lq_tmp$x##2507 + lq_tmp$x##2508}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2518:a -> lq_tmp$x##2519:a -> {lq_tmp$x##2513 : a | lq_tmp$x##2513 == lq_tmp$x##2518 + lq_tmp$x##2519}

s: lq_tmp$x##2528:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2529:GHC.Types.Int -> lq_tmp$x##2530:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2529 + lq_tmp$x##2530}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2540:a -> lq_tmp$x##2541:a -> {lq_tmp$x##2535 : a | lq_tmp$x##2535 == lq_tmp$x##2540 + lq_tmp$x##2541}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2551:a -> lq_tmp$x##2552:a -> {lq_tmp$x##2546 : a | lq_tmp$x##2546 == lq_tmp$x##2551 + lq_tmp$x##2552}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##2561:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2562:GHC.Types.Int -> lq_tmp$x##2563:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2562 + lq_tmp$x##2563}

s: lq_tmp$x##2572:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2573:GHC.Types.Int -> lq_tmp$x##2574:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2573 + lq_tmp$x##2574}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2584:a -> lq_tmp$x##2585:a -> {lq_tmp$x##2579 : a | lq_tmp$x##2579 == lq_tmp$x##2584 + lq_tmp$x##2585}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2595:a -> lq_tmp$x##2596:a -> {lq_tmp$x##2590 : a | lq_tmp$x##2590 == lq_tmp$x##2595 + lq_tmp$x##2596}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2606:a -> lq_tmp$x##2607:a -> {lq_tmp$x##2601 : a | lq_tmp$x##2601 == lq_tmp$x##2606 + lq_tmp$x##2607}

s: lq_tmp$x##2616:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2617:GHC.Types.Int -> lq_tmp$x##2618:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2617 + lq_tmp$x##2618}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2628:a -> lq_tmp$x##2629:a -> {lq_tmp$x##2623 : a | lq_tmp$x##2623 == lq_tmp$x##2628 + lq_tmp$x##2629}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2639:a -> lq_tmp$x##2640:a -> {lq_tmp$x##2634 : a | lq_tmp$x##2634 == lq_tmp$x##2639 + lq_tmp$x##2640}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2649:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2650:GHC.Types.Int -> lq_tmp$x##2651:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2650 + lq_tmp$x##2651}

d: lq_tmp$x##2660:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2661:GHC.Types.Int -> lq_tmp$x##2662:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2661 + lq_tmp$x##2662}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##2664 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2664 == GHC.Num.$fNumInt}

s: {lq_tmp$x##2666 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2666 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

d: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

t: lq_tmp$x##2650:GHC.Types.Int -> lq_tmp$x##2651:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2650 + lq_tmp$x##2651}

s: lq_tmp$x##2661:GHC.Types.Int -> lq_tmp$x##2662:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2661 + lq_tmp$x##2662}

p: []
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2680:a -> lq_tmp$x##2681:a -> {lq_tmp$x##2675 : a | lq_tmp$x##2675 == lq_tmp$x##2680 + lq_tmp$x##2681}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2691:a -> lq_tmp$x##2692:a -> {lq_tmp$x##2686 : a | lq_tmp$x##2686 == lq_tmp$x##2691 + lq_tmp$x##2692}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2702:a -> lq_tmp$x##2703:a -> {lq_tmp$x##2697 : a | lq_tmp$x##2697 == lq_tmp$x##2702 + lq_tmp$x##2703}

s: lq_tmp$x##2712:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2713:GHC.Types.Int -> lq_tmp$x##2714:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2713 + lq_tmp$x##2714}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2724:a -> lq_tmp$x##2725:a -> {lq_tmp$x##2719 : a | lq_tmp$x##2719 == lq_tmp$x##2724 + lq_tmp$x##2725}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2735:a -> lq_tmp$x##2736:a -> {lq_tmp$x##2730 : a | lq_tmp$x##2730 == lq_tmp$x##2735 + lq_tmp$x##2736}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##2745:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2746:GHC.Types.Int -> lq_tmp$x##2747:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2746 + lq_tmp$x##2747}

s: lq_tmp$x##2756:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2757:GHC.Types.Int -> lq_tmp$x##2758:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2757 + lq_tmp$x##2758}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2768:a -> lq_tmp$x##2769:a -> {lq_tmp$x##2763 : a | lq_tmp$x##2763 == lq_tmp$x##2768 + lq_tmp$x##2769}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2779:a -> lq_tmp$x##2780:a -> {lq_tmp$x##2774 : a | lq_tmp$x##2774 == lq_tmp$x##2779 + lq_tmp$x##2780}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2790:a -> lq_tmp$x##2791:a -> {lq_tmp$x##2785 : a | lq_tmp$x##2785 == lq_tmp$x##2790 + lq_tmp$x##2791}

s: lq_tmp$x##2800:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2801:GHC.Types.Int -> lq_tmp$x##2802:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2801 + lq_tmp$x##2802}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2812:a -> lq_tmp$x##2813:a -> {lq_tmp$x##2807 : a | lq_tmp$x##2807 == lq_tmp$x##2812 + lq_tmp$x##2813}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2823:a -> lq_tmp$x##2824:a -> {lq_tmp$x##2818 : a | lq_tmp$x##2818 == lq_tmp$x##2823 + lq_tmp$x##2824}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2833:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2834:GHC.Types.Int -> lq_tmp$x##2835:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2834 + lq_tmp$x##2835}

d: lq_tmp$x##2844:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2845:GHC.Types.Int -> lq_tmp$x##2846:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2845 + lq_tmp$x##2846}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##2848 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2848 == GHC.Num.$fNumInt}

s: {lq_tmp$x##2850 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##2850 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2834:GHC.Types.Int -> lq_tmp$x##2835:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2834 + lq_tmp$x##2835}

d: lq_tmp$x##2845:GHC.Types.Int -> lq_tmp$x##2846:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2845 + lq_tmp$x##2846}

t: []

s: xl_auN

p: xr_auN
SELFIFICATION (xl_auN, GHC.Types.Int, {VV##2058 : GHC.Types.Int | VV##2058 == xl_auN})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
SELFIFICATION (xl_auN, GHC.Types.Int, {VV##2058 : GHC.Types.Int | VV##2058 == xl_auN})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auN

d: xr_auN

t: {lq_tmp$x##2855 : GHC.Types.Int | lq_tmp$x##2855 == xl_auN}

s: {lq_tmp$x##2856 : GHC.Types.Int | lq_tmp$x##2856 == xr_auN}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##2835:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xl_auN + lq_tmp$x##2835}

d: lq_tmp$x##2846:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xr_auN + lq_tmp$x##2846}

t: []

s: lq_anf$##7205759403792795924l_dBu

p: lq_anf$##7205759403792795924r_dBu
SELFIFICATION (lq_anf$##7205759403792795924l_dBu, {lq_tmp$x##2100 : GHC.Types.Int | lq_tmp$x##2100 == lq_anf$##7205759403792795923l_dBt
                                                                      && lq_tmp$x##2100 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt}, {lq_tmp$x##2100 : GHC.Types.Int | lq_tmp$x##2100 == lq_anf$##7205759403792795923l_dBt
                                                                                                                                                                              && lq_tmp$x##2100 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt
                                                                                                                                                                              && lq_tmp$x##2100 == lq_anf$##7205759403792795924l_dBu})
SELFIFICATION (lq_anf$##7205759403792795924r_dBu, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                      && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt}, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == lq_anf$##7205759403792795924r_dBu})
SELFIFICATION (lq_anf$##7205759403792795924l_dBu, {lq_tmp$x##2100 : GHC.Types.Int | lq_tmp$x##2100 == lq_anf$##7205759403792795923l_dBt
                                                                      && lq_tmp$x##2100 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt}, {lq_tmp$x##2100 : GHC.Types.Int | lq_tmp$x##2100 == lq_anf$##7205759403792795923l_dBt
                                                                                                                                                                              && lq_tmp$x##2100 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt
                                                                                                                                                                              && lq_tmp$x##2100 == lq_anf$##7205759403792795924l_dBu})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
SELFIFICATION (lq_anf$##7205759403792795924r_dBu, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                      && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt}, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == lq_anf$##7205759403792795924r_dBu})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795924l_dBu

d: lq_anf$##7205759403792795924r_dBu

t: {lq_tmp$x##2859 : GHC.Types.Int | lq_tmp$x##2859 == lq_anf$##7205759403792795923l_dBt
                                  && lq_tmp$x##2859 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt
                                  && lq_tmp$x##2859 == lq_anf$##7205759403792795924l_dBu}

s: {lq_tmp$x##2860 : GHC.Types.Int | lq_tmp$x##2860 == lq_anf$##7205759403792795923r_dBt
                                  && lq_tmp$x##2860 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt
                                  && lq_tmp$x##2860 == lq_anf$##7205759403792795924r_dBu}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xl_auN)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
   lq_anf$##7205759403792795924l_dBu)

d: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xr_auN)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:19>
   lq_anf$##7205759403792795924r_dBu)

t: {VV : GHC.Types.Int | VV == xl_auN + lq_anf$##7205759403792795924l_dBu}

s: {VV : GHC.Types.Int | VV == xr_auN + lq_anf$##7205759403792795924r_dBu}

p: []
SELFIFICATION (lq_anf$##7205759403792795924r_dBu, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                      && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt}, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == lq_anf$##7205759403792795924r_dBu})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2872:a -> lq_tmp$x##2873:a -> {lq_tmp$x##2867 : a | lq_tmp$x##2867 == lq_tmp$x##2872 + lq_tmp$x##2873}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2883:a -> lq_tmp$x##2884:a -> {lq_tmp$x##2878 : a | lq_tmp$x##2878 == lq_tmp$x##2883 + lq_tmp$x##2884}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2894:a -> lq_tmp$x##2895:a -> {lq_tmp$x##2889 : a | lq_tmp$x##2889 == lq_tmp$x##2894 + lq_tmp$x##2895}

s: lq_tmp$x##2904:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2905:GHC.Types.Int -> lq_tmp$x##2906:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2905 + lq_tmp$x##2906}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2916:a -> lq_tmp$x##2917:a -> {lq_tmp$x##2911 : a | lq_tmp$x##2911 == lq_tmp$x##2916 + lq_tmp$x##2917}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2927:a -> lq_tmp$x##2928:a -> {lq_tmp$x##2922 : a | lq_tmp$x##2922 == lq_tmp$x##2927 + lq_tmp$x##2928}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##2937:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2938:GHC.Types.Int -> lq_tmp$x##2939:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2938 + lq_tmp$x##2939}

s: lq_tmp$x##2948:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2949:GHC.Types.Int -> lq_tmp$x##2950:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2949 + lq_tmp$x##2950}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2960:a -> lq_tmp$x##2961:a -> {lq_tmp$x##2955 : a | lq_tmp$x##2955 == lq_tmp$x##2960 + lq_tmp$x##2961}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##2971:a -> lq_tmp$x##2972:a -> {lq_tmp$x##2966 : a | lq_tmp$x##2966 == lq_tmp$x##2971 + lq_tmp$x##2972}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##2982:a -> lq_tmp$x##2983:a -> {lq_tmp$x##2977 : a | lq_tmp$x##2977 == lq_tmp$x##2982 + lq_tmp$x##2983}

s: lq_tmp$x##2992:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##2993:GHC.Types.Int -> lq_tmp$x##2994:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##2993 + lq_tmp$x##2994}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3004:a -> lq_tmp$x##3005:a -> {lq_tmp$x##2999 : a | lq_tmp$x##2999 == lq_tmp$x##3004 + lq_tmp$x##3005}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3015:a -> lq_tmp$x##3016:a -> {lq_tmp$x##3010 : a | lq_tmp$x##3010 == lq_tmp$x##3015 + lq_tmp$x##3016}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##3025:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3026:GHC.Types.Int -> lq_tmp$x##3027:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3026 + lq_tmp$x##3027}

d: lq_tmp$x##3036:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3037:GHC.Types.Int -> lq_tmp$x##3038:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3037 + lq_tmp$x##3038}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##3040 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##3040 == GHC.Num.$fNumInt}

s: {lq_tmp$x##3042 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##3042 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

d: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

t: lq_tmp$x##3026:GHC.Types.Int -> lq_tmp$x##3027:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3026 + lq_tmp$x##3027}

s: lq_tmp$x##3037:GHC.Types.Int -> lq_tmp$x##3038:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3037 + lq_tmp$x##3038}

p: []
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3056:a -> lq_tmp$x##3057:a -> {lq_tmp$x##3051 : a | lq_tmp$x##3051 == lq_tmp$x##3056 + lq_tmp$x##3057}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3067:a -> lq_tmp$x##3068:a -> {lq_tmp$x##3062 : a | lq_tmp$x##3062 == lq_tmp$x##3067 + lq_tmp$x##3068}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3078:a -> lq_tmp$x##3079:a -> {lq_tmp$x##3073 : a | lq_tmp$x##3073 == lq_tmp$x##3078 + lq_tmp$x##3079}

s: lq_tmp$x##3088:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3089:GHC.Types.Int -> lq_tmp$x##3090:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3089 + lq_tmp$x##3090}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3100:a -> lq_tmp$x##3101:a -> {lq_tmp$x##3095 : a | lq_tmp$x##3095 == lq_tmp$x##3100 + lq_tmp$x##3101}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3111:a -> lq_tmp$x##3112:a -> {lq_tmp$x##3106 : a | lq_tmp$x##3106 == lq_tmp$x##3111 + lq_tmp$x##3112}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##3121:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3122:GHC.Types.Int -> lq_tmp$x##3123:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3122 + lq_tmp$x##3123}

s: lq_tmp$x##3132:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3133:GHC.Types.Int -> lq_tmp$x##3134:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3133 + lq_tmp$x##3134}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3144:a -> lq_tmp$x##3145:a -> {lq_tmp$x##3139 : a | lq_tmp$x##3139 == lq_tmp$x##3144 + lq_tmp$x##3145}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3155:a -> lq_tmp$x##3156:a -> {lq_tmp$x##3150 : a | lq_tmp$x##3150 == lq_tmp$x##3155 + lq_tmp$x##3156}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3166:a -> lq_tmp$x##3167:a -> {lq_tmp$x##3161 : a | lq_tmp$x##3161 == lq_tmp$x##3166 + lq_tmp$x##3167}

s: lq_tmp$x##3176:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3177:GHC.Types.Int -> lq_tmp$x##3178:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3177 + lq_tmp$x##3178}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3188:a -> lq_tmp$x##3189:a -> {lq_tmp$x##3183 : a | lq_tmp$x##3183 == lq_tmp$x##3188 + lq_tmp$x##3189}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3199:a -> lq_tmp$x##3200:a -> {lq_tmp$x##3194 : a | lq_tmp$x##3194 == lq_tmp$x##3199 + lq_tmp$x##3200}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##3209:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3210:GHC.Types.Int -> lq_tmp$x##3211:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3210 + lq_tmp$x##3211}

d: lq_tmp$x##3220:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3221:GHC.Types.Int -> lq_tmp$x##3222:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3221 + lq_tmp$x##3222}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##3224 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##3224 == GHC.Num.$fNumInt}

s: {lq_tmp$x##3226 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##3226 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##3210:GHC.Types.Int -> lq_tmp$x##3211:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3210 + lq_tmp$x##3211}

d: lq_tmp$x##3221:GHC.Types.Int -> lq_tmp$x##3222:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3221 + lq_tmp$x##3222}

t: []

s: xl_auN

p: xr_auN
SELFIFICATION (xl_auN, GHC.Types.Int, {VV##2058 : GHC.Types.Int | VV##2058 == xl_auN})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
SELFIFICATION (xl_auN, GHC.Types.Int, {VV##2058 : GHC.Types.Int | VV##2058 == xl_auN})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auN

d: xr_auN

t: {lq_tmp$x##3231 : GHC.Types.Int | lq_tmp$x##3231 == xl_auN}

s: {lq_tmp$x##3232 : GHC.Types.Int | lq_tmp$x##3232 == xr_auN}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xl_auN)

d: GHC.Num.+
  @ GHC.Types.Int
  GHC.Num.$fNumInt
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:15:15>
   xr_auN)

t: lq_tmp$x##3211:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xl_auN + lq_tmp$x##3211}

s: lq_tmp$x##3222:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xr_auN + lq_tmp$x##3222}

p: []
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3244:a -> lq_tmp$x##3245:a -> {lq_tmp$x##3239 : a | lq_tmp$x##3239 == lq_tmp$x##3244 + lq_tmp$x##3245}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3255:a -> lq_tmp$x##3256:a -> {lq_tmp$x##3250 : a | lq_tmp$x##3250 == lq_tmp$x##3255 + lq_tmp$x##3256}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3266:a -> lq_tmp$x##3267:a -> {lq_tmp$x##3261 : a | lq_tmp$x##3261 == lq_tmp$x##3266 + lq_tmp$x##3267}

s: lq_tmp$x##3276:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3277:GHC.Types.Int -> lq_tmp$x##3278:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3277 + lq_tmp$x##3278}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3288:a -> lq_tmp$x##3289:a -> {lq_tmp$x##3283 : a | lq_tmp$x##3283 == lq_tmp$x##3288 + lq_tmp$x##3289}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3299:a -> lq_tmp$x##3300:a -> {lq_tmp$x##3294 : a | lq_tmp$x##3294 == lq_tmp$x##3299 + lq_tmp$x##3300}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##3309:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3310:GHC.Types.Int -> lq_tmp$x##3311:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3310 + lq_tmp$x##3311}

s: lq_tmp$x##3320:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3321:GHC.Types.Int -> lq_tmp$x##3322:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3321 + lq_tmp$x##3322}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3332:a -> lq_tmp$x##3333:a -> {lq_tmp$x##3327 : a | lq_tmp$x##3327 == lq_tmp$x##3332 + lq_tmp$x##3333}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3343:a -> lq_tmp$x##3344:a -> {lq_tmp$x##3338 : a | lq_tmp$x##3338 == lq_tmp$x##3343 + lq_tmp$x##3344}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3354:a -> lq_tmp$x##3355:a -> {lq_tmp$x##3349 : a | lq_tmp$x##3349 == lq_tmp$x##3354 + lq_tmp$x##3355}

s: lq_tmp$x##3364:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3365:GHC.Types.Int -> lq_tmp$x##3366:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3365 + lq_tmp$x##3366}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3376:a -> lq_tmp$x##3377:a -> {lq_tmp$x##3371 : a | lq_tmp$x##3371 == lq_tmp$x##3376 + lq_tmp$x##3377}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3387:a -> lq_tmp$x##3388:a -> {lq_tmp$x##3382 : a | lq_tmp$x##3382 == lq_tmp$x##3387 + lq_tmp$x##3388}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##3397:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3398:GHC.Types.Int -> lq_tmp$x##3399:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3398 + lq_tmp$x##3399}

d: lq_tmp$x##3408:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3409:GHC.Types.Int -> lq_tmp$x##3410:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3409 + lq_tmp$x##3410}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##3412 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##3412 == GHC.Num.$fNumInt}

s: {lq_tmp$x##3414 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##3414 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

d: GHC.Num.+ @ GHC.Types.Int GHC.Num.$fNumInt

t: lq_tmp$x##3398:GHC.Types.Int -> lq_tmp$x##3399:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3398 + lq_tmp$x##3399}

s: lq_tmp$x##3409:GHC.Types.Int -> lq_tmp$x##3410:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3409 + lq_tmp$x##3410}

p: []
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3428:a -> lq_tmp$x##3429:a -> {lq_tmp$x##3423 : a | lq_tmp$x##3423 == lq_tmp$x##3428 + lq_tmp$x##3429}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3439:a -> lq_tmp$x##3440:a -> {lq_tmp$x##3434 : a | lq_tmp$x##3434 == lq_tmp$x##3439 + lq_tmp$x##3440}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3450:a -> lq_tmp$x##3451:a -> {lq_tmp$x##3445 : a | lq_tmp$x##3445 == lq_tmp$x##3450 + lq_tmp$x##3451}

s: lq_tmp$x##3460:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3461:GHC.Types.Int -> lq_tmp$x##3462:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3461 + lq_tmp$x##3462}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3472:a -> lq_tmp$x##3473:a -> {lq_tmp$x##3467 : a | lq_tmp$x##3467 == lq_tmp$x##3472 + lq_tmp$x##3473}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3483:a -> lq_tmp$x##3484:a -> {lq_tmp$x##3478 : a | lq_tmp$x##3478 == lq_tmp$x##3483 + lq_tmp$x##3484}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty L To SYNTH
e: GHC.Num.+ @ GHC.Types.Int

d: GHC.Num.+ @ GHC.Types.Int

t: lq_tmp$x##3493:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3494:GHC.Types.Int -> lq_tmp$x##3495:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3494 + lq_tmp$x##3495}

s: lq_tmp$x##3504:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3505:GHC.Types.Int -> lq_tmp$x##3506:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3505 + lq_tmp$x##3506}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3516:a -> lq_tmp$x##3517:a -> {lq_tmp$x##3511 : a | lq_tmp$x##3511 == lq_tmp$x##3516 + lq_tmp$x##3517}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3527:a -> lq_tmp$x##3528:a -> {lq_tmp$x##3522 : a | lq_tmp$x##3522 == lq_tmp$x##3527 + lq_tmp$x##3528}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
App Ty R To SYNTH
e: GHC.Num.+

d: GHC.Num.+ @ GHC.Types.Int

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3538:a -> lq_tmp$x##3539:a -> {lq_tmp$x##3533 : a | lq_tmp$x##3533 == lq_tmp$x##3538 + lq_tmp$x##3539}

s: lq_tmp$x##3548:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3549:GHC.Types.Int -> lq_tmp$x##3550:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3549 + lq_tmp$x##3550}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.+

d: GHC.Num.+

t: forall a .
(Num<[]> a) =>
lq_tmp$x##3560:a -> lq_tmp$x##3561:a -> {lq_tmp$x##3555 : a | lq_tmp$x##3555 == lq_tmp$x##3560 + lq_tmp$x##3561}

s: forall a .
(Num<[]> a) =>
lq_tmp$x##3571:a -> lq_tmp$x##3572:a -> {lq_tmp$x##3566 : a | lq_tmp$x##3566 == lq_tmp$x##3571 + lq_tmp$x##3572}

p: []
SELFIFICATION (GHC.Num.+, forall a .
            (Num<[]> a) =>
            lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134}, forall a .
                                                                                                (Num<[]> a) =>
                                                                                                lq_tmp$x##133:a -> lq_tmp$x##134:a -> {v : a | v == lq_tmp$x##133 + lq_tmp$x##134})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##3581:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3582:GHC.Types.Int -> lq_tmp$x##3583:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3582 + lq_tmp$x##3583}

d: lq_tmp$x##3592:(GHC.Num.Num GHC.Types.Int) -> lq_tmp$x##3593:GHC.Types.Int -> lq_tmp$x##3594:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3593 + lq_tmp$x##3594}

t: []

s: GHC.Num.$fNumInt

p: GHC.Num.$fNumInt
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Num.$fNumInt

d: GHC.Num.$fNumInt

t: {lq_tmp$x##3596 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##3596 == GHC.Num.$fNumInt}

s: {lq_tmp$x##3598 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##3598 == GHC.Num.$fNumInt}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##3582:GHC.Types.Int -> lq_tmp$x##3583:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3582 + lq_tmp$x##3583}

d: lq_tmp$x##3593:GHC.Types.Int -> lq_tmp$x##3594:GHC.Types.Int -> {VV : GHC.Types.Int | VV == lq_tmp$x##3593 + lq_tmp$x##3594}

t: []

s: xl_auN

p: xr_auN
SELFIFICATION (xl_auN, GHC.Types.Int, {VV##2058 : GHC.Types.Int | VV##2058 == xl_auN})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
SELFIFICATION (xl_auN, GHC.Types.Int, {VV##2058 : GHC.Types.Int | VV##2058 == xl_auN})
SELFIFICATION (GHC.Num.$fNumInt, (GHC.Num.Num GHC.Types.Int), {VV##240 : (GHC.Num.Num GHC.Types.Int) | VV##240 == GHC.Num.$fNumInt})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auN

d: xr_auN

t: {lq_tmp$x##3603 : GHC.Types.Int | lq_tmp$x##3603 == xl_auN}

s: {lq_tmp$x##3604 : GHC.Types.Int | lq_tmp$x##3604 == xr_auN}

p: []
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##3583:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xl_auN + lq_tmp$x##3583}

d: lq_tmp$x##3594:GHC.Types.Int -> {VV : GHC.Types.Int | VV == xr_auN + lq_tmp$x##3594}

t: []

s: lq_anf$##7205759403792795924l_dBu

p: lq_anf$##7205759403792795924r_dBu
SELFIFICATION (lq_anf$##7205759403792795924l_dBu, {lq_tmp$x##2100 : GHC.Types.Int | lq_tmp$x##2100 == lq_anf$##7205759403792795923l_dBt
                                                                      && lq_tmp$x##2100 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt}, {lq_tmp$x##2100 : GHC.Types.Int | lq_tmp$x##2100 == lq_anf$##7205759403792795923l_dBt
                                                                                                                                                                              && lq_tmp$x##2100 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt
                                                                                                                                                                              && lq_tmp$x##2100 == lq_anf$##7205759403792795924l_dBu})
SELFIFICATION (lq_anf$##7205759403792795924r_dBu, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                      && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt}, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == lq_anf$##7205759403792795924r_dBu})
SELFIFICATION (lq_anf$##7205759403792795924l_dBu, {lq_tmp$x##2100 : GHC.Types.Int | lq_tmp$x##2100 == lq_anf$##7205759403792795923l_dBt
                                                                      && lq_tmp$x##2100 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt}, {lq_tmp$x##2100 : GHC.Types.Int | lq_tmp$x##2100 == lq_anf$##7205759403792795923l_dBt
                                                                                                                                                                              && lq_tmp$x##2100 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt
                                                                                                                                                                              && lq_tmp$x##2100 == lq_anf$##7205759403792795924l_dBu})
SELFIFICATION (xr_auN, GHC.Types.Int, {VV##2060 : GHC.Types.Int | VV##2060 == xr_auN})
SELFIFICATION (lq_anf$##7205759403792795924r_dBu, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                      && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt}, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == lq_anf$##7205759403792795924r_dBu})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795924l_dBu

d: lq_anf$##7205759403792795924r_dBu

t: {lq_tmp$x##3607 : GHC.Types.Int | lq_tmp$x##3607 == lq_anf$##7205759403792795923l_dBt
                                  && lq_tmp$x##3607 == GHC.Types.I# lq_anf$##7205759403792795923l_dBt
                                  && lq_tmp$x##3607 == lq_anf$##7205759403792795924l_dBu}

s: {lq_tmp$x##3608 : GHC.Types.Int | lq_tmp$x##3608 == lq_anf$##7205759403792795923r_dBt
                                  && lq_tmp$x##3608 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt
                                  && lq_tmp$x##3608 == lq_anf$##7205759403792795924r_dBu}

p: []
consRelSynth Unary synthed preds:[]
base RelSub
t: {VV : GHC.Types.Int | VV == xl_auN + lq_anf$##7205759403792795924l_dBu}

s: {VV : GHC.Types.Int | VV == xr_auN + lq_anf$##7205759403792795924r_dBu}

p: true

q: r1 < r2
SELFIFICATION (lq_anf$##7205759403792795924r_dBu, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                      && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt}, {lq_tmp$x##2104 : GHC.Types.Int | lq_tmp$x##2104 == lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == GHC.Types.I# lq_anf$##7205759403792795923r_dBt
                                                                                                                                                                              && lq_tmp$x##2104 == lq_anf$##7205759403792795924r_dBu})
SELFIFICATION (fl_auP, z1:GHC.Types.Int -> GHC.Types.Int, z1:GHC.Types.Int -> {VV : GHC.Types.Int | VV == fl_auP z1})
SELFIFICATION (fr_auP, z2:GHC.Types.Int -> GHC.Types.Int, z2:GHC.Types.Int -> {VV : GHC.Types.Int | VV == fr_auP z2})
partitionArgs toRel: (f, f, [z1 : []], [z2 : []], z1 < z2 => r1 <= r2)
consRelSynth Unary synthed preds:[lq_tmp$x##3626 < lq_tmp$x##3630 => r1 <= r2]
Unary To SYNTH
e: fl_auP

d: fr_auP

t: lq_tmp$x##3626:GHC.Types.Int -> {lq_tmp$x##3624 : GHC.Types.Int | lq_tmp$x##3624 == fl_auP lq_tmp$x##3626}

s: lq_tmp$x##3630:GHC.Types.Int -> {lq_tmp$x##3628 : GHC.Types.Int | lq_tmp$x##3628 == fr_auP lq_tmp$x##3630}

p: [lq_tmp$x##3626 < lq_tmp$x##3630 => r1 <= r2]
SELFIFICATION (fr_auP, z2:GHC.Types.Int -> GHC.Types.Int, z2:GHC.Types.Int -> {VV : GHC.Types.Int | VV == fr_auP z2})
consRelSynth Unary synthed preds:[lq_tmp$x##3634 < lq_tmp$x##3638 => r1 <= r2]
SYNTH APP TO 
e: lq_tmp$x##3634:GHC.Types.Int -> {lq_tmp$x##3632 : GHC.Types.Int | lq_tmp$x##3632 == fl_auP lq_tmp$x##3634}

d: lq_tmp$x##3638:GHC.Types.Int -> {lq_tmp$x##3636 : GHC.Types.Int | lq_tmp$x##3636 == fr_auP lq_tmp$x##3638}

t: [lq_tmp$x##3634 < lq_tmp$x##3638 => r1 <= r2]

s: xl_auO

p: xr_auO
App Exp Exp To SYNTH
e: fl_auP
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
   xl_auO)

d: fr_auP
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:24:14>
   xr_auO)

t: {lq_tmp$x##3632 : GHC.Types.Int | lq_tmp$x##3632 == fl_auP xl_auO}

s: {lq_tmp$x##3636 : GHC.Types.Int | lq_tmp$x##3636 == fr_auP xr_auO}

p: [r1 <= r2]
Synth To CHECK
e: xl_auO

d: xr_auO

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auO, GHC.Types.Int, {VV##3617 : GHC.Types.Int | VV##3617 == xl_auO})
SELFIFICATION (xr_auO, GHC.Types.Int, {VV##3619 : GHC.Types.Int | VV##3619 == xr_auO})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auO

d: xr_auO

t: {lq_tmp$x##3639 : GHC.Types.Int | lq_tmp$x##3639 == xl_auO}

s: {lq_tmp$x##3640 : GHC.Types.Int | lq_tmp$x##3640 == xr_auO}

p: []
SELFIFICATION (xr_auO, GHC.Types.Int, {VV##3619 : GHC.Types.Int | VV##3619 == xr_auO})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##3641 : GHC.Types.Int | lq_tmp$x##3641 == xl_auO}

s: {lq_tmp$x##3642 : GHC.Types.Int | lq_tmp$x##3642 == xr_auO}

p: true

q: r1 < r2
SELFIFICATION (fr_auP, z2:GHC.Types.Int -> GHC.Types.Int, z2:GHC.Types.Int -> {VV : GHC.Types.Int | VV == fr_auP z2})
consRelSynth Unary synthed preds:[lq_tmp$x##3650 < lq_tmp$x##3654 => r1 <= r2]
Unary To SYNTH
e: fl_auP

d: fr_auP

t: lq_tmp$x##3650:GHC.Types.Int -> {lq_tmp$x##3648 : GHC.Types.Int | lq_tmp$x##3648 == fl_auP lq_tmp$x##3650}

s: lq_tmp$x##3654:GHC.Types.Int -> {lq_tmp$x##3652 : GHC.Types.Int | lq_tmp$x##3652 == fr_auP lq_tmp$x##3654}

p: [lq_tmp$x##3650 < lq_tmp$x##3654 => r1 <= r2]
SELFIFICATION (fr_auP, z2:GHC.Types.Int -> GHC.Types.Int, z2:GHC.Types.Int -> {VV : GHC.Types.Int | VV == fr_auP z2})
consRelSynth Unary synthed preds:[lq_tmp$x##3658 < lq_tmp$x##3662 => r1 <= r2]
SYNTH APP TO 
e: lq_tmp$x##3658:GHC.Types.Int -> {lq_tmp$x##3656 : GHC.Types.Int | lq_tmp$x##3656 == fl_auP lq_tmp$x##3658}

d: lq_tmp$x##3662:GHC.Types.Int -> {lq_tmp$x##3660 : GHC.Types.Int | lq_tmp$x##3660 == fr_auP lq_tmp$x##3662}

t: [lq_tmp$x##3658 < lq_tmp$x##3662 => r1 <= r2]

s: xl_auO

p: xr_auO
base RelSub
t: {lq_tmp$x##3656 : GHC.Types.Int | lq_tmp$x##3656 == fl_auP xl_auO}

s: {lq_tmp$x##3660 : GHC.Types.Int | lq_tmp$x##3660 == fr_auP xr_auO}

p: r1 <= r2

q: r1 < r2
Synth To CHECK
e: xl_auO

d: xr_auO

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auO, GHC.Types.Int, {VV##3617 : GHC.Types.Int | VV##3617 == xl_auO})
SELFIFICATION (xr_auO, GHC.Types.Int, {VV##3619 : GHC.Types.Int | VV##3619 == xr_auO})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auO

d: xr_auO

t: {lq_tmp$x##3663 : GHC.Types.Int | lq_tmp$x##3663 == xl_auO}

s: {lq_tmp$x##3664 : GHC.Types.Int | lq_tmp$x##3664 == xr_auO}

p: []
SELFIFICATION (xr_auO, GHC.Types.Int, {VV##3619 : GHC.Types.Int | VV##3619 == xr_auO})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##3665 : GHC.Types.Int | lq_tmp$x##3665 == xl_auO}

s: {lq_tmp$x##3666 : GHC.Types.Int | lq_tmp$x##3666 == xr_auO}

p: true

q: r1 < r2
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##3689 < lq_tmp$x##3699 => ((lq_tmp$x##3688 < lq_tmp$x##3698 => r1 <= r2) => r1 lq_tmp$x##3689 lq_tmp$x##3690 < r2 lq_tmp$x##3699 lq_tmp$x##3700)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##3689:GHC.Types.Int -> lq_tmp$x##3690:(lq_tmp$x##3688:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3685 : GHC.Types.Int | lq_tmp$x##3685 == SGDSimple.bind lq_tmp$x##3689 lq_tmp$x##3690}

s: lq_tmp$x##3699:GHC.Types.Int -> lq_tmp$x##3700:(lq_tmp$x##3698:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3695 : GHC.Types.Int | lq_tmp$x##3695 == SGDSimple.bind lq_tmp$x##3699 lq_tmp$x##3700}

p: [lq_tmp$x##3689 < lq_tmp$x##3699 => ((lq_tmp$x##3688 < lq_tmp$x##3698 => r1 <= r2) => r1 lq_tmp$x##3689 lq_tmp$x##3690 < r2 lq_tmp$x##3699 lq_tmp$x##3700)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##3709 < lq_tmp$x##3719 => ((lq_tmp$x##3708 < lq_tmp$x##3718 => r1 <= r2) => r1 lq_tmp$x##3709 lq_tmp$x##3710 < r2 lq_tmp$x##3719 lq_tmp$x##3720)]
SYNTH APP TO 
e: lq_tmp$x##3709:GHC.Types.Int -> lq_tmp$x##3710:(lq_tmp$x##3708:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3705 : GHC.Types.Int | lq_tmp$x##3705 == SGDSimple.bind lq_tmp$x##3709 lq_tmp$x##3710}

d: lq_tmp$x##3719:GHC.Types.Int -> lq_tmp$x##3720:(lq_tmp$x##3718:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3715 : GHC.Types.Int | lq_tmp$x##3715 == SGDSimple.bind lq_tmp$x##3719 lq_tmp$x##3720}

t: [lq_tmp$x##3709 < lq_tmp$x##3719 => ((lq_tmp$x##3708 < lq_tmp$x##3718 => r1 <= r2) => r1 lq_tmp$x##3709 lq_tmp$x##3710 < r2 lq_tmp$x##3719 lq_tmp$x##3720)]

s: xl_auQ

p: xr_auQ
App Exp Exp To SYNTH
e: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
   xl_auQ)

d: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
   xr_auQ)

t: lq_tmp$x##3710:(lq_tmp$x##3708:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3705 : GHC.Types.Int | lq_tmp$x##3705 == SGDSimple.bind xl_auQ lq_tmp$x##3710}

s: lq_tmp$x##3720:(lq_tmp$x##3718:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3715 : GHC.Types.Int | lq_tmp$x##3715 == SGDSimple.bind xr_auQ lq_tmp$x##3720}

p: [(lq_tmp$x##3708 < lq_tmp$x##3718 => r1 <= r2) => r1 lq_tmp$x##3710 < r2 lq_tmp$x##3720]
Synth To CHECK
e: xl_auQ

d: xr_auQ

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auQ, GHC.Types.Int, {VV##3677 : GHC.Types.Int | VV##3677 == xl_auQ})
SELFIFICATION (xr_auQ, GHC.Types.Int, {VV##3678 : GHC.Types.Int | VV##3678 == xr_auQ})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auQ

d: xr_auQ

t: {lq_tmp$x##3721 : GHC.Types.Int | lq_tmp$x##3721 == xl_auQ}

s: {lq_tmp$x##3722 : GHC.Types.Int | lq_tmp$x##3722 == xr_auQ}

p: []
SELFIFICATION (xr_auQ, GHC.Types.Int, {VV##3678 : GHC.Types.Int | VV##3678 == xr_auQ})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##3723 : GHC.Types.Int | lq_tmp$x##3723 == xl_auQ}

s: {lq_tmp$x##3724 : GHC.Types.Int | lq_tmp$x##3724 == xr_auQ}

p: true

q: r1 < r2
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##3737 < lq_tmp$x##3747 => ((lq_tmp$x##3736 < lq_tmp$x##3746 => r1 <= r2) => r1 lq_tmp$x##3737 lq_tmp$x##3738 < r2 lq_tmp$x##3747 lq_tmp$x##3748)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##3737:GHC.Types.Int -> lq_tmp$x##3738:(lq_tmp$x##3736:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3733 : GHC.Types.Int | lq_tmp$x##3733 == SGDSimple.bind lq_tmp$x##3737 lq_tmp$x##3738}

s: lq_tmp$x##3747:GHC.Types.Int -> lq_tmp$x##3748:(lq_tmp$x##3746:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3743 : GHC.Types.Int | lq_tmp$x##3743 == SGDSimple.bind lq_tmp$x##3747 lq_tmp$x##3748}

p: [lq_tmp$x##3737 < lq_tmp$x##3747 => ((lq_tmp$x##3736 < lq_tmp$x##3746 => r1 <= r2) => r1 lq_tmp$x##3737 lq_tmp$x##3738 < r2 lq_tmp$x##3747 lq_tmp$x##3748)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##3757 < lq_tmp$x##3767 => ((lq_tmp$x##3756 < lq_tmp$x##3766 => r1 <= r2) => r1 lq_tmp$x##3757 lq_tmp$x##3758 < r2 lq_tmp$x##3767 lq_tmp$x##3768)]
SYNTH APP TO 
e: lq_tmp$x##3757:GHC.Types.Int -> lq_tmp$x##3758:(lq_tmp$x##3756:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3753 : GHC.Types.Int | lq_tmp$x##3753 == SGDSimple.bind lq_tmp$x##3757 lq_tmp$x##3758}

d: lq_tmp$x##3767:GHC.Types.Int -> lq_tmp$x##3768:(lq_tmp$x##3766:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3763 : GHC.Types.Int | lq_tmp$x##3763 == SGDSimple.bind lq_tmp$x##3767 lq_tmp$x##3768}

t: [lq_tmp$x##3757 < lq_tmp$x##3767 => ((lq_tmp$x##3756 < lq_tmp$x##3766 => r1 <= r2) => r1 lq_tmp$x##3757 lq_tmp$x##3758 < r2 lq_tmp$x##3767 lq_tmp$x##3768)]

s: xl_auQ

p: xr_auQ
SYNTH APP TO 
e: lq_tmp$x##3758:(lq_tmp$x##3756:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3753 : GHC.Types.Int | lq_tmp$x##3753 == SGDSimple.bind xl_auQ lq_tmp$x##3758}

d: lq_tmp$x##3768:(lq_tmp$x##3766:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3763 : GHC.Types.Int | lq_tmp$x##3763 == SGDSimple.bind xr_auQ lq_tmp$x##3768}

t: [(lq_tmp$x##3756 < lq_tmp$x##3766 => r1 <= r2) => r1 lq_tmp$x##3758 < r2 lq_tmp$x##3768]

s: SGDSimple.update

p: SGDSimple.update
App Exp Exp To SYNTH
e: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
   xl_auQ)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
   SGDSimple.update)

d: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
   xr_auQ)
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:16-21>
   SGDSimple.update)

t: {lq_tmp$x##3753 : GHC.Types.Int | lq_tmp$x##3753 == SGDSimple.bind xl_auQ SGDSimple.update}

s: {lq_tmp$x##3763 : GHC.Types.Int | lq_tmp$x##3763 == SGDSimple.bind xr_auQ SGDSimple.update}

p: [r1 < r2]
Synth To CHECK
e: SGDSimple.update

d: SGDSimple.update

t: lq_tmp$x##3756:GHC.Types.Int -> GHC.Types.Int

s: lq_tmp$x##3766:GHC.Types.Int -> GHC.Types.Int

p: lq_tmp$x##3756 < lq_tmp$x##3766 => r1 <= r2
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
Synth To CHECK
e: xl_auQ

d: xr_auQ

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auQ, GHC.Types.Int, {VV##3677 : GHC.Types.Int | VV##3677 == xl_auQ})
SELFIFICATION (xr_auQ, GHC.Types.Int, {VV##3678 : GHC.Types.Int | VV##3678 == xr_auQ})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auQ

d: xr_auQ

t: {lq_tmp$x##3769 : GHC.Types.Int | lq_tmp$x##3769 == xl_auQ}

s: {lq_tmp$x##3770 : GHC.Types.Int | lq_tmp$x##3770 == xr_auQ}

p: []
SELFIFICATION (xr_auQ, GHC.Types.Int, {VV##3678 : GHC.Types.Int | VV##3678 == xr_auQ})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##3771 : GHC.Types.Int | lq_tmp$x##3771 == xl_auQ}

s: {lq_tmp$x##3772 : GHC.Types.Int | lq_tmp$x##3772 == xr_auQ}

p: true

q: r1 < r2
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
consRelSynth Unary synthed preds:[lq_tmp$x##3780 < lq_tmp$x##3784 => r1 lq_tmp$x##3780 < r2 lq_tmp$x##3784]
Unary To SYNTH
e: SGDSimple.update

d: SGDSimple.update

t: lq_tmp$x##3780:GHC.Types.Int -> {lq_tmp$x##3778 : GHC.Types.Int | lq_tmp$x##3778 == SGDSimple.update lq_tmp$x##3780}

s: lq_tmp$x##3784:GHC.Types.Int -> {lq_tmp$x##3782 : GHC.Types.Int | lq_tmp$x##3782 == SGDSimple.update lq_tmp$x##3784}

p: [lq_tmp$x##3780 < lq_tmp$x##3784 => r1 lq_tmp$x##3780 < r2 lq_tmp$x##3784]
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
consRelSynth Unary synthed preds:[lq_tmp$x##3788 < lq_tmp$x##3792 => r1 lq_tmp$x##3788 < r2 lq_tmp$x##3792]
fun RelSub
t: lq_tmp$x##3788:GHC.Types.Int -> {lq_tmp$x##3786 : GHC.Types.Int | lq_tmp$x##3786 == SGDSimple.update lq_tmp$x##3788}

s: lq_tmp$x##3792:GHC.Types.Int -> {lq_tmp$x##3790 : GHC.Types.Int | lq_tmp$x##3790 == SGDSimple.update lq_tmp$x##3792}

p: (lq_tmp$x##3788 < lq_tmp$x##3792 => r1 lq_tmp$x##3788 < r2 lq_tmp$x##3792)

q: lq_tmp$x##3788 < lq_tmp$x##3792 => r1 <= r2
fun RelSub
t: {lq_tmp$x##3786 : GHC.Types.Int | lq_tmp$x##3786 == SGDSimple.update lq_tmp$x##3788}

s: lq_tmp$x##3792:GHC.Types.Int -> {lq_tmp$x##3790 : GHC.Types.Int | lq_tmp$x##3790 == SGDSimple.update lq_tmp$x##3792}

p: (lq_tmp$x##3788 < lq_tmp$x##3792 => r1 < r2 lq_tmp$x##3792)

q: lq_tmp$x##3788 < lq_tmp$x##3792 => r1 <= r2
base RelSub
t: {lq_tmp$x##3786 : GHC.Types.Int | lq_tmp$x##3786 == SGDSimple.update lq_tmp$x##3788}

s: {lq_tmp$x##3790 : GHC.Types.Int | lq_tmp$x##3790 == SGDSimple.update lq_tmp$x##3792}

p: (lq_tmp$x##3788 < lq_tmp$x##3792 => r1 < r2)

q: lq_tmp$x##3788 < lq_tmp$x##3792 => r1 <= r2
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##3807 < lq_tmp$x##3817 => ((lq_tmp$x##3806 < lq_tmp$x##3816 => r1 <= r2) => r1 lq_tmp$x##3807 lq_tmp$x##3808 < r2 lq_tmp$x##3817 lq_tmp$x##3818)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##3807:GHC.Types.Int -> lq_tmp$x##3808:(lq_tmp$x##3806:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3803 : GHC.Types.Int | lq_tmp$x##3803 == SGDSimple.bind lq_tmp$x##3807 lq_tmp$x##3808}

s: lq_tmp$x##3817:GHC.Types.Int -> lq_tmp$x##3818:(lq_tmp$x##3816:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3813 : GHC.Types.Int | lq_tmp$x##3813 == SGDSimple.bind lq_tmp$x##3817 lq_tmp$x##3818}

p: [lq_tmp$x##3807 < lq_tmp$x##3817 => ((lq_tmp$x##3806 < lq_tmp$x##3816 => r1 <= r2) => r1 lq_tmp$x##3807 lq_tmp$x##3808 < r2 lq_tmp$x##3817 lq_tmp$x##3818)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##3827 < lq_tmp$x##3837 => ((lq_tmp$x##3826 < lq_tmp$x##3836 => r1 <= r2) => r1 lq_tmp$x##3827 lq_tmp$x##3828 < r2 lq_tmp$x##3837 lq_tmp$x##3838)]
SYNTH APP TO 
e: lq_tmp$x##3827:GHC.Types.Int -> lq_tmp$x##3828:(lq_tmp$x##3826:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3823 : GHC.Types.Int | lq_tmp$x##3823 == SGDSimple.bind lq_tmp$x##3827 lq_tmp$x##3828}

d: lq_tmp$x##3837:GHC.Types.Int -> lq_tmp$x##3838:(lq_tmp$x##3836:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3833 : GHC.Types.Int | lq_tmp$x##3833 == SGDSimple.bind lq_tmp$x##3837 lq_tmp$x##3838}

t: [lq_tmp$x##3827 < lq_tmp$x##3837 => ((lq_tmp$x##3826 < lq_tmp$x##3836 => r1 <= r2) => r1 lq_tmp$x##3827 lq_tmp$x##3828 < r2 lq_tmp$x##3837 lq_tmp$x##3838)]

s: xl_auQ

p: xr_auQ
App Exp Exp To SYNTH
e: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
   xl_auQ)

d: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:29:14>
   xr_auQ)

t: lq_tmp$x##3828:(lq_tmp$x##3826:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3823 : GHC.Types.Int | lq_tmp$x##3823 == SGDSimple.bind xl_auQ lq_tmp$x##3828}

s: lq_tmp$x##3838:(lq_tmp$x##3836:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3833 : GHC.Types.Int | lq_tmp$x##3833 == SGDSimple.bind xr_auQ lq_tmp$x##3838}

p: [(lq_tmp$x##3826 < lq_tmp$x##3836 => r1 <= r2) => r1 lq_tmp$x##3828 < r2 lq_tmp$x##3838]
Synth To CHECK
e: xl_auQ

d: xr_auQ

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auQ, GHC.Types.Int, {VV##3677 : GHC.Types.Int | VV##3677 == xl_auQ})
SELFIFICATION (xr_auQ, GHC.Types.Int, {VV##3678 : GHC.Types.Int | VV##3678 == xr_auQ})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auQ

d: xr_auQ

t: {lq_tmp$x##3839 : GHC.Types.Int | lq_tmp$x##3839 == xl_auQ}

s: {lq_tmp$x##3840 : GHC.Types.Int | lq_tmp$x##3840 == xr_auQ}

p: []
SELFIFICATION (xr_auQ, GHC.Types.Int, {VV##3678 : GHC.Types.Int | VV##3678 == xr_auQ})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##3841 : GHC.Types.Int | lq_tmp$x##3841 == xl_auQ}

s: {lq_tmp$x##3842 : GHC.Types.Int | lq_tmp$x##3842 == xr_auQ}

p: true

q: r1 < r2
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##3855 < lq_tmp$x##3865 => ((lq_tmp$x##3854 < lq_tmp$x##3864 => r1 <= r2) => r1 lq_tmp$x##3855 lq_tmp$x##3856 < r2 lq_tmp$x##3865 lq_tmp$x##3866)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##3855:GHC.Types.Int -> lq_tmp$x##3856:(lq_tmp$x##3854:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3851 : GHC.Types.Int | lq_tmp$x##3851 == SGDSimple.bind lq_tmp$x##3855 lq_tmp$x##3856}

s: lq_tmp$x##3865:GHC.Types.Int -> lq_tmp$x##3866:(lq_tmp$x##3864:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3861 : GHC.Types.Int | lq_tmp$x##3861 == SGDSimple.bind lq_tmp$x##3865 lq_tmp$x##3866}

p: [lq_tmp$x##3855 < lq_tmp$x##3865 => ((lq_tmp$x##3854 < lq_tmp$x##3864 => r1 <= r2) => r1 lq_tmp$x##3855 lq_tmp$x##3856 < r2 lq_tmp$x##3865 lq_tmp$x##3866)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##3875 < lq_tmp$x##3885 => ((lq_tmp$x##3874 < lq_tmp$x##3884 => r1 <= r2) => r1 lq_tmp$x##3875 lq_tmp$x##3876 < r2 lq_tmp$x##3885 lq_tmp$x##3886)]
SYNTH APP TO 
e: lq_tmp$x##3875:GHC.Types.Int -> lq_tmp$x##3876:(lq_tmp$x##3874:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3871 : GHC.Types.Int | lq_tmp$x##3871 == SGDSimple.bind lq_tmp$x##3875 lq_tmp$x##3876}

d: lq_tmp$x##3885:GHC.Types.Int -> lq_tmp$x##3886:(lq_tmp$x##3884:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3881 : GHC.Types.Int | lq_tmp$x##3881 == SGDSimple.bind lq_tmp$x##3885 lq_tmp$x##3886}

t: [lq_tmp$x##3875 < lq_tmp$x##3885 => ((lq_tmp$x##3874 < lq_tmp$x##3884 => r1 <= r2) => r1 lq_tmp$x##3875 lq_tmp$x##3876 < r2 lq_tmp$x##3885 lq_tmp$x##3886)]

s: xl_auQ

p: xr_auQ
SYNTH APP TO 
e: lq_tmp$x##3876:(lq_tmp$x##3874:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3871 : GHC.Types.Int | lq_tmp$x##3871 == SGDSimple.bind xl_auQ lq_tmp$x##3876}

d: lq_tmp$x##3886:(lq_tmp$x##3884:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3881 : GHC.Types.Int | lq_tmp$x##3881 == SGDSimple.bind xr_auQ lq_tmp$x##3886}

t: [(lq_tmp$x##3874 < lq_tmp$x##3884 => r1 <= r2) => r1 lq_tmp$x##3876 < r2 lq_tmp$x##3886]

s: SGDSimple.update

p: SGDSimple.update
base RelSub
t: {lq_tmp$x##3871 : GHC.Types.Int | lq_tmp$x##3871 == SGDSimple.bind xl_auQ SGDSimple.update}

s: {lq_tmp$x##3881 : GHC.Types.Int | lq_tmp$x##3881 == SGDSimple.bind xr_auQ SGDSimple.update}

p: r1 < r2

q: r1 < r2
Synth To CHECK
e: SGDSimple.update

d: SGDSimple.update

t: lq_tmp$x##3874:GHC.Types.Int -> GHC.Types.Int

s: lq_tmp$x##3884:GHC.Types.Int -> GHC.Types.Int

p: lq_tmp$x##3874 < lq_tmp$x##3884 => r1 <= r2
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
Synth To CHECK
e: xl_auQ

d: xr_auQ

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auQ, GHC.Types.Int, {VV##3677 : GHC.Types.Int | VV##3677 == xl_auQ})
SELFIFICATION (xr_auQ, GHC.Types.Int, {VV##3678 : GHC.Types.Int | VV##3678 == xr_auQ})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auQ

d: xr_auQ

t: {lq_tmp$x##3887 : GHC.Types.Int | lq_tmp$x##3887 == xl_auQ}

s: {lq_tmp$x##3888 : GHC.Types.Int | lq_tmp$x##3888 == xr_auQ}

p: []
SELFIFICATION (xr_auQ, GHC.Types.Int, {VV##3678 : GHC.Types.Int | VV##3678 == xr_auQ})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##3889 : GHC.Types.Int | lq_tmp$x##3889 == xl_auQ}

s: {lq_tmp$x##3890 : GHC.Types.Int | lq_tmp$x##3890 == xr_auQ}

p: true

q: r1 < r2
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
consRelSynth Unary synthed preds:[lq_tmp$x##3898 < lq_tmp$x##3902 => r1 lq_tmp$x##3898 < r2 lq_tmp$x##3902]
Unary To SYNTH
e: SGDSimple.update

d: SGDSimple.update

t: lq_tmp$x##3898:GHC.Types.Int -> {lq_tmp$x##3896 : GHC.Types.Int | lq_tmp$x##3896 == SGDSimple.update lq_tmp$x##3898}

s: lq_tmp$x##3902:GHC.Types.Int -> {lq_tmp$x##3900 : GHC.Types.Int | lq_tmp$x##3900 == SGDSimple.update lq_tmp$x##3902}

p: [lq_tmp$x##3898 < lq_tmp$x##3902 => r1 lq_tmp$x##3898 < r2 lq_tmp$x##3902]
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
consRelSynth Unary synthed preds:[lq_tmp$x##3906 < lq_tmp$x##3910 => r1 lq_tmp$x##3906 < r2 lq_tmp$x##3910]
fun RelSub
t: lq_tmp$x##3906:GHC.Types.Int -> {lq_tmp$x##3904 : GHC.Types.Int | lq_tmp$x##3904 == SGDSimple.update lq_tmp$x##3906}

s: lq_tmp$x##3910:GHC.Types.Int -> {lq_tmp$x##3908 : GHC.Types.Int | lq_tmp$x##3908 == SGDSimple.update lq_tmp$x##3910}

p: (lq_tmp$x##3906 < lq_tmp$x##3910 => r1 lq_tmp$x##3906 < r2 lq_tmp$x##3910)

q: lq_tmp$x##3906 < lq_tmp$x##3910 => r1 <= r2
fun RelSub
t: {lq_tmp$x##3904 : GHC.Types.Int | lq_tmp$x##3904 == SGDSimple.update lq_tmp$x##3906}

s: lq_tmp$x##3910:GHC.Types.Int -> {lq_tmp$x##3908 : GHC.Types.Int | lq_tmp$x##3908 == SGDSimple.update lq_tmp$x##3910}

p: (lq_tmp$x##3906 < lq_tmp$x##3910 => r1 < r2 lq_tmp$x##3910)

q: lq_tmp$x##3906 < lq_tmp$x##3910 => r1 <= r2
base RelSub
t: {lq_tmp$x##3904 : GHC.Types.Int | lq_tmp$x##3904 == SGDSimple.update lq_tmp$x##3906}

s: {lq_tmp$x##3908 : GHC.Types.Int | lq_tmp$x##3908 == SGDSimple.update lq_tmp$x##3910}

p: (lq_tmp$x##3906 < lq_tmp$x##3910 => r1 < r2)

q: lq_tmp$x##3906 < lq_tmp$x##3910 => r1 <= r2
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
SELFIFICATION (z, {VV##3927 : GHC.Types.Int | $k_##3928}, {VV##3927 : GHC.Types.Int | $k_##3928
                                                                        && VV##3927 == z##auS})
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
SELFIFICATION (z, {VV##3934 : GHC.Types.Int | $k_##3935}, {VV##3934 : GHC.Types.Int | $k_##3935
                                                                        && VV##3934 == z##auS})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: \ (z :: GHC.Types.Int) ->
  break<8>(z)
  src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
  SGDSimple.update
    (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
     z)

d: \ (z :: GHC.Types.Int) ->
  break<8>(z)
  src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:17-32>
  SGDSimple.update
    (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:31>
     z)

t: lq_tmp$x##3933:{lq_tmp$x##3930 : GHC.Types.Int | $k_##3928[VV##3927:=lq_tmp$x##3930]} -> {lq_tmp$x##3931 : GHC.Types.Int | lq_tmp$x##3931 == SGDSimple.update lq_tmp$x##3933}

s: lq_tmp$x##3940:{lq_tmp$x##3937 : GHC.Types.Int | $k_##3935[VV##3934:=lq_tmp$x##3937]} -> {lq_tmp$x##3938 : GHC.Types.Int | lq_tmp$x##3938 == SGDSimple.update lq_tmp$x##3940}

p: []
Synth To CHECK
e: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xl_auR)
  lq_anf$##7205759403792795927l_dBx

d: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xr_auR)
  lq_anf$##7205759403792795927r_dBx

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
SELFIFICATION (z, {VV##3941 : GHC.Types.Int | $k_##3942}, {VV##3941 : GHC.Types.Int | $k_##3942
                                                                        && VV##3941 == z##auS})
SELFIFICATION (SGDSimple.update, lq_tmp$x##310:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##310:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update lq_tmp$x##310})
SELFIFICATION (z, {VV##3948 : GHC.Types.Int | $k_##3949}, {VV##3948 : GHC.Types.Int | $k_##3949
                                                                        && VV##3948 == z##auS})
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[]
Let qs: []
consRelSynth Unary synthed preds:[lq_tmp$x##3967 < lq_tmp$x##3977 => ((lq_tmp$x##3966 < lq_tmp$x##3976 => r1 <= r2) => r1 lq_tmp$x##3967 lq_tmp$x##3968 < r2 lq_tmp$x##3977 lq_tmp$x##3978)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##3967:GHC.Types.Int -> lq_tmp$x##3968:(lq_tmp$x##3966:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3963 : GHC.Types.Int | lq_tmp$x##3963 == SGDSimple.bind lq_tmp$x##3967 lq_tmp$x##3968}

s: lq_tmp$x##3977:GHC.Types.Int -> lq_tmp$x##3978:(lq_tmp$x##3976:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3973 : GHC.Types.Int | lq_tmp$x##3973 == SGDSimple.bind lq_tmp$x##3977 lq_tmp$x##3978}

p: [lq_tmp$x##3967 < lq_tmp$x##3977 => ((lq_tmp$x##3966 < lq_tmp$x##3976 => r1 <= r2) => r1 lq_tmp$x##3967 lq_tmp$x##3968 < r2 lq_tmp$x##3977 lq_tmp$x##3978)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##3987 < lq_tmp$x##3997 => ((lq_tmp$x##3986 < lq_tmp$x##3996 => r1 <= r2) => r1 lq_tmp$x##3987 lq_tmp$x##3988 < r2 lq_tmp$x##3997 lq_tmp$x##3998)]
SYNTH APP TO 
e: lq_tmp$x##3987:GHC.Types.Int -> lq_tmp$x##3988:(lq_tmp$x##3986:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3983 : GHC.Types.Int | lq_tmp$x##3983 == SGDSimple.bind lq_tmp$x##3987 lq_tmp$x##3988}

d: lq_tmp$x##3997:GHC.Types.Int -> lq_tmp$x##3998:(lq_tmp$x##3996:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3993 : GHC.Types.Int | lq_tmp$x##3993 == SGDSimple.bind lq_tmp$x##3997 lq_tmp$x##3998}

t: [lq_tmp$x##3987 < lq_tmp$x##3997 => ((lq_tmp$x##3986 < lq_tmp$x##3996 => r1 <= r2) => r1 lq_tmp$x##3987 lq_tmp$x##3988 < r2 lq_tmp$x##3997 lq_tmp$x##3998)]

s: xl_auR

p: xr_auR
App Exp Exp To SYNTH
e: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xl_auR)

d: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xr_auR)

t: lq_tmp$x##3988:(lq_tmp$x##3986:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3983 : GHC.Types.Int | lq_tmp$x##3983 == SGDSimple.bind xl_auR lq_tmp$x##3988}

s: lq_tmp$x##3998:(lq_tmp$x##3996:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##3993 : GHC.Types.Int | lq_tmp$x##3993 == SGDSimple.bind xr_auR lq_tmp$x##3998}

p: [(lq_tmp$x##3986 < lq_tmp$x##3996 => r1 <= r2) => r1 lq_tmp$x##3988 < r2 lq_tmp$x##3998]
Synth To CHECK
e: xl_auR

d: xr_auR

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auR, GHC.Types.Int, {VV##3923 : GHC.Types.Int | VV##3923 == xl_auR})
SELFIFICATION (xr_auR, GHC.Types.Int, {VV##3924 : GHC.Types.Int | VV##3924 == xr_auR})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auR

d: xr_auR

t: {lq_tmp$x##3999 : GHC.Types.Int | lq_tmp$x##3999 == xl_auR}

s: {lq_tmp$x##4000 : GHC.Types.Int | lq_tmp$x##4000 == xr_auR}

p: []
SELFIFICATION (xr_auR, GHC.Types.Int, {VV##3924 : GHC.Types.Int | VV##3924 == xr_auR})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##4001 : GHC.Types.Int | lq_tmp$x##4001 == xl_auR}

s: {lq_tmp$x##4002 : GHC.Types.Int | lq_tmp$x##4002 == xr_auR}

p: true

q: r1 < r2
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##4015 < lq_tmp$x##4025 => ((lq_tmp$x##4014 < lq_tmp$x##4024 => r1 <= r2) => r1 lq_tmp$x##4015 lq_tmp$x##4016 < r2 lq_tmp$x##4025 lq_tmp$x##4026)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##4015:GHC.Types.Int -> lq_tmp$x##4016:(lq_tmp$x##4014:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4011 : GHC.Types.Int | lq_tmp$x##4011 == SGDSimple.bind lq_tmp$x##4015 lq_tmp$x##4016}

s: lq_tmp$x##4025:GHC.Types.Int -> lq_tmp$x##4026:(lq_tmp$x##4024:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4021 : GHC.Types.Int | lq_tmp$x##4021 == SGDSimple.bind lq_tmp$x##4025 lq_tmp$x##4026}

p: [lq_tmp$x##4015 < lq_tmp$x##4025 => ((lq_tmp$x##4014 < lq_tmp$x##4024 => r1 <= r2) => r1 lq_tmp$x##4015 lq_tmp$x##4016 < r2 lq_tmp$x##4025 lq_tmp$x##4026)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##4035 < lq_tmp$x##4045 => ((lq_tmp$x##4034 < lq_tmp$x##4044 => r1 <= r2) => r1 lq_tmp$x##4035 lq_tmp$x##4036 < r2 lq_tmp$x##4045 lq_tmp$x##4046)]
SYNTH APP TO 
e: lq_tmp$x##4035:GHC.Types.Int -> lq_tmp$x##4036:(lq_tmp$x##4034:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4031 : GHC.Types.Int | lq_tmp$x##4031 == SGDSimple.bind lq_tmp$x##4035 lq_tmp$x##4036}

d: lq_tmp$x##4045:GHC.Types.Int -> lq_tmp$x##4046:(lq_tmp$x##4044:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4041 : GHC.Types.Int | lq_tmp$x##4041 == SGDSimple.bind lq_tmp$x##4045 lq_tmp$x##4046}

t: [lq_tmp$x##4035 < lq_tmp$x##4045 => ((lq_tmp$x##4034 < lq_tmp$x##4044 => r1 <= r2) => r1 lq_tmp$x##4035 lq_tmp$x##4036 < r2 lq_tmp$x##4045 lq_tmp$x##4046)]

s: xl_auR

p: xr_auR
SYNTH APP TO 
e: lq_tmp$x##4036:(lq_tmp$x##4034:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4031 : GHC.Types.Int | lq_tmp$x##4031 == SGDSimple.bind xl_auR lq_tmp$x##4036}

d: lq_tmp$x##4046:(lq_tmp$x##4044:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4041 : GHC.Types.Int | lq_tmp$x##4041 == SGDSimple.bind xr_auR lq_tmp$x##4046}

t: [(lq_tmp$x##4034 < lq_tmp$x##4044 => r1 <= r2) => r1 lq_tmp$x##4036 < r2 lq_tmp$x##4046]

s: lq_anf$##7205759403792795927l_dBx

p: lq_anf$##7205759403792795927r_dBx
App Exp Exp To SYNTH
e: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xl_auR)
  lq_anf$##7205759403792795927l_dBx

d: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xr_auR)
  lq_anf$##7205759403792795927r_dBx

t: {lq_tmp$x##4031 : GHC.Types.Int | lq_tmp$x##4031 == SGDSimple.bind xl_auR lq_anf$##7205759403792795927l_dBx}

s: {lq_tmp$x##4041 : GHC.Types.Int | lq_tmp$x##4041 == SGDSimple.bind xr_auR lq_anf$##7205759403792795927r_dBx}

p: [r1 < r2]
Synth To CHECK
e: lq_anf$##7205759403792795927l_dBx

d: lq_anf$##7205759403792795927r_dBx

t: lq_tmp$x##4034:GHC.Types.Int -> GHC.Types.Int

s: lq_tmp$x##4044:GHC.Types.Int -> GHC.Types.Int

p: lq_tmp$x##4034 < lq_tmp$x##4044 => r1 <= r2
SELFIFICATION (lq_anf$##7205759403792795927l_dBx, lq_tmp$x##3947:{lq_tmp$x##3944 : GHC.Types.Int | $k_##3942[VV##3941:=lq_tmp$x##3944]} -> {lq_tmp$x##3945 : GHC.Types.Int | lq_tmp$x##3945 == SGDSimple.update lq_tmp$x##3947}, lq_tmp$x##3947:{lq_tmp$x##3944 : GHC.Types.Int | $k_##3942[VV##3941:=lq_tmp$x##3944]} -> {lq_tmp$x##3945 : GHC.Types.Int | lq_tmp$x##3945 == SGDSimple.update lq_tmp$x##3947
                                                                                                                                                                                                                                                                                                                                              && lq_tmp$x##3945 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##3947})
Synth To CHECK
e: xl_auR

d: xr_auR

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auR, GHC.Types.Int, {VV##3923 : GHC.Types.Int | VV##3923 == xl_auR})
SELFIFICATION (xr_auR, GHC.Types.Int, {VV##3924 : GHC.Types.Int | VV##3924 == xr_auR})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auR

d: xr_auR

t: {lq_tmp$x##4047 : GHC.Types.Int | lq_tmp$x##4047 == xl_auR}

s: {lq_tmp$x##4048 : GHC.Types.Int | lq_tmp$x##4048 == xr_auR}

p: []
SELFIFICATION (xr_auR, GHC.Types.Int, {VV##3924 : GHC.Types.Int | VV##3924 == xr_auR})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##4049 : GHC.Types.Int | lq_tmp$x##4049 == xl_auR}

s: {lq_tmp$x##4050 : GHC.Types.Int | lq_tmp$x##4050 == xr_auR}

p: true

q: r1 < r2
SELFIFICATION (lq_anf$##7205759403792795927r_dBx, lq_tmp$x##3954:{lq_tmp$x##3951 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##3951]} -> {lq_tmp$x##3952 : GHC.Types.Int | lq_tmp$x##3952 == SGDSimple.update lq_tmp$x##3954}, lq_tmp$x##3954:{lq_tmp$x##3951 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##3951]} -> {lq_tmp$x##3952 : GHC.Types.Int | lq_tmp$x##3952 == SGDSimple.update lq_tmp$x##3954
                                                                                                                                                                                                                                                                                                                                              && lq_tmp$x##3952 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##3954})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795927l_dBx

d: lq_anf$##7205759403792795927r_dBx

t: lq_tmp$x##4058:{lq_tmp$x##4055 : GHC.Types.Int | $k_##3942[VV##3941:=lq_tmp$x##4055][lq_tmp$x##3944:=lq_tmp$x##4055]} -> {lq_tmp$x##4056 : GHC.Types.Int | lq_tmp$x##4056 == SGDSimple.update lq_tmp$x##4058
                                                                                                                                                           && lq_tmp$x##4056 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##4058}

s: lq_tmp$x##4062:{lq_tmp$x##4059 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##4059][lq_tmp$x##3951:=lq_tmp$x##4059]} -> {lq_tmp$x##4060 : GHC.Types.Int | lq_tmp$x##4060 == SGDSimple.update lq_tmp$x##4062
                                                                                                                                                           && lq_tmp$x##4060 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##4062}

p: []
SELFIFICATION (lq_anf$##7205759403792795927r_dBx, lq_tmp$x##3954:{lq_tmp$x##3951 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##3951]} -> {lq_tmp$x##3952 : GHC.Types.Int | lq_tmp$x##3952 == SGDSimple.update lq_tmp$x##3954}, lq_tmp$x##3954:{lq_tmp$x##3951 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##3951]} -> {lq_tmp$x##3952 : GHC.Types.Int | lq_tmp$x##3952 == SGDSimple.update lq_tmp$x##3954
                                                                                                                                                                                                                                                                                                                                              && lq_tmp$x##3952 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##3954})
consRelSynth Unary synthed preds:[]
fun RelSub
t: lq_tmp$x##4066:{lq_tmp$x##4063 : GHC.Types.Int | $k_##3942[VV##3941:=lq_tmp$x##4063][lq_tmp$x##3944:=lq_tmp$x##4063]} -> {lq_tmp$x##4064 : GHC.Types.Int | lq_tmp$x##4064 == SGDSimple.update lq_tmp$x##4066
                                                                                                                                                           && lq_tmp$x##4064 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##4066}

s: lq_tmp$x##4070:{lq_tmp$x##4067 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##4067][lq_tmp$x##3951:=lq_tmp$x##4067]} -> {lq_tmp$x##4068 : GHC.Types.Int | lq_tmp$x##4068 == SGDSimple.update lq_tmp$x##4070
                                                                                                                                                           && lq_tmp$x##4068 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##4070}

p: true

q: lq_tmp$x##4066 < lq_tmp$x##4070 => r1 <= r2
fun RelSub
t: {lq_tmp$x##4064 : GHC.Types.Int | lq_tmp$x##4064 == SGDSimple.update lq_tmp$x##4066
                                  && lq_tmp$x##4064 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##4066}

s: lq_tmp$x##4070:{lq_tmp$x##4067 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##4067][lq_tmp$x##3951:=lq_tmp$x##4067]} -> {lq_tmp$x##4068 : GHC.Types.Int | lq_tmp$x##4068 == SGDSimple.update lq_tmp$x##4070
                                                                                                                                                           && lq_tmp$x##4068 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##4070}

p: true

q: lq_tmp$x##4066 < lq_tmp$x##4070 => r1 <= r2
base RelSub
t: {lq_tmp$x##4064 : GHC.Types.Int | lq_tmp$x##4064 == SGDSimple.update lq_tmp$x##4066
                                  && lq_tmp$x##4064 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##4066}

s: {lq_tmp$x##4068 : GHC.Types.Int | lq_tmp$x##4068 == SGDSimple.update lq_tmp$x##4070
                                  && lq_tmp$x##4068 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##4070}

p: true

q: lq_tmp$x##4066 < lq_tmp$x##4070 => r1 <= r2
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##4085 < lq_tmp$x##4095 => ((lq_tmp$x##4084 < lq_tmp$x##4094 => r1 <= r2) => r1 lq_tmp$x##4085 lq_tmp$x##4086 < r2 lq_tmp$x##4095 lq_tmp$x##4096)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##4085:GHC.Types.Int -> lq_tmp$x##4086:(lq_tmp$x##4084:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4081 : GHC.Types.Int | lq_tmp$x##4081 == SGDSimple.bind lq_tmp$x##4085 lq_tmp$x##4086}

s: lq_tmp$x##4095:GHC.Types.Int -> lq_tmp$x##4096:(lq_tmp$x##4094:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4091 : GHC.Types.Int | lq_tmp$x##4091 == SGDSimple.bind lq_tmp$x##4095 lq_tmp$x##4096}

p: [lq_tmp$x##4085 < lq_tmp$x##4095 => ((lq_tmp$x##4084 < lq_tmp$x##4094 => r1 <= r2) => r1 lq_tmp$x##4085 lq_tmp$x##4086 < r2 lq_tmp$x##4095 lq_tmp$x##4096)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##4105 < lq_tmp$x##4115 => ((lq_tmp$x##4104 < lq_tmp$x##4114 => r1 <= r2) => r1 lq_tmp$x##4105 lq_tmp$x##4106 < r2 lq_tmp$x##4115 lq_tmp$x##4116)]
SYNTH APP TO 
e: lq_tmp$x##4105:GHC.Types.Int -> lq_tmp$x##4106:(lq_tmp$x##4104:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4101 : GHC.Types.Int | lq_tmp$x##4101 == SGDSimple.bind lq_tmp$x##4105 lq_tmp$x##4106}

d: lq_tmp$x##4115:GHC.Types.Int -> lq_tmp$x##4116:(lq_tmp$x##4114:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4111 : GHC.Types.Int | lq_tmp$x##4111 == SGDSimple.bind lq_tmp$x##4115 lq_tmp$x##4116}

t: [lq_tmp$x##4105 < lq_tmp$x##4115 => ((lq_tmp$x##4104 < lq_tmp$x##4114 => r1 <= r2) => r1 lq_tmp$x##4105 lq_tmp$x##4106 < r2 lq_tmp$x##4115 lq_tmp$x##4116)]

s: xl_auR

p: xr_auR
App Exp Exp To SYNTH
e: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xl_auR)

d: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:15>
   xr_auR)

t: lq_tmp$x##4106:(lq_tmp$x##4104:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4101 : GHC.Types.Int | lq_tmp$x##4101 == SGDSimple.bind xl_auR lq_tmp$x##4106}

s: lq_tmp$x##4116:(lq_tmp$x##4114:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4111 : GHC.Types.Int | lq_tmp$x##4111 == SGDSimple.bind xr_auR lq_tmp$x##4116}

p: [(lq_tmp$x##4104 < lq_tmp$x##4114 => r1 <= r2) => r1 lq_tmp$x##4106 < r2 lq_tmp$x##4116]
Synth To CHECK
e: xl_auR

d: xr_auR

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auR, GHC.Types.Int, {VV##3923 : GHC.Types.Int | VV##3923 == xl_auR})
SELFIFICATION (xr_auR, GHC.Types.Int, {VV##3924 : GHC.Types.Int | VV##3924 == xr_auR})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auR

d: xr_auR

t: {lq_tmp$x##4117 : GHC.Types.Int | lq_tmp$x##4117 == xl_auR}

s: {lq_tmp$x##4118 : GHC.Types.Int | lq_tmp$x##4118 == xr_auR}

p: []
SELFIFICATION (xr_auR, GHC.Types.Int, {VV##3924 : GHC.Types.Int | VV##3924 == xr_auR})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##4119 : GHC.Types.Int | lq_tmp$x##4119 == xl_auR}

s: {lq_tmp$x##4120 : GHC.Types.Int | lq_tmp$x##4120 == xr_auR}

p: true

q: r1 < r2
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##4133 < lq_tmp$x##4143 => ((lq_tmp$x##4132 < lq_tmp$x##4142 => r1 <= r2) => r1 lq_tmp$x##4133 lq_tmp$x##4134 < r2 lq_tmp$x##4143 lq_tmp$x##4144)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##4133:GHC.Types.Int -> lq_tmp$x##4134:(lq_tmp$x##4132:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4129 : GHC.Types.Int | lq_tmp$x##4129 == SGDSimple.bind lq_tmp$x##4133 lq_tmp$x##4134}

s: lq_tmp$x##4143:GHC.Types.Int -> lq_tmp$x##4144:(lq_tmp$x##4142:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4139 : GHC.Types.Int | lq_tmp$x##4139 == SGDSimple.bind lq_tmp$x##4143 lq_tmp$x##4144}

p: [lq_tmp$x##4133 < lq_tmp$x##4143 => ((lq_tmp$x##4132 < lq_tmp$x##4142 => r1 <= r2) => r1 lq_tmp$x##4133 lq_tmp$x##4134 < r2 lq_tmp$x##4143 lq_tmp$x##4144)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##4153 < lq_tmp$x##4163 => ((lq_tmp$x##4152 < lq_tmp$x##4162 => r1 <= r2) => r1 lq_tmp$x##4153 lq_tmp$x##4154 < r2 lq_tmp$x##4163 lq_tmp$x##4164)]
SYNTH APP TO 
e: lq_tmp$x##4153:GHC.Types.Int -> lq_tmp$x##4154:(lq_tmp$x##4152:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4149 : GHC.Types.Int | lq_tmp$x##4149 == SGDSimple.bind lq_tmp$x##4153 lq_tmp$x##4154}

d: lq_tmp$x##4163:GHC.Types.Int -> lq_tmp$x##4164:(lq_tmp$x##4162:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4159 : GHC.Types.Int | lq_tmp$x##4159 == SGDSimple.bind lq_tmp$x##4163 lq_tmp$x##4164}

t: [lq_tmp$x##4153 < lq_tmp$x##4163 => ((lq_tmp$x##4152 < lq_tmp$x##4162 => r1 <= r2) => r1 lq_tmp$x##4153 lq_tmp$x##4154 < r2 lq_tmp$x##4163 lq_tmp$x##4164)]

s: xl_auR

p: xr_auR
SYNTH APP TO 
e: lq_tmp$x##4154:(lq_tmp$x##4152:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4149 : GHC.Types.Int | lq_tmp$x##4149 == SGDSimple.bind xl_auR lq_tmp$x##4154}

d: lq_tmp$x##4164:(lq_tmp$x##4162:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4159 : GHC.Types.Int | lq_tmp$x##4159 == SGDSimple.bind xr_auR lq_tmp$x##4164}

t: [(lq_tmp$x##4152 < lq_tmp$x##4162 => r1 <= r2) => r1 lq_tmp$x##4154 < r2 lq_tmp$x##4164]

s: lq_anf$##7205759403792795927l_dBx

p: lq_anf$##7205759403792795927r_dBx
base RelSub
t: {lq_tmp$x##4149 : GHC.Types.Int | lq_tmp$x##4149 == SGDSimple.bind xl_auR lq_anf$##7205759403792795927l_dBx}

s: {lq_tmp$x##4159 : GHC.Types.Int | lq_tmp$x##4159 == SGDSimple.bind xr_auR lq_anf$##7205759403792795927r_dBx}

p: r1 < r2

q: r1 < r2
Synth To CHECK
e: lq_anf$##7205759403792795927l_dBx

d: lq_anf$##7205759403792795927r_dBx

t: lq_tmp$x##4152:GHC.Types.Int -> GHC.Types.Int

s: lq_tmp$x##4162:GHC.Types.Int -> GHC.Types.Int

p: lq_tmp$x##4152 < lq_tmp$x##4162 => r1 <= r2
SELFIFICATION (lq_anf$##7205759403792795927l_dBx, lq_tmp$x##3947:{lq_tmp$x##3944 : GHC.Types.Int | $k_##3942[VV##3941:=lq_tmp$x##3944]} -> {lq_tmp$x##3945 : GHC.Types.Int | lq_tmp$x##3945 == SGDSimple.update lq_tmp$x##3947}, lq_tmp$x##3947:{lq_tmp$x##3944 : GHC.Types.Int | $k_##3942[VV##3941:=lq_tmp$x##3944]} -> {lq_tmp$x##3945 : GHC.Types.Int | lq_tmp$x##3945 == SGDSimple.update lq_tmp$x##3947
                                                                                                                                                                                                                                                                                                                                              && lq_tmp$x##3945 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##3947})
Synth To CHECK
e: xl_auR

d: xr_auR

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auR, GHC.Types.Int, {VV##3923 : GHC.Types.Int | VV##3923 == xl_auR})
SELFIFICATION (xr_auR, GHC.Types.Int, {VV##3924 : GHC.Types.Int | VV##3924 == xr_auR})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auR

d: xr_auR

t: {lq_tmp$x##4165 : GHC.Types.Int | lq_tmp$x##4165 == xl_auR}

s: {lq_tmp$x##4166 : GHC.Types.Int | lq_tmp$x##4166 == xr_auR}

p: []
SELFIFICATION (xr_auR, GHC.Types.Int, {VV##3924 : GHC.Types.Int | VV##3924 == xr_auR})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##4167 : GHC.Types.Int | lq_tmp$x##4167 == xl_auR}

s: {lq_tmp$x##4168 : GHC.Types.Int | lq_tmp$x##4168 == xr_auR}

p: true

q: r1 < r2
SELFIFICATION (lq_anf$##7205759403792795927r_dBx, lq_tmp$x##3954:{lq_tmp$x##3951 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##3951]} -> {lq_tmp$x##3952 : GHC.Types.Int | lq_tmp$x##3952 == SGDSimple.update lq_tmp$x##3954}, lq_tmp$x##3954:{lq_tmp$x##3951 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##3951]} -> {lq_tmp$x##3952 : GHC.Types.Int | lq_tmp$x##3952 == SGDSimple.update lq_tmp$x##3954
                                                                                                                                                                                                                                                                                                                                              && lq_tmp$x##3952 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##3954})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795927l_dBx

d: lq_anf$##7205759403792795927r_dBx

t: lq_tmp$x##4176:{lq_tmp$x##4173 : GHC.Types.Int | $k_##3942[VV##3941:=lq_tmp$x##4173][lq_tmp$x##3944:=lq_tmp$x##4173]} -> {lq_tmp$x##4174 : GHC.Types.Int | lq_tmp$x##4174 == SGDSimple.update lq_tmp$x##4176
                                                                                                                                                           && lq_tmp$x##4174 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##4176}

s: lq_tmp$x##4180:{lq_tmp$x##4177 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##4177][lq_tmp$x##3951:=lq_tmp$x##4177]} -> {lq_tmp$x##4178 : GHC.Types.Int | lq_tmp$x##4178 == SGDSimple.update lq_tmp$x##4180
                                                                                                                                                           && lq_tmp$x##4178 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##4180}

p: []
SELFIFICATION (lq_anf$##7205759403792795927r_dBx, lq_tmp$x##3954:{lq_tmp$x##3951 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##3951]} -> {lq_tmp$x##3952 : GHC.Types.Int | lq_tmp$x##3952 == SGDSimple.update lq_tmp$x##3954}, lq_tmp$x##3954:{lq_tmp$x##3951 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##3951]} -> {lq_tmp$x##3952 : GHC.Types.Int | lq_tmp$x##3952 == SGDSimple.update lq_tmp$x##3954
                                                                                                                                                                                                                                                                                                                                              && lq_tmp$x##3952 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##3954})
consRelSynth Unary synthed preds:[]
fun RelSub
t: lq_tmp$x##4184:{lq_tmp$x##4181 : GHC.Types.Int | $k_##3942[VV##3941:=lq_tmp$x##4181][lq_tmp$x##3944:=lq_tmp$x##4181]} -> {lq_tmp$x##4182 : GHC.Types.Int | lq_tmp$x##4182 == SGDSimple.update lq_tmp$x##4184
                                                                                                                                                           && lq_tmp$x##4182 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##4184}

s: lq_tmp$x##4188:{lq_tmp$x##4185 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##4185][lq_tmp$x##3951:=lq_tmp$x##4185]} -> {lq_tmp$x##4186 : GHC.Types.Int | lq_tmp$x##4186 == SGDSimple.update lq_tmp$x##4188
                                                                                                                                                           && lq_tmp$x##4186 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##4188}

p: true

q: lq_tmp$x##4184 < lq_tmp$x##4188 => r1 <= r2
fun RelSub
t: {lq_tmp$x##4182 : GHC.Types.Int | lq_tmp$x##4182 == SGDSimple.update lq_tmp$x##4184
                                  && lq_tmp$x##4182 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##4184}

s: lq_tmp$x##4188:{lq_tmp$x##4185 : GHC.Types.Int | $k_##3949[VV##3948:=lq_tmp$x##4185][lq_tmp$x##3951:=lq_tmp$x##4185]} -> {lq_tmp$x##4186 : GHC.Types.Int | lq_tmp$x##4186 == SGDSimple.update lq_tmp$x##4188
                                                                                                                                                           && lq_tmp$x##4186 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##4188}

p: true

q: lq_tmp$x##4184 < lq_tmp$x##4188 => r1 <= r2
base RelSub
t: {lq_tmp$x##4182 : GHC.Types.Int | lq_tmp$x##4182 == SGDSimple.update lq_tmp$x##4184
                                  && lq_tmp$x##4182 == lq_anf$##7205759403792795927l_dBx lq_tmp$x##4184}

s: {lq_tmp$x##4186 : GHC.Types.Int | lq_tmp$x##4186 == SGDSimple.update lq_tmp$x##4188
                                  && lq_tmp$x##4186 == lq_anf$##7205759403792795927r_dBx lq_tmp$x##4188}

p: true

q: lq_tmp$x##4184 < lq_tmp$x##4188 => r1 <= r2
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: 0#

d: 0#

t: {lq_tmp$x##4205 : GHC.Prim.Int# | lq_tmp$x##4205 == 0}

s: {lq_tmp$x##4206 : GHC.Prim.Int# | lq_tmp$x##4206 == 0}

p: []
Let To CHECK
e: let {
  lq_anf$##7205759403792795926 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795926
    = GHC.Types.I# lq_anf$##7205759403792795925l_dBv } in
let {
  u :: GHC.Types.Int -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
  u = break<2>()
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
      SGDSimple.update'
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
         lq_anf$##7205759403792795926) } in
let {
  b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
  b1
    = break<3>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
         xl_auT) } in
break<5>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
break<4>(b1,u)
b1
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   u)

d: let {
  lq_anf$##7205759403792795926 :: GHC.Types.Int
  [LclId]
  lq_anf$##7205759403792795926
    = GHC.Types.I# lq_anf$##7205759403792795925r_dBv } in
let {
  u :: GHC.Types.Int -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
  u = break<2>()
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
      SGDSimple.update'
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
         lq_anf$##7205759403792795926) } in
let {
  b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
  b1
    = break<3>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
         xr_auT) } in
break<5>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
break<4>(b1,u)
b1
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   u)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
Let qs: []
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Types.I#

d: GHC.Types.I#

t: lq_tmp$x##4216:GHC.Prim.Int# -> {lq_tmp$x##4214 : GHC.Types.Int | lq_tmp$x##4214 == lq_tmp$x##4216
                                                                  && lq_tmp$x##4214 == GHC.Types.I# lq_tmp$x##4216}

s: lq_tmp$x##4220:GHC.Prim.Int# -> {lq_tmp$x##4218 : GHC.Types.Int | lq_tmp$x##4218 == lq_tmp$x##4220
                                                                  && lq_tmp$x##4218 == GHC.Types.I# lq_tmp$x##4220}

p: []
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##4224:GHC.Prim.Int# -> {lq_tmp$x##4222 : GHC.Types.Int | lq_tmp$x##4222 == lq_tmp$x##4224
                                                                  && lq_tmp$x##4222 == GHC.Types.I# lq_tmp$x##4224}

d: lq_tmp$x##4228:GHC.Prim.Int# -> {lq_tmp$x##4226 : GHC.Types.Int | lq_tmp$x##4226 == lq_tmp$x##4228
                                                                  && lq_tmp$x##4226 == GHC.Types.I# lq_tmp$x##4228}

t: []

s: lq_anf$##7205759403792795925l_dBv

p: lq_anf$##7205759403792795925r_dBv
SELFIFICATION (lq_anf$##7205759403792795925l_dBv, {lq_tmp$x##4207 : GHC.Prim.Int# | lq_tmp$x##4207 == 0}, {lq_tmp$x##4207 : GHC.Prim.Int# | lq_tmp$x##4207 == 0
                                                                                                                              && lq_tmp$x##4207 == lq_anf$##7205759403792795925l_dBv})
SELFIFICATION (lq_anf$##7205759403792795925r_dBv, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0}, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0
                                                                                                                              && lq_tmp$x##4208 == lq_anf$##7205759403792795925r_dBv})
SELFIFICATION (lq_anf$##7205759403792795925l_dBv, {lq_tmp$x##4207 : GHC.Prim.Int# | lq_tmp$x##4207 == 0}, {lq_tmp$x##4207 : GHC.Prim.Int# | lq_tmp$x##4207 == 0
                                                                                                                              && lq_tmp$x##4207 == lq_anf$##7205759403792795925l_dBv})
SELFIFICATION (lq_anf$##7205759403792795925r_dBv, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0}, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0
                                                                                                                              && lq_tmp$x##4208 == lq_anf$##7205759403792795925r_dBv})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795925l_dBv

d: lq_anf$##7205759403792795925r_dBv

t: {lq_tmp$x##4229 : GHC.Prim.Int# | lq_tmp$x##4229 == 0
                                  && lq_tmp$x##4229 == lq_anf$##7205759403792795925l_dBv}

s: {lq_tmp$x##4230 : GHC.Prim.Int# | lq_tmp$x##4230 == 0
                                  && lq_tmp$x##4230 == lq_anf$##7205759403792795925r_dBv}

p: []
consRelSynth Unary synthed preds:[]
App Exp Exp To SYNTH
e: GHC.Types.I# lq_anf$##7205759403792795925l_dBv

d: GHC.Types.I# lq_anf$##7205759403792795925r_dBv

t: {lq_tmp$x##4222 : GHC.Types.Int | lq_tmp$x##4222 == lq_anf$##7205759403792795925l_dBv
                                  && lq_tmp$x##4222 == GHC.Types.I# lq_anf$##7205759403792795925l_dBv}

s: {lq_tmp$x##4226 : GHC.Types.Int | lq_tmp$x##4226 == lq_anf$##7205759403792795925r_dBv
                                  && lq_tmp$x##4226 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv}

p: []
SELFIFICATION (lq_anf$##7205759403792795925r_dBv, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0}, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0
                                                                                                                              && lq_tmp$x##4208 == lq_anf$##7205759403792795925r_dBv})
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: GHC.Types.I#

d: GHC.Types.I#

t: lq_tmp$x##4236:GHC.Prim.Int# -> {lq_tmp$x##4234 : GHC.Types.Int | lq_tmp$x##4234 == lq_tmp$x##4236
                                                                  && lq_tmp$x##4234 == GHC.Types.I# lq_tmp$x##4236}

s: lq_tmp$x##4240:GHC.Prim.Int# -> {lq_tmp$x##4238 : GHC.Types.Int | lq_tmp$x##4238 == lq_tmp$x##4240
                                                                  && lq_tmp$x##4238 == GHC.Types.I# lq_tmp$x##4240}

p: []
SELFIFICATION (GHC.Types.I#, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189}, lq_tmp$x##189:GHC.Prim.Int# -> {v : GHC.Types.Int | v == lq_tmp$x##189
                                                                                                                                            && v == GHC.Types.I# lq_tmp$x##189})
consRelSynth Unary synthed preds:[]
SYNTH APP TO 
e: lq_tmp$x##4244:GHC.Prim.Int# -> {lq_tmp$x##4242 : GHC.Types.Int | lq_tmp$x##4242 == lq_tmp$x##4244
                                                                  && lq_tmp$x##4242 == GHC.Types.I# lq_tmp$x##4244}

d: lq_tmp$x##4248:GHC.Prim.Int# -> {lq_tmp$x##4246 : GHC.Types.Int | lq_tmp$x##4246 == lq_tmp$x##4248
                                                                  && lq_tmp$x##4246 == GHC.Types.I# lq_tmp$x##4248}

t: []

s: lq_anf$##7205759403792795925l_dBv

p: lq_anf$##7205759403792795925r_dBv
SELFIFICATION (lq_anf$##7205759403792795925l_dBv, {lq_tmp$x##4207 : GHC.Prim.Int# | lq_tmp$x##4207 == 0}, {lq_tmp$x##4207 : GHC.Prim.Int# | lq_tmp$x##4207 == 0
                                                                                                                              && lq_tmp$x##4207 == lq_anf$##7205759403792795925l_dBv})
SELFIFICATION (lq_anf$##7205759403792795925r_dBv, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0}, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0
                                                                                                                              && lq_tmp$x##4208 == lq_anf$##7205759403792795925r_dBv})
SELFIFICATION (lq_anf$##7205759403792795925l_dBv, {lq_tmp$x##4207 : GHC.Prim.Int# | lq_tmp$x##4207 == 0}, {lq_tmp$x##4207 : GHC.Prim.Int# | lq_tmp$x##4207 == 0
                                                                                                                              && lq_tmp$x##4207 == lq_anf$##7205759403792795925l_dBv})
SELFIFICATION (lq_anf$##7205759403792795925r_dBv, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0}, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0
                                                                                                                              && lq_tmp$x##4208 == lq_anf$##7205759403792795925r_dBv})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795925l_dBv

d: lq_anf$##7205759403792795925r_dBv

t: {lq_tmp$x##4249 : GHC.Prim.Int# | lq_tmp$x##4249 == 0
                                  && lq_tmp$x##4249 == lq_anf$##7205759403792795925l_dBv}

s: {lq_tmp$x##4250 : GHC.Prim.Int# | lq_tmp$x##4250 == 0
                                  && lq_tmp$x##4250 == lq_anf$##7205759403792795925r_dBv}

p: []
Let To CHECK
e: let {
  u :: GHC.Types.Int -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
  u = break<2>()
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
      SGDSimple.update'
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
         lq_anf$##7205759403792795926l_dBw) } in
let {
  b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
  b1
    = break<3>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
         xl_auT) } in
break<5>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
break<4>(b1,u)
b1
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   u)

d: let {
  u :: GHC.Types.Int -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
  u = break<2>()
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:15-27>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:19-27>
      SGDSimple.update'
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
         lq_anf$##7205759403792795926r_dBw) } in
let {
  b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
  b1
    = break<3>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
         xr_auT) } in
break<5>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
break<4>(b1,u)
b1
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   u)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (lq_anf$##7205759403792795925r_dBv, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0}, {lq_tmp$x##4208 : GHC.Prim.Int# | lq_tmp$x##4208 == 0
                                                                                                                              && lq_tmp$x##4208 == lq_anf$##7205759403792795925r_dBv})
SELFIFICATION (SGDSimple.update', lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update' lq_tmp$x##337 lq_tmp$x##338})
SELFIFICATION (SGDSimple.update', lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update' lq_tmp$x##337 lq_tmp$x##338})
consRelSynth Unary synthed preds:[]
Let qs: []
consRelSynth Unary synthed preds:[true => (lq_tmp$x##4263 < lq_tmp$x##4270 => r1 lq_tmp$x##4262 lq_tmp$x##4263 < r2 lq_tmp$x##4269 lq_tmp$x##4270)]
Unary To SYNTH
e: SGDSimple.update'

d: SGDSimple.update'

t: lq_tmp$x##4262:GHC.Types.Int -> lq_tmp$x##4263:GHC.Types.Int -> {lq_tmp$x##4259 : GHC.Types.Int | lq_tmp$x##4259 == SGDSimple.update' lq_tmp$x##4262 lq_tmp$x##4263}

s: lq_tmp$x##4269:GHC.Types.Int -> lq_tmp$x##4270:GHC.Types.Int -> {lq_tmp$x##4266 : GHC.Types.Int | lq_tmp$x##4266 == SGDSimple.update' lq_tmp$x##4269 lq_tmp$x##4270}

p: [true => (lq_tmp$x##4263 < lq_tmp$x##4270 => r1 lq_tmp$x##4262 lq_tmp$x##4263 < r2 lq_tmp$x##4269 lq_tmp$x##4270)]
SELFIFICATION (SGDSimple.update', lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update' lq_tmp$x##337 lq_tmp$x##338})
consRelSynth Unary synthed preds:[true => (lq_tmp$x##4277 < lq_tmp$x##4284 => r1 lq_tmp$x##4276 lq_tmp$x##4277 < r2 lq_tmp$x##4283 lq_tmp$x##4284)]
SYNTH APP TO 
e: lq_tmp$x##4276:GHC.Types.Int -> lq_tmp$x##4277:GHC.Types.Int -> {lq_tmp$x##4273 : GHC.Types.Int | lq_tmp$x##4273 == SGDSimple.update' lq_tmp$x##4276 lq_tmp$x##4277}

d: lq_tmp$x##4283:GHC.Types.Int -> lq_tmp$x##4284:GHC.Types.Int -> {lq_tmp$x##4280 : GHC.Types.Int | lq_tmp$x##4280 == SGDSimple.update' lq_tmp$x##4283 lq_tmp$x##4284}

t: [true => (lq_tmp$x##4277 < lq_tmp$x##4284 => r1 lq_tmp$x##4276 lq_tmp$x##4277 < r2 lq_tmp$x##4283 lq_tmp$x##4284)]

s: lq_anf$##7205759403792795926l_dBw

p: lq_anf$##7205759403792795926r_dBw
App Exp Exp To SYNTH
e: SGDSimple.update'
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
   lq_anf$##7205759403792795926l_dBw)

d: SGDSimple.update'
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:49:27>
   lq_anf$##7205759403792795926r_dBw)

t: lq_tmp$x##4277:GHC.Types.Int -> {lq_tmp$x##4273 : GHC.Types.Int | lq_tmp$x##4273 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4277}

s: lq_tmp$x##4284:GHC.Types.Int -> {lq_tmp$x##4280 : GHC.Types.Int | lq_tmp$x##4280 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4284}

p: [lq_tmp$x##4277 < lq_tmp$x##4284 => r1 lq_tmp$x##4277 < r2 lq_tmp$x##4284]
Synth To CHECK
e: lq_anf$##7205759403792795926l_dBw

d: lq_anf$##7205759403792795926r_dBw

t: GHC.Types.Int

s: GHC.Types.Int

p: true
SELFIFICATION (lq_anf$##7205759403792795926l_dBw, {lq_tmp$x##4242 : GHC.Types.Int | lq_tmp$x##4242 == lq_anf$##7205759403792795925l_dBv
                                                                      && lq_tmp$x##4242 == GHC.Types.I# lq_anf$##7205759403792795925l_dBv}, {lq_tmp$x##4242 : GHC.Types.Int | lq_tmp$x##4242 == lq_anf$##7205759403792795925l_dBv
                                                                                                                                                                              && lq_tmp$x##4242 == GHC.Types.I# lq_anf$##7205759403792795925l_dBv
                                                                                                                                                                              && lq_tmp$x##4242 == lq_anf$##7205759403792795926l_dBw})
SELFIFICATION (lq_anf$##7205759403792795926r_dBw, {lq_tmp$x##4246 : GHC.Types.Int | lq_tmp$x##4246 == lq_anf$##7205759403792795925r_dBv
                                                                      && lq_tmp$x##4246 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv}, {lq_tmp$x##4246 : GHC.Types.Int | lq_tmp$x##4246 == lq_anf$##7205759403792795925r_dBv
                                                                                                                                                                              && lq_tmp$x##4246 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv
                                                                                                                                                                              && lq_tmp$x##4246 == lq_anf$##7205759403792795926r_dBw})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795926l_dBw

d: lq_anf$##7205759403792795926r_dBw

t: {lq_tmp$x##4285 : GHC.Types.Int | lq_tmp$x##4285 == lq_anf$##7205759403792795925l_dBv
                                  && lq_tmp$x##4285 == GHC.Types.I# lq_anf$##7205759403792795925l_dBv
                                  && lq_tmp$x##4285 == lq_anf$##7205759403792795926l_dBw}

s: {lq_tmp$x##4286 : GHC.Types.Int | lq_tmp$x##4286 == lq_anf$##7205759403792795925r_dBv
                                  && lq_tmp$x##4286 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv
                                  && lq_tmp$x##4286 == lq_anf$##7205759403792795926r_dBw}

p: []
SELFIFICATION (lq_anf$##7205759403792795926r_dBw, {lq_tmp$x##4246 : GHC.Types.Int | lq_tmp$x##4246 == lq_anf$##7205759403792795925r_dBv
                                                                      && lq_tmp$x##4246 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv}, {lq_tmp$x##4246 : GHC.Types.Int | lq_tmp$x##4246 == lq_anf$##7205759403792795925r_dBv
                                                                                                                                                                              && lq_tmp$x##4246 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv
                                                                                                                                                                              && lq_tmp$x##4246 == lq_anf$##7205759403792795926r_dBw})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##4287 : GHC.Types.Int | lq_tmp$x##4287 == lq_anf$##7205759403792795925l_dBv
                                  && lq_tmp$x##4287 == GHC.Types.I# lq_anf$##7205759403792795925l_dBv
                                  && lq_tmp$x##4287 == lq_anf$##7205759403792795926l_dBw}

s: {lq_tmp$x##4288 : GHC.Types.Int | lq_tmp$x##4288 == lq_anf$##7205759403792795925r_dBv
                                  && lq_tmp$x##4288 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv
                                  && lq_tmp$x##4288 == lq_anf$##7205759403792795926r_dBw}

p: true

q: true
SELFIFICATION (SGDSimple.update', lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update' lq_tmp$x##337 lq_tmp$x##338})
consRelSynth Unary synthed preds:[true => (lq_tmp$x##4299 < lq_tmp$x##4306 => r1 lq_tmp$x##4298 lq_tmp$x##4299 < r2 lq_tmp$x##4305 lq_tmp$x##4306)]
Unary To SYNTH
e: SGDSimple.update'

d: SGDSimple.update'

t: lq_tmp$x##4298:GHC.Types.Int -> lq_tmp$x##4299:GHC.Types.Int -> {lq_tmp$x##4295 : GHC.Types.Int | lq_tmp$x##4295 == SGDSimple.update' lq_tmp$x##4298 lq_tmp$x##4299}

s: lq_tmp$x##4305:GHC.Types.Int -> lq_tmp$x##4306:GHC.Types.Int -> {lq_tmp$x##4302 : GHC.Types.Int | lq_tmp$x##4302 == SGDSimple.update' lq_tmp$x##4305 lq_tmp$x##4306}

p: [true => (lq_tmp$x##4299 < lq_tmp$x##4306 => r1 lq_tmp$x##4298 lq_tmp$x##4299 < r2 lq_tmp$x##4305 lq_tmp$x##4306)]
SELFIFICATION (SGDSimple.update', lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> GHC.Types.Int, lq_tmp$x##337:GHC.Types.Int -> lq_tmp$x##338:GHC.Types.Int -> {VV : GHC.Types.Int | VV == SGDSimple.update' lq_tmp$x##337 lq_tmp$x##338})
consRelSynth Unary synthed preds:[true => (lq_tmp$x##4313 < lq_tmp$x##4320 => r1 lq_tmp$x##4312 lq_tmp$x##4313 < r2 lq_tmp$x##4319 lq_tmp$x##4320)]
SYNTH APP TO 
e: lq_tmp$x##4312:GHC.Types.Int -> lq_tmp$x##4313:GHC.Types.Int -> {lq_tmp$x##4309 : GHC.Types.Int | lq_tmp$x##4309 == SGDSimple.update' lq_tmp$x##4312 lq_tmp$x##4313}

d: lq_tmp$x##4319:GHC.Types.Int -> lq_tmp$x##4320:GHC.Types.Int -> {lq_tmp$x##4316 : GHC.Types.Int | lq_tmp$x##4316 == SGDSimple.update' lq_tmp$x##4319 lq_tmp$x##4320}

t: [true => (lq_tmp$x##4313 < lq_tmp$x##4320 => r1 lq_tmp$x##4312 lq_tmp$x##4313 < r2 lq_tmp$x##4319 lq_tmp$x##4320)]

s: lq_anf$##7205759403792795926l_dBw

p: lq_anf$##7205759403792795926r_dBw
Let To CHECK
e: let {
  b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
  b1
    = break<3>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
         xl_auT) } in
break<5>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
break<4>(b1,u)
b1
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   ul_auV)

d: let {
  b1 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int
  [LclId,
   Unf=Unf{Src=<vanilla>, TopLvl=False, Value=False, ConLike=False,
           WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
  b1
    = break<3>(x)
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:15-25>
      src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:20-25>
      SGDSimple.bind
        (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
         xr_auT) } in
break<5>(x)
src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:(48,1)-(50,21)>
break<4>(b1,u)
b1
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   ur_auV)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
Synth To CHECK
e: lq_anf$##7205759403792795926l_dBw

d: lq_anf$##7205759403792795926r_dBw

t: GHC.Types.Int

s: GHC.Types.Int

p: true
SELFIFICATION (lq_anf$##7205759403792795926l_dBw, {lq_tmp$x##4242 : GHC.Types.Int | lq_tmp$x##4242 == lq_anf$##7205759403792795925l_dBv
                                                                      && lq_tmp$x##4242 == GHC.Types.I# lq_anf$##7205759403792795925l_dBv}, {lq_tmp$x##4242 : GHC.Types.Int | lq_tmp$x##4242 == lq_anf$##7205759403792795925l_dBv
                                                                                                                                                                              && lq_tmp$x##4242 == GHC.Types.I# lq_anf$##7205759403792795925l_dBv
                                                                                                                                                                              && lq_tmp$x##4242 == lq_anf$##7205759403792795926l_dBw})
SELFIFICATION (lq_anf$##7205759403792795926r_dBw, {lq_tmp$x##4246 : GHC.Types.Int | lq_tmp$x##4246 == lq_anf$##7205759403792795925r_dBv
                                                                      && lq_tmp$x##4246 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv}, {lq_tmp$x##4246 : GHC.Types.Int | lq_tmp$x##4246 == lq_anf$##7205759403792795925r_dBv
                                                                                                                                                                              && lq_tmp$x##4246 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv
                                                                                                                                                                              && lq_tmp$x##4246 == lq_anf$##7205759403792795926r_dBw})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: lq_anf$##7205759403792795926l_dBw

d: lq_anf$##7205759403792795926r_dBw

t: {lq_tmp$x##4321 : GHC.Types.Int | lq_tmp$x##4321 == lq_anf$##7205759403792795925l_dBv
                                  && lq_tmp$x##4321 == GHC.Types.I# lq_anf$##7205759403792795925l_dBv
                                  && lq_tmp$x##4321 == lq_anf$##7205759403792795926l_dBw}

s: {lq_tmp$x##4322 : GHC.Types.Int | lq_tmp$x##4322 == lq_anf$##7205759403792795925r_dBv
                                  && lq_tmp$x##4322 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv
                                  && lq_tmp$x##4322 == lq_anf$##7205759403792795926r_dBw}

p: []
SELFIFICATION (lq_anf$##7205759403792795926r_dBw, {lq_tmp$x##4246 : GHC.Types.Int | lq_tmp$x##4246 == lq_anf$##7205759403792795925r_dBv
                                                                      && lq_tmp$x##4246 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv}, {lq_tmp$x##4246 : GHC.Types.Int | lq_tmp$x##4246 == lq_anf$##7205759403792795925r_dBv
                                                                                                                                                                              && lq_tmp$x##4246 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv
                                                                                                                                                                              && lq_tmp$x##4246 == lq_anf$##7205759403792795926r_dBw})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##4323 : GHC.Types.Int | lq_tmp$x##4323 == lq_anf$##7205759403792795925l_dBv
                                  && lq_tmp$x##4323 == GHC.Types.I# lq_anf$##7205759403792795925l_dBv
                                  && lq_tmp$x##4323 == lq_anf$##7205759403792795926l_dBw}

s: {lq_tmp$x##4324 : GHC.Types.Int | lq_tmp$x##4324 == lq_anf$##7205759403792795925r_dBv
                                  && lq_tmp$x##4324 == GHC.Types.I# lq_anf$##7205759403792795925r_dBv
                                  && lq_tmp$x##4324 == lq_anf$##7205759403792795926r_dBw}

p: true

q: true
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
Let qs: [lq_tmp$x##4313 < lq_tmp$x##4320 => r1 lq_tmp$x##4313 < r2 lq_tmp$x##4320]
consRelCheck toRel: (ul_auV, ur_auV, [lq_tmp$x##4313 : []], [lq_tmp$x##4320 : []], lq_tmp$x##4313 < lq_tmp$x##4320 => r1 lq_tmp$x##4313 < r2 lq_tmp$x##4320)
consRelSynth Unary synthed preds:[lq_tmp$x##4341 < lq_tmp$x##4351 => ((lq_tmp$x##4340 < lq_tmp$x##4350 => r1 <= r2) => r1 lq_tmp$x##4341 lq_tmp$x##4342 < r2 lq_tmp$x##4351 lq_tmp$x##4352)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##4341:GHC.Types.Int -> lq_tmp$x##4342:(lq_tmp$x##4340:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4337 : GHC.Types.Int | lq_tmp$x##4337 == SGDSimple.bind lq_tmp$x##4341 lq_tmp$x##4342}

s: lq_tmp$x##4351:GHC.Types.Int -> lq_tmp$x##4352:(lq_tmp$x##4350:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4347 : GHC.Types.Int | lq_tmp$x##4347 == SGDSimple.bind lq_tmp$x##4351 lq_tmp$x##4352}

p: [lq_tmp$x##4341 < lq_tmp$x##4351 => ((lq_tmp$x##4340 < lq_tmp$x##4350 => r1 <= r2) => r1 lq_tmp$x##4341 lq_tmp$x##4342 < r2 lq_tmp$x##4351 lq_tmp$x##4352)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##4361 < lq_tmp$x##4371 => ((lq_tmp$x##4360 < lq_tmp$x##4370 => r1 <= r2) => r1 lq_tmp$x##4361 lq_tmp$x##4362 < r2 lq_tmp$x##4371 lq_tmp$x##4372)]
SYNTH APP TO 
e: lq_tmp$x##4361:GHC.Types.Int -> lq_tmp$x##4362:(lq_tmp$x##4360:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4357 : GHC.Types.Int | lq_tmp$x##4357 == SGDSimple.bind lq_tmp$x##4361 lq_tmp$x##4362}

d: lq_tmp$x##4371:GHC.Types.Int -> lq_tmp$x##4372:(lq_tmp$x##4370:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4367 : GHC.Types.Int | lq_tmp$x##4367 == SGDSimple.bind lq_tmp$x##4371 lq_tmp$x##4372}

t: [lq_tmp$x##4361 < lq_tmp$x##4371 => ((lq_tmp$x##4360 < lq_tmp$x##4370 => r1 <= r2) => r1 lq_tmp$x##4361 lq_tmp$x##4362 < r2 lq_tmp$x##4371 lq_tmp$x##4372)]

s: xl_auT

p: xr_auT
App Exp Exp To SYNTH
e: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
   xl_auT)

d: SGDSimple.bind
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:48:25>
   xr_auT)

t: lq_tmp$x##4362:(lq_tmp$x##4360:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4357 : GHC.Types.Int | lq_tmp$x##4357 == SGDSimple.bind xl_auT lq_tmp$x##4362}

s: lq_tmp$x##4372:(lq_tmp$x##4370:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4367 : GHC.Types.Int | lq_tmp$x##4367 == SGDSimple.bind xr_auT lq_tmp$x##4372}

p: [(lq_tmp$x##4360 < lq_tmp$x##4370 => r1 <= r2) => r1 lq_tmp$x##4362 < r2 lq_tmp$x##4372]
Synth To CHECK
e: xl_auT

d: xr_auT

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auT, GHC.Types.Int, {VV##4201 : GHC.Types.Int | VV##4201 == xl_auT})
SELFIFICATION (xr_auT, GHC.Types.Int, {VV##4202 : GHC.Types.Int | VV##4202 == xr_auT})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auT

d: xr_auT

t: {lq_tmp$x##4373 : GHC.Types.Int | lq_tmp$x##4373 == xl_auT}

s: {lq_tmp$x##4374 : GHC.Types.Int | lq_tmp$x##4374 == xr_auT}

p: []
SELFIFICATION (xr_auT, GHC.Types.Int, {VV##4202 : GHC.Types.Int | VV##4202 == xr_auT})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##4375 : GHC.Types.Int | lq_tmp$x##4375 == xl_auT}

s: {lq_tmp$x##4376 : GHC.Types.Int | lq_tmp$x##4376 == xr_auT}

p: true

q: r1 < r2
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##4389 < lq_tmp$x##4399 => ((lq_tmp$x##4388 < lq_tmp$x##4398 => r1 <= r2) => r1 lq_tmp$x##4389 lq_tmp$x##4390 < r2 lq_tmp$x##4399 lq_tmp$x##4400)]
Unary To SYNTH
e: SGDSimple.bind

d: SGDSimple.bind

t: lq_tmp$x##4389:GHC.Types.Int -> lq_tmp$x##4390:(lq_tmp$x##4388:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4385 : GHC.Types.Int | lq_tmp$x##4385 == SGDSimple.bind lq_tmp$x##4389 lq_tmp$x##4390}

s: lq_tmp$x##4399:GHC.Types.Int -> lq_tmp$x##4400:(lq_tmp$x##4398:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4395 : GHC.Types.Int | lq_tmp$x##4395 == SGDSimple.bind lq_tmp$x##4399 lq_tmp$x##4400}

p: [lq_tmp$x##4389 < lq_tmp$x##4399 => ((lq_tmp$x##4388 < lq_tmp$x##4398 => r1 <= r2) => r1 lq_tmp$x##4389 lq_tmp$x##4390 < r2 lq_tmp$x##4399 lq_tmp$x##4400)]
SELFIFICATION (SGDSimple.bind, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.Int, lq_tmp$x##368:GHC.Types.Int -> lq_tmp$x##369:(lq_tmp$x##367:GHC.Types.Int -> GHC.Types.Int) -> {VV : GHC.Types.Int | VV == SGDSimple.bind lq_tmp$x##368 lq_tmp$x##369})
consRelSynth Unary synthed preds:[lq_tmp$x##4409 < lq_tmp$x##4419 => ((lq_tmp$x##4408 < lq_tmp$x##4418 => r1 <= r2) => r1 lq_tmp$x##4409 lq_tmp$x##4410 < r2 lq_tmp$x##4419 lq_tmp$x##4420)]
SYNTH APP TO 
e: lq_tmp$x##4409:GHC.Types.Int -> lq_tmp$x##4410:(lq_tmp$x##4408:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4405 : GHC.Types.Int | lq_tmp$x##4405 == SGDSimple.bind lq_tmp$x##4409 lq_tmp$x##4410}

d: lq_tmp$x##4419:GHC.Types.Int -> lq_tmp$x##4420:(lq_tmp$x##4418:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4415 : GHC.Types.Int | lq_tmp$x##4415 == SGDSimple.bind lq_tmp$x##4419 lq_tmp$x##4420}

t: [lq_tmp$x##4409 < lq_tmp$x##4419 => ((lq_tmp$x##4408 < lq_tmp$x##4418 => r1 <= r2) => r1 lq_tmp$x##4409 lq_tmp$x##4410 < r2 lq_tmp$x##4419 lq_tmp$x##4420)]

s: xl_auT

p: xr_auT
Synth To CHECK
e: b1l_auU
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   ul_auV)

d: b1r_auU
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   ur_auV)

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
Synth To CHECK
e: xl_auT

d: xr_auT

t: GHC.Types.Int

s: GHC.Types.Int

p: r1 < r2
SELFIFICATION (xl_auT, GHC.Types.Int, {VV##4201 : GHC.Types.Int | VV##4201 == xl_auT})
SELFIFICATION (xr_auT, GHC.Types.Int, {VV##4202 : GHC.Types.Int | VV##4202 == xr_auT})
consRelSynth Unary synthed preds:[]
Unary To SYNTH
e: xl_auT

d: xr_auT

t: {lq_tmp$x##4421 : GHC.Types.Int | lq_tmp$x##4421 == xl_auT}

s: {lq_tmp$x##4422 : GHC.Types.Int | lq_tmp$x##4422 == xr_auT}

p: []
SELFIFICATION (xr_auT, GHC.Types.Int, {VV##4202 : GHC.Types.Int | VV##4202 == xr_auT})
consRelSynth Unary synthed preds:[]
base RelSub
t: {lq_tmp$x##4423 : GHC.Types.Int | lq_tmp$x##4423 == xl_auT}

s: {lq_tmp$x##4424 : GHC.Types.Int | lq_tmp$x##4424 == xr_auT}

p: true

q: r1 < r2
SELFIFICATION (b1l_auU, lq_tmp$x##4410:(lq_tmp$x##4408:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4405 : GHC.Types.Int | lq_tmp$x##4405 == SGDSimple.bind xl_auT lq_tmp$x##4410}, lq_tmp$x##4410:(lq_tmp$x##4408:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4405 : GHC.Types.Int | lq_tmp$x##4405 == SGDSimple.bind xl_auT lq_tmp$x##4410
                                                                                                                                                                                                                                                                           && lq_tmp$x##4405 == b1l_auU lq_tmp$x##4410})
SELFIFICATION (b1r_auU, lq_tmp$x##4420:(lq_tmp$x##4418:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4415 : GHC.Types.Int | lq_tmp$x##4415 == SGDSimple.bind xr_auT lq_tmp$x##4420}, lq_tmp$x##4420:(lq_tmp$x##4418:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4415 : GHC.Types.Int | lq_tmp$x##4415 == SGDSimple.bind xr_auT lq_tmp$x##4420
                                                                                                                                                                                                                                                                           && lq_tmp$x##4415 == b1r_auU lq_tmp$x##4420})
Let qs: [(lq_tmp$x##4408 < lq_tmp$x##4418 => r1 <= r2) => r1 lq_tmp$x##4410 < r2 lq_tmp$x##4420]
consRelCheck toRel: (b1l_auU, b1r_auU, [lq_tmp$x##4410 : [lq_tmp$x##4408]], [lq_tmp$x##4420 : [lq_tmp$x##4418]], (lq_tmp$x##4408 < lq_tmp$x##4418 => r1 <= r2) => r1 lq_tmp$x##4410 < r2 lq_tmp$x##4420)
consRelSynth Unary synthed preds:[(lq_tmp$x##4438 < lq_tmp$x##4445 => r1 <= r2) => r1 lq_tmp$x##4439 < r2 lq_tmp$x##4446]
Unary To SYNTH
e: b1l_auU

d: b1r_auU

t: lq_tmp$x##4439:(lq_tmp$x##4438:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4436 : GHC.Types.Int | lq_tmp$x##4436 == SGDSimple.bind xl_auT lq_tmp$x##4439
                                                                                                    && lq_tmp$x##4436 == b1l_auU lq_tmp$x##4439}

s: lq_tmp$x##4446:(lq_tmp$x##4445:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4443 : GHC.Types.Int | lq_tmp$x##4443 == SGDSimple.bind xr_auT lq_tmp$x##4446
                                                                                                    && lq_tmp$x##4443 == b1r_auU lq_tmp$x##4446}

p: [(lq_tmp$x##4438 < lq_tmp$x##4445 => r1 <= r2) => r1 lq_tmp$x##4439 < r2 lq_tmp$x##4446]
SELFIFICATION (b1r_auU, lq_tmp$x##4420:(lq_tmp$x##4418:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4415 : GHC.Types.Int | lq_tmp$x##4415 == SGDSimple.bind xr_auT lq_tmp$x##4420}, lq_tmp$x##4420:(lq_tmp$x##4418:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4415 : GHC.Types.Int | lq_tmp$x##4415 == SGDSimple.bind xr_auT lq_tmp$x##4420
                                                                                                                                                                                                                                                                           && lq_tmp$x##4415 == b1r_auU lq_tmp$x##4420})
consRelSynth Unary synthed preds:[(lq_tmp$x##4452 < lq_tmp$x##4459 => r1 <= r2) => r1 lq_tmp$x##4453 < r2 lq_tmp$x##4460]
SYNTH APP TO 
e: lq_tmp$x##4453:(lq_tmp$x##4452:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4450 : GHC.Types.Int | lq_tmp$x##4450 == SGDSimple.bind xl_auT lq_tmp$x##4453
                                                                                                    && lq_tmp$x##4450 == b1l_auU lq_tmp$x##4453}

d: lq_tmp$x##4460:(lq_tmp$x##4459:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4457 : GHC.Types.Int | lq_tmp$x##4457 == SGDSimple.bind xr_auT lq_tmp$x##4460
                                                                                                    && lq_tmp$x##4457 == b1r_auU lq_tmp$x##4460}

t: [(lq_tmp$x##4452 < lq_tmp$x##4459 => r1 <= r2) => r1 lq_tmp$x##4453 < r2 lq_tmp$x##4460]

s: ul_auV

p: ur_auV
App Exp Exp To SYNTH
e: b1l_auU
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   ul_auV)

d: b1r_auU
  (src</Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:50:21>
   ur_auV)

t: {lq_tmp$x##4450 : GHC.Types.Int | lq_tmp$x##4450 == SGDSimple.bind xl_auT ul_auV
                                  && lq_tmp$x##4450 == b1l_auU ul_auV}

s: {lq_tmp$x##4457 : GHC.Types.Int | lq_tmp$x##4457 == SGDSimple.bind xr_auT ur_auV
                                  && lq_tmp$x##4457 == b1r_auU ur_auV}

p: [r1 < r2]
Synth To CHECK
e: ul_auV

d: ur_auV

t: lq_tmp$x##4452:GHC.Types.Int -> GHC.Types.Int

s: lq_tmp$x##4459:GHC.Types.Int -> GHC.Types.Int

p: lq_tmp$x##4452 < lq_tmp$x##4459 => r1 <= r2
SELFIFICATION (ul_auV, lq_tmp$x##4313:GHC.Types.Int -> {lq_tmp$x##4309 : GHC.Types.Int | lq_tmp$x##4309 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4313}, lq_tmp$x##4313:GHC.Types.Int -> {lq_tmp$x##4309 : GHC.Types.Int | lq_tmp$x##4309 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4313
                                                                                                                                                                                                                                    && lq_tmp$x##4309 == ul_auV lq_tmp$x##4313})
SELFIFICATION (ur_auV, lq_tmp$x##4320:GHC.Types.Int -> {lq_tmp$x##4316 : GHC.Types.Int | lq_tmp$x##4316 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4320}, lq_tmp$x##4320:GHC.Types.Int -> {lq_tmp$x##4316 : GHC.Types.Int | lq_tmp$x##4316 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4320
                                                                                                                                                                                                                                    && lq_tmp$x##4316 == ur_auV lq_tmp$x##4320})
consRelSynth Unary synthed preds:[lq_tmp$x##4464 < lq_tmp$x##4468 => r1 lq_tmp$x##4464 < r2 lq_tmp$x##4468]
Unary To SYNTH
e: ul_auV

d: ur_auV

t: lq_tmp$x##4464:GHC.Types.Int -> {lq_tmp$x##4462 : GHC.Types.Int | lq_tmp$x##4462 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4464
                                                                  && lq_tmp$x##4462 == ul_auV lq_tmp$x##4464}

s: lq_tmp$x##4468:GHC.Types.Int -> {lq_tmp$x##4466 : GHC.Types.Int | lq_tmp$x##4466 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4468
                                                                  && lq_tmp$x##4466 == ur_auV lq_tmp$x##4468}

p: [lq_tmp$x##4464 < lq_tmp$x##4468 => r1 lq_tmp$x##4464 < r2 lq_tmp$x##4468]
SELFIFICATION (ur_auV, lq_tmp$x##4320:GHC.Types.Int -> {lq_tmp$x##4316 : GHC.Types.Int | lq_tmp$x##4316 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4320}, lq_tmp$x##4320:GHC.Types.Int -> {lq_tmp$x##4316 : GHC.Types.Int | lq_tmp$x##4316 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4320
                                                                                                                                                                                                                                    && lq_tmp$x##4316 == ur_auV lq_tmp$x##4320})
consRelSynth Unary synthed preds:[lq_tmp$x##4472 < lq_tmp$x##4476 => r1 lq_tmp$x##4472 < r2 lq_tmp$x##4476]
fun RelSub
t: lq_tmp$x##4472:GHC.Types.Int -> {lq_tmp$x##4470 : GHC.Types.Int | lq_tmp$x##4470 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4472
                                                                  && lq_tmp$x##4470 == ul_auV lq_tmp$x##4472}

s: lq_tmp$x##4476:GHC.Types.Int -> {lq_tmp$x##4474 : GHC.Types.Int | lq_tmp$x##4474 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4476
                                                                  && lq_tmp$x##4474 == ur_auV lq_tmp$x##4476}

p: (lq_tmp$x##4472 < lq_tmp$x##4476 => r1 lq_tmp$x##4472 < r2 lq_tmp$x##4476)

q: lq_tmp$x##4472 < lq_tmp$x##4476 => r1 <= r2
fun RelSub
t: {lq_tmp$x##4470 : GHC.Types.Int | lq_tmp$x##4470 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4472
                                  && lq_tmp$x##4470 == ul_auV lq_tmp$x##4472}

s: lq_tmp$x##4476:GHC.Types.Int -> {lq_tmp$x##4474 : GHC.Types.Int | lq_tmp$x##4474 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4476
                                                                  && lq_tmp$x##4474 == ur_auV lq_tmp$x##4476}

p: (lq_tmp$x##4472 < lq_tmp$x##4476 => r1 < r2 lq_tmp$x##4476)

q: lq_tmp$x##4472 < lq_tmp$x##4476 => r1 <= r2
base RelSub
t: {lq_tmp$x##4470 : GHC.Types.Int | lq_tmp$x##4470 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4472
                                  && lq_tmp$x##4470 == ul_auV lq_tmp$x##4472}

s: {lq_tmp$x##4474 : GHC.Types.Int | lq_tmp$x##4474 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4476
                                  && lq_tmp$x##4474 == ur_auV lq_tmp$x##4476}

p: (lq_tmp$x##4472 < lq_tmp$x##4476 => r1 < r2)

q: lq_tmp$x##4472 < lq_tmp$x##4476 => r1 <= r2
SELFIFICATION (b1r_auU, lq_tmp$x##4420:(lq_tmp$x##4418:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4415 : GHC.Types.Int | lq_tmp$x##4415 == SGDSimple.bind xr_auT lq_tmp$x##4420}, lq_tmp$x##4420:(lq_tmp$x##4418:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4415 : GHC.Types.Int | lq_tmp$x##4415 == SGDSimple.bind xr_auT lq_tmp$x##4420
                                                                                                                                                                                                                                                                           && lq_tmp$x##4415 == b1r_auU lq_tmp$x##4420})
consRelSynth Unary synthed preds:[(lq_tmp$x##4488 < lq_tmp$x##4495 => r1 <= r2) => r1 lq_tmp$x##4489 < r2 lq_tmp$x##4496]
Unary To SYNTH
e: b1l_auU

d: b1r_auU

t: lq_tmp$x##4489:(lq_tmp$x##4488:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4486 : GHC.Types.Int | lq_tmp$x##4486 == SGDSimple.bind xl_auT lq_tmp$x##4489
                                                                                                    && lq_tmp$x##4486 == b1l_auU lq_tmp$x##4489}

s: lq_tmp$x##4496:(lq_tmp$x##4495:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4493 : GHC.Types.Int | lq_tmp$x##4493 == SGDSimple.bind xr_auT lq_tmp$x##4496
                                                                                                    && lq_tmp$x##4493 == b1r_auU lq_tmp$x##4496}

p: [(lq_tmp$x##4488 < lq_tmp$x##4495 => r1 <= r2) => r1 lq_tmp$x##4489 < r2 lq_tmp$x##4496]
SELFIFICATION (b1r_auU, lq_tmp$x##4420:(lq_tmp$x##4418:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4415 : GHC.Types.Int | lq_tmp$x##4415 == SGDSimple.bind xr_auT lq_tmp$x##4420}, lq_tmp$x##4420:(lq_tmp$x##4418:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4415 : GHC.Types.Int | lq_tmp$x##4415 == SGDSimple.bind xr_auT lq_tmp$x##4420
                                                                                                                                                                                                                                                                           && lq_tmp$x##4415 == b1r_auU lq_tmp$x##4420})
consRelSynth Unary synthed preds:[(lq_tmp$x##4502 < lq_tmp$x##4509 => r1 <= r2) => r1 lq_tmp$x##4503 < r2 lq_tmp$x##4510]
SYNTH APP TO 
e: lq_tmp$x##4503:(lq_tmp$x##4502:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4500 : GHC.Types.Int | lq_tmp$x##4500 == SGDSimple.bind xl_auT lq_tmp$x##4503
                                                                                                    && lq_tmp$x##4500 == b1l_auU lq_tmp$x##4503}

d: lq_tmp$x##4510:(lq_tmp$x##4509:GHC.Types.Int -> GHC.Types.Int) -> {lq_tmp$x##4507 : GHC.Types.Int | lq_tmp$x##4507 == SGDSimple.bind xr_auT lq_tmp$x##4510
                                                                                                    && lq_tmp$x##4507 == b1r_auU lq_tmp$x##4510}

t: [(lq_tmp$x##4502 < lq_tmp$x##4509 => r1 <= r2) => r1 lq_tmp$x##4503 < r2 lq_tmp$x##4510]

s: ul_auV

p: ur_auV
base RelSub
t: {lq_tmp$x##4500 : GHC.Types.Int | lq_tmp$x##4500 == SGDSimple.bind xl_auT ul_auV
                                  && lq_tmp$x##4500 == b1l_auU ul_auV}

s: {lq_tmp$x##4507 : GHC.Types.Int | lq_tmp$x##4507 == SGDSimple.bind xr_auT ur_auV
                                  && lq_tmp$x##4507 == b1r_auU ur_auV}

p: r1 < r2

q: r1 < r2
Synth To CHECK
e: ul_auV

d: ur_auV

t: lq_tmp$x##4502:GHC.Types.Int -> GHC.Types.Int

s: lq_tmp$x##4509:GHC.Types.Int -> GHC.Types.Int

p: lq_tmp$x##4502 < lq_tmp$x##4509 => r1 <= r2
SELFIFICATION (ul_auV, lq_tmp$x##4313:GHC.Types.Int -> {lq_tmp$x##4309 : GHC.Types.Int | lq_tmp$x##4309 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4313}, lq_tmp$x##4313:GHC.Types.Int -> {lq_tmp$x##4309 : GHC.Types.Int | lq_tmp$x##4309 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4313
                                                                                                                                                                                                                                    && lq_tmp$x##4309 == ul_auV lq_tmp$x##4313})
SELFIFICATION (ur_auV, lq_tmp$x##4320:GHC.Types.Int -> {lq_tmp$x##4316 : GHC.Types.Int | lq_tmp$x##4316 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4320}, lq_tmp$x##4320:GHC.Types.Int -> {lq_tmp$x##4316 : GHC.Types.Int | lq_tmp$x##4316 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4320
                                                                                                                                                                                                                                    && lq_tmp$x##4316 == ur_auV lq_tmp$x##4320})
consRelSynth Unary synthed preds:[lq_tmp$x##4514 < lq_tmp$x##4518 => r1 lq_tmp$x##4514 < r2 lq_tmp$x##4518]
Unary To SYNTH
e: ul_auV

d: ur_auV

t: lq_tmp$x##4514:GHC.Types.Int -> {lq_tmp$x##4512 : GHC.Types.Int | lq_tmp$x##4512 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4514
                                                                  && lq_tmp$x##4512 == ul_auV lq_tmp$x##4514}

s: lq_tmp$x##4518:GHC.Types.Int -> {lq_tmp$x##4516 : GHC.Types.Int | lq_tmp$x##4516 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4518
                                                                  && lq_tmp$x##4516 == ur_auV lq_tmp$x##4518}

p: [lq_tmp$x##4514 < lq_tmp$x##4518 => r1 lq_tmp$x##4514 < r2 lq_tmp$x##4518]
SELFIFICATION (ur_auV, lq_tmp$x##4320:GHC.Types.Int -> {lq_tmp$x##4316 : GHC.Types.Int | lq_tmp$x##4316 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4320}, lq_tmp$x##4320:GHC.Types.Int -> {lq_tmp$x##4316 : GHC.Types.Int | lq_tmp$x##4316 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4320
                                                                                                                                                                                                                                    && lq_tmp$x##4316 == ur_auV lq_tmp$x##4320})
consRelSynth Unary synthed preds:[lq_tmp$x##4522 < lq_tmp$x##4526 => r1 lq_tmp$x##4522 < r2 lq_tmp$x##4526]
fun RelSub
t: lq_tmp$x##4522:GHC.Types.Int -> {lq_tmp$x##4520 : GHC.Types.Int | lq_tmp$x##4520 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4522
                                                                  && lq_tmp$x##4520 == ul_auV lq_tmp$x##4522}

s: lq_tmp$x##4526:GHC.Types.Int -> {lq_tmp$x##4524 : GHC.Types.Int | lq_tmp$x##4524 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4526
                                                                  && lq_tmp$x##4524 == ur_auV lq_tmp$x##4526}

p: (lq_tmp$x##4522 < lq_tmp$x##4526 => r1 lq_tmp$x##4522 < r2 lq_tmp$x##4526)

q: lq_tmp$x##4522 < lq_tmp$x##4526 => r1 <= r2
fun RelSub
t: {lq_tmp$x##4520 : GHC.Types.Int | lq_tmp$x##4520 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4522
                                  && lq_tmp$x##4520 == ul_auV lq_tmp$x##4522}

s: lq_tmp$x##4526:GHC.Types.Int -> {lq_tmp$x##4524 : GHC.Types.Int | lq_tmp$x##4524 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4526
                                                                  && lq_tmp$x##4524 == ur_auV lq_tmp$x##4526}

p: (lq_tmp$x##4522 < lq_tmp$x##4526 => r1 < r2 lq_tmp$x##4526)

q: lq_tmp$x##4522 < lq_tmp$x##4526 => r1 <= r2
base RelSub
t: {lq_tmp$x##4520 : GHC.Types.Int | lq_tmp$x##4520 == SGDSimple.update' lq_anf$##7205759403792795926l_dBw lq_tmp$x##4522
                                  && lq_tmp$x##4520 == ul_auV lq_tmp$x##4522}

s: {lq_tmp$x##4524 : GHC.Types.Int | lq_tmp$x##4524 == SGDSimple.update' lq_anf$##7205759403792795926r_dBw lq_tmp$x##4526
                                  && lq_tmp$x##4524 == ur_auV lq_tmp$x##4526}

p: (lq_tmp$x##4522 < lq_tmp$x##4526 => r1 < r2)

q: lq_tmp$x##4522 < lq_tmp$x##4526 => r1 <= r2
PRECONDITION xl_auT < xr_auT
ASSUMPTION true
consRelSub Base cstr true => lq_tmp$x##4169 < lq_tmp$x##4170
PRECONDITION xl_auR < xr_auR
ASSUMPTION true
consRelSub Base cstr true => lq_tmp$x##3773 < lq_tmp$x##3774
PRECONDITION xl_auQ < xr_auQ
ASSUMPTION true
PRECONDITION true
&& xl_auN < xr_auN
ASSUMPTION true
PRECONDITION xl_atA < xr_atA
ASSUMPTION true
consRelSub Base cstr lq_tmp$x##4533 < lq_tmp$x##4534 => lq_tmp$x##4533 < lq_tmp$x##4534
consRelSub Base cstr true => true
consRelSub Base cstr (lq_tmp$x##4522 < lq_tmp$x##4526 => lq_tmp$x##4529 < lq_tmp$x##4530) => (lq_tmp$x##4522 < lq_tmp$x##4526 => lq_tmp$x##4529 <= lq_tmp$x##4530)
consRelSub Base cstr true => lq_tmp$x##4121 < lq_tmp$x##4122
consRelSub Base cstr lq_tmp$x##3917 < lq_tmp$x##3918 => lq_tmp$x##3917 < lq_tmp$x##3918
consRelSub Base cstr true => lq_tmp$x##3725 < lq_tmp$x##3726
consRelSub Base cstr true => lq_tmp$x##3611 < lq_tmp$x##3612
consRelSub Base cstr (lq_tmp$x##3906 < lq_tmp$x##3910 => lq_tmp$x##3913 < lq_tmp$x##3914) => (lq_tmp$x##3906 < lq_tmp$x##3910 => lq_tmp$x##3913 <= lq_tmp$x##3914)
consRelSub Base cstr (lq_tmp$x##4472 < lq_tmp$x##4476 => lq_tmp$x##4479 < lq_tmp$x##4480) => (lq_tmp$x##4472 < lq_tmp$x##4476 => lq_tmp$x##4479 <= lq_tmp$x##4480)
consRelSub Base cstr true => lq_tmp$x##3891 < lq_tmp$x##3892
consRelSub Base cstr true => lq_tmp$x##4425 < lq_tmp$x##4426
consRelSub Base cstr true => (lq_tmp$x##4066 < lq_tmp$x##4070 => lq_tmp$x##4073 <= lq_tmp$x##4074)
consRelSub Base cstr lq_tmp$x##3671 <= lq_tmp$x##3672 => lq_tmp$x##3671 < lq_tmp$x##3672
PRECONDITION xl_auO < xr_auO
ASSUMPTION true
consRelSub Base cstr true => lq_tmp$x##2051 < lq_tmp$x##2052
consRelSub Base cstr true => lq_tmp$x##3667 < lq_tmp$x##3668
consRelSub Base cstr lq_tmp$x##4195 < lq_tmp$x##4196 => lq_tmp$x##4195 < lq_tmp$x##4196
consRelSub Base cstr true => lq_tmp$x##3843 < lq_tmp$x##3844
consRelSub Base cstr true => lq_tmp$x##4377 < lq_tmp$x##4378
consRelSub Base cstr true => lq_tmp$x##4051 < lq_tmp$x##4052
consRelSub Base cstr true => lq_tmp$x##3643 < lq_tmp$x##3644
consRelSub Base cstr true => (lq_tmp$x##4184 < lq_tmp$x##4188 => lq_tmp$x##4191 <= lq_tmp$x##4192)
consRelSub Base cstr (lq_tmp$x##3788 < lq_tmp$x##3792 => lq_tmp$x##3795 < lq_tmp$x##3796) => (lq_tmp$x##3788 < lq_tmp$x##3792 => lq_tmp$x##3795 <= lq_tmp$x##3796)
consRelSub Base cstr true => true
consRelSub Base cstr true => lq_tmp$x##4003 < lq_tmp$x##4004
Saving Binary Query: /Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/.liquid/SGDSimple.hs.bfq

Saving Text Query: /Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/.liquid/SGDSimple.hs.fq

Number of partitions : 1
number of cores      : Nothing
minimum part size    : 500
maximum part size    : 700
[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Worklist Initialize ************************************************
[0m[1;90m 
[0m
iter=1 id=155 change=False rank=1

Computing Result
SMT READ
SMT Says: Unsat
UNSAT id 16 False
LHS: GHC.Types.True
     && (VV##F##16 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##16
SMT READ
SMT Says: Unsat
UNSAT id 32 False
LHS: GHC.Types.True
     && (VV##F##32 <=> (true => lq_tmp$x##4169 < lq_tmp$x##4170))
     && xl_auR < xr_auR
     && not GHC.Types.False
     && lq_tmp$x##4169 == xl_auR
     && lq_tmp$x##4170 == xr_auR
RHS: VV##F##32
SMT READ
SMT Says: Unsat
UNSAT id 48 False
LHS: GHC.Types.True
     && (VV##F##48 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##48
SMT READ
SMT Says: Unsat
UNSAT id 64 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && lq_tmp$x##3773 == xl_auQ
     && lq_tmp$x##3774 == xr_auQ
     && (VV##F##64 <=> (true => lq_tmp$x##3773 < lq_tmp$x##3774))
     && not GHC.Types.False
RHS: VV##F##64
SMT READ
SMT Says: Unsat
UNSAT id 80 False
LHS: GHC.Types.True
     && (VV##F##80 <=> true)
     && not GHC.Types.False
RHS: VV##F##80
SMT READ
SMT Says: Unsat
UNSAT id 96 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && (VV##F##96 <=> true)
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##96
SMT READ
SMT Says: Unsat
UNSAT id 112 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (VV##F##112 <=> true)
RHS: VV##F##112
SMT READ
SMT Says: Unsat
UNSAT id 128 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##128 <=> true)
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##128
SMT READ
SMT Says: Unsat
UNSAT id 144 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##144 <=> true)
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##144
SMT READ
SMT Says: Unsat
UNSAT id 1 False
LHS: GHC.Types.True
     && (VV##F##1 <=> (lq_tmp$x##4533 < lq_tmp$x##4534 => lq_tmp$x##4533 < lq_tmp$x##4534))
     && (lq_tmp$x##4533 == apply (apply SGDSimple.bind xl_auT) ul_auV
         && lq_tmp$x##4533 == apply b1l_auU ul_auV)
     && (lq_tmp$x##4534 == apply (apply SGDSimple.bind xr_auT) ur_auV
         && lq_tmp$x##4534 == apply b1r_auU ur_auV)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##1
SMT READ
SMT Says: Unsat
UNSAT id 17 False
LHS: GHC.Types.True
     && (lq_tmp$x##4289 == lq_anf$##7205759403792795925l_dBv
         && lq_tmp$x##4289 == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv
         && lq_tmp$x##4289 == lq_anf$##7205759403792795926l_dBw)
     && (VV##F##17 <=> (true => true))
     && (lq_tmp$x##4290 == lq_anf$##7205759403792795925r_dBv
         && lq_tmp$x##4290 == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv
         && lq_tmp$x##4290 == lq_anf$##7205759403792795926r_dBw)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##17
SMT READ
SMT Says: Unsat
UNSAT id 33 False
LHS: GHC.Types.True
     && (VV##F##33 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##33
SMT READ
SMT Says: Unsat
UNSAT id 49 False
LHS: GHC.Types.True
     && (VV##F##49 <=> true)
     && not GHC.Types.False
RHS: VV##F##49
SMT READ
SMT Says: Unsat
UNSAT id 65 False
LHS: GHC.Types.True
     && (VV##F##65 <=> true)
     && xl_auQ < xr_auQ
     && not GHC.Types.False
RHS: VV##F##65
SMT READ
SMT Says: Unsat
UNSAT id 81 False
LHS: GHC.Types.True
     && (VV##F##81 <=> true)
     && not GHC.Types.False
RHS: VV##F##81
SMT READ
SMT Says: Unsat
UNSAT id 97 False
LHS: GHC.Types.True
     && (VV##F##97 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##97
SMT READ
SMT Says: Unsat
UNSAT id 113 False
LHS: GHC.Types.True
     && (VV##F##113 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
RHS: VV##F##113
SMT READ
SMT Says: Unsat
UNSAT id 129 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##129 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##129
SMT READ
SMT Says: Unsat
UNSAT id 145 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##145 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##145
SMT READ
SMT Says: Unsat
UNSAT id 2 False
LHS: GHC.Types.True
     && (lq_tmp$x##4529 == apply (apply SGDSimple.update' lq_anf$##7205759403792795926l_dBw) lq_tmp$x##4522
         && lq_tmp$x##4529 == apply ul_auV lq_tmp$x##4522)
     && (lq_tmp$x##4530 == apply (apply SGDSimple.update' lq_anf$##7205759403792795926r_dBw) lq_tmp$x##4526
         && lq_tmp$x##4530 == apply ur_auV lq_tmp$x##4526)
     && xl_auT < xr_auT
     && (VV##F##2 <=> ((lq_tmp$x##4522 < lq_tmp$x##4526 => lq_tmp$x##4529 < lq_tmp$x##4530) => (lq_tmp$x##4522 < lq_tmp$x##4526 => lq_tmp$x##4529 <= lq_tmp$x##4530)))
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##2
SMT READ
SMT Says: Unsat
UNSAT id 18 False
LHS: GHC.Types.True
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && (VV##F##18 <=> true)
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##18
SMT READ
SMT Says: Unsat
UNSAT id 34 False
LHS: GHC.Types.True
     && xl_auR < xr_auR
     && (VV##F##34 <=> true)
     && not GHC.Types.False
RHS: VV##F##34
SMT READ
SMT Says: Unsat
UNSAT id 50 False
LHS: GHC.Types.True
     && not GHC.Types.False
     && (VV##F##50 <=> true)
RHS: VV##F##50
SMT READ
SMT Says: Unsat
UNSAT id 66 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && not GHC.Types.False
     && (VV##F##66 <=> true)
RHS: VV##F##66
SMT READ
SMT Says: Unsat
UNSAT id 82 False
LHS: GHC.Types.True
     && not GHC.Types.False
     && (VV##F##82 <=> true)
RHS: VV##F##82
SMT READ
SMT Says: Unsat
UNSAT id 98 False
LHS: GHC.Types.True
     && (VV##F##98 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##98
SMT READ
SMT Says: Unsat
UNSAT id 114 False
LHS: GHC.Types.True
     && (VV##F##114 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
RHS: VV##F##114
SMT READ
SMT Says: Unsat
UNSAT id 130 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##130 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##130
SMT READ
SMT Says: Unsat
UNSAT id 146 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##146 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##146
SMT READ
SMT Says: Unsat
UNSAT id 3 False
LHS: GHC.Types.True
     && (VV##F##3 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##3
SMT READ
SMT Says: Unsat
UNSAT id 19 False
LHS: GHC.Types.True
     && (VV##F##19 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##19
SMT READ
SMT Says: Unsat
UNSAT id 35 False
LHS: GHC.Types.True
     && (VV##F##35 <=> (true => lq_tmp$x##4121 < lq_tmp$x##4122))
     && xl_auR < xr_auR
     && lq_tmp$x##4121 == xl_auR
     && lq_tmp$x##4122 == xr_auR
     && not GHC.Types.False
RHS: VV##F##35
SMT READ
SMT Says: Unsat
UNSAT id 51 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && lq_tmp$x##3917 == apply (apply SGDSimple.bind xl_auQ) SGDSimple.update
     && lq_tmp$x##3918 == apply (apply SGDSimple.bind xr_auQ) SGDSimple.update
     && (VV##F##51 <=> (lq_tmp$x##3917 < lq_tmp$x##3918 => lq_tmp$x##3917 < lq_tmp$x##3918))
     && not GHC.Types.False
RHS: VV##F##51
SMT READ
SMT Says: Unsat
UNSAT id 67 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && lq_tmp$x##3725 == xl_auQ
     && lq_tmp$x##3726 == xr_auQ
     && (VV##F##67 <=> (true => lq_tmp$x##3725 < lq_tmp$x##3726))
     && not GHC.Types.False
RHS: VV##F##67
SMT READ
SMT Says: Unsat
UNSAT id 83 False
LHS: GHC.Types.True
     && lq_tmp$x##3611 == xl_auN + lq_anf$##7205759403792795924l_dBu
     && lq_tmp$x##3612 == xr_auN + lq_anf$##7205759403792795924r_dBu
     && (VV##F##83 <=> (true => lq_tmp$x##3611 < lq_tmp$x##3612))
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##83
SMT READ
SMT Says: Unsat
UNSAT id 99 False
LHS: GHC.Types.True
     && (VV##F##99 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##99
SMT READ
SMT Says: Unsat
UNSAT id 115 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && (VV##F##115 <=> true)
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
RHS: VV##F##115
SMT READ
SMT Says: Unsat
UNSAT id 131 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && (VV##F##131 <=> true)
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##131
SMT READ
SMT Says: Unsat
UNSAT id 147 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && (VV##F##147 <=> true)
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##147
SMT READ
SMT Says: Unsat
UNSAT id 4 False
LHS: GHC.Types.True
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (VV##F##4 <=> true)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##4
SMT READ
SMT Says: Unsat
UNSAT id 20 False
LHS: GHC.Types.True
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (VV##F##20 <=> true)
RHS: VV##F##20
SMT READ
SMT Says: Unsat
UNSAT id 36 False
LHS: GHC.Types.True
     && (VV##F##36 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##36
SMT READ
SMT Says: Unsat
UNSAT id 52 False
LHS: GHC.Types.True
     && (VV##F##52 <=> ((lq_tmp$x##3906 < lq_tmp$x##3910 => lq_tmp$x##3913 < lq_tmp$x##3914) => (lq_tmp$x##3906 < lq_tmp$x##3910 => lq_tmp$x##3913 <= lq_tmp$x##3914)))
     && lq_tmp$x##3913 == apply SGDSimple.update lq_tmp$x##3906
     && xl_auQ < xr_auQ
     && lq_tmp$x##3914 == apply SGDSimple.update lq_tmp$x##3910
     && not GHC.Types.False
RHS: VV##F##52
SMT READ
SMT Says: Unsat
UNSAT id 68 False
LHS: GHC.Types.True
     && (VV##F##68 <=> true)
     && xl_auQ < xr_auQ
     && not GHC.Types.False
RHS: VV##F##68
SMT READ
SMT Says: Unsat
UNSAT id 84 False
LHS: GHC.Types.True
     && (VV##F##84 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##84
SMT READ
SMT Says: Unsat
UNSAT id 100 False
LHS: GHC.Types.True
     && (VV##F##100 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##100
SMT READ
SMT Says: Unsat
UNSAT id 116 False
LHS: GHC.Types.True
     && (VV##F##116 <=> true)
     && not GHC.Types.False
RHS: VV##F##116
SMT READ
SMT Says: Unsat
UNSAT id 132 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##132 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##132
SMT READ
SMT Says: Unsat
UNSAT id 148 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##148 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##148
SMT READ
SMT Says: Unsat
UNSAT id 5 False
LHS: GHC.Types.True
     && (lq_tmp$x##4479 == apply (apply SGDSimple.update' lq_anf$##7205759403792795926l_dBw) lq_tmp$x##4472
         && lq_tmp$x##4479 == apply ul_auV lq_tmp$x##4472)
     && (lq_tmp$x##4480 == apply (apply SGDSimple.update' lq_anf$##7205759403792795926r_dBw) lq_tmp$x##4476
         && lq_tmp$x##4480 == apply ur_auV lq_tmp$x##4476)
     && (VV##F##5 <=> ((lq_tmp$x##4472 < lq_tmp$x##4476 => lq_tmp$x##4479 < lq_tmp$x##4480) => (lq_tmp$x##4472 < lq_tmp$x##4476 => lq_tmp$x##4479 <= lq_tmp$x##4480)))
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##5
SMT READ
SMT Says: Unsat
UNSAT id 21 False
LHS: GHC.Types.True
     && (VV##F##21 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
RHS: VV##F##21
SMT READ
SMT Says: Unsat
UNSAT id 37 False
LHS: GHC.Types.True
     && (VV##F##37 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##37
SMT READ
SMT Says: Unsat
UNSAT id 53 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (VV##F##53 <=> true)
     && not GHC.Types.False
RHS: VV##F##53
SMT READ
SMT Says: Unsat
UNSAT id 69 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (VV##F##69 <=> true)
     && not GHC.Types.False
RHS: VV##F##69
SMT READ
SMT Says: Unsat
UNSAT id 85 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (VV##F##85 <=> true)
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##85
SMT READ
SMT Says: Unsat
UNSAT id 101 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (VV##F##101 <=> true)
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##101
SMT READ
SMT Says: Unsat
UNSAT id 117 False
LHS: GHC.Types.True
     && not GHC.Types.False
     && (VV##F##117 <=> true)
RHS: VV##F##117
SMT READ
SMT Says: Unsat
UNSAT id 133 False
LHS: GHC.Types.True
     && (VV##F##133 <=> true)
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##133
SMT READ
SMT Says: Unsat
UNSAT id 149 False
LHS: GHC.Types.True
     && (VV##F##149 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
RHS: VV##F##149
SMT READ
SMT Says: Unsat
UNSAT id 6 False
LHS: GHC.Types.True
     && (VV##F##6 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##6
SMT READ
SMT Says: Unsat
UNSAT id 22 False
LHS: GHC.Types.True
     && (VV##F##22 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
RHS: VV##F##22
SMT READ
SMT Says: Unsat
UNSAT id 54 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (VV##F##54 <=> true)
     && not GHC.Types.False
RHS: VV##F##54
SMT READ
SMT Says: Unsat
UNSAT id 70 False
LHS: GHC.Types.True
     && (VV##F##70 <=> true)
     && not GHC.Types.False
RHS: VV##F##70
SMT READ
SMT Says: Unsat
UNSAT id 86 False
LHS: GHC.Types.True
     && (VV##F##86 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##86
SMT READ
SMT Says: Unsat
UNSAT id 102 False
LHS: GHC.Types.True
     && (VV##F##102 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##102
SMT READ
SMT Says: Unsat
UNSAT id 118 False
LHS: GHC.Types.True
     && (VV##F##118 <=> true)
     && not GHC.Types.False
RHS: VV##F##118
SMT READ
SMT Says: Unsat
UNSAT id 134 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##134 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##134
SMT READ
SMT Says: Unsat
UNSAT id 150 False
LHS: GHC.Types.True
     && (VV##F##150 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
RHS: VV##F##150
SMT READ
SMT Says: Unsat
UNSAT id 7 False
LHS: GHC.Types.True
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && (VV##F##7 <=> true)
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##7
SMT READ
SMT Says: Unsat
UNSAT id 23 False
LHS: GHC.Types.True
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (VV##F##23 <=> true)
RHS: VV##F##23
SMT READ
SMT Says: Unsat
UNSAT id 55 False
LHS: GHC.Types.True
     && lq_tmp$x##3892 == xr_auQ
     && xl_auQ < xr_auQ
     && not GHC.Types.False
     && (VV##F##55 <=> (true => lq_tmp$x##3891 < lq_tmp$x##3892))
     && lq_tmp$x##3891 == xl_auQ
RHS: VV##F##55
SMT READ
SMT Says: Unsat
UNSAT id 71 False
LHS: GHC.Types.True
     && (VV##F##71 <=> true)
     && not GHC.Types.False
RHS: VV##F##71
SMT READ
SMT Says: Unsat
UNSAT id 87 False
LHS: GHC.Types.True
     && (VV##F##87 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##87
SMT READ
SMT Says: Unsat
UNSAT id 103 False
LHS: GHC.Types.True
     && (VV##F##103 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##103
SMT READ
SMT Says: Unsat
UNSAT id 119 False
LHS: GHC.Types.True
     && (VV##F##119 <=> true)
     && not GHC.Types.False
RHS: VV##F##119
SMT READ
SMT Says: Unsat
UNSAT id 135 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##135 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##135
SMT READ
SMT Says: Unsat
UNSAT id 151 False
LHS: GHC.Types.True
     && (VV##F##151 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
RHS: VV##F##151
SMT READ
SMT Says: Unsat
UNSAT id 8 False
LHS: GHC.Types.True
     && (VV##F##8 <=> (true => lq_tmp$x##4425 < lq_tmp$x##4426))
     && xl_auT < xr_auT
     && lq_tmp$x##4425 == xl_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_tmp$x##4426 == xr_auT
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##8
SMT READ
SMT Says: Unsat
UNSAT id 24 False
LHS: GHC.Types.True
     && (VV##F##24 <=> true)
     && not GHC.Types.False
RHS: VV##F##24
SMT READ
SMT Says: Sat
UNSAT id 40 True
LHS: ((exists [lq_karg$xr_auR##k_##3942 : int;
               lq_karg$SGDSimple.bind##k_##3942 : (function int (function (function int int) int));
               lq_karg$sgd'r_rge##k_##3942 : (function int int);
               lq_karg$SGDSimple.sgd'##k_##3942 : (function int int);
               lq_tmp$x##4063 : int;
               lq_karg$SGDSimple.sgd##k_##3942 : (function int int);
               lq_karg$xl_auR##k_##3942 : int;
               lq_karg$SGDSimple.update'##k_##3942 : (function int (function int int));
               lq_karg$sgd'l_rge##k_##3942 : (function int int);
               lq_karg$SGDSimple.update##k_##3942 : (function int int);
               lq_karg$lq_tmp$x##3925##k_##3942 : LIQUID$dummy##xo;
               lq_karg$VV##3941##k_##3942 : int;
               lq_karg$SGDSimple.sgd''##k_##3942 : (function int int)]
         . (lq_karg$xr_auR##k_##3942 == xr_auR
            && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
            && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
            && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
            && lq_tmp$x##4063 == lq_tmp$x##4066
            && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
            && lq_karg$xl_auR##k_##3942 == xl_auR
            && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
            && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
            && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
            && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
            && lq_karg$VV##3941##k_##3942 == lq_tmp$x##4066
            && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
           && exists [VV##F##28 : int]
                . (lq_karg$xr_auR##k_##3942 == xr_auR
                   && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                   && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                   && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                   && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                   && lq_karg$xl_auR##k_##3942 == xl_auR
                   && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                   && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                   && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                   && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                   && lq_karg$VV##3941##k_##3942 == VV##F##28
                   && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
       || exists [lq_karg$xr_auR##k_##3942 : int;
                  lq_karg$SGDSimple.bind##k_##3942 : (function int (function (function int int) int));
                  lq_karg$sgd'r_rge##k_##3942 : (function int int);
                  lq_karg$SGDSimple.sgd'##k_##3942 : (function int int);
                  lq_tmp$x##4063 : int;
                  lq_karg$SGDSimple.sgd##k_##3942 : (function int int);
                  lq_karg$xl_auR##k_##3942 : int;
                  lq_karg$SGDSimple.update'##k_##3942 : (function int (function int int));
                  lq_karg$sgd'l_rge##k_##3942 : (function int int);
                  lq_karg$SGDSimple.update##k_##3942 : (function int int);
                  lq_karg$lq_tmp$x##3925##k_##3942 : LIQUID$dummy##xo;
                  lq_karg$VV##3941##k_##3942 : int;
                  lq_karg$SGDSimple.sgd''##k_##3942 : (function int int)]
            . (lq_karg$xr_auR##k_##3942 == xr_auR
               && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
               && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
               && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
               && lq_tmp$x##4063 == lq_tmp$x##4066
               && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
               && lq_karg$xl_auR##k_##3942 == xl_auR
               && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
               && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
               && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
               && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
               && lq_karg$VV##3941##k_##3942 == lq_tmp$x##4066
               && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
              && exists [VV##F##39 : int]
                   . (lq_karg$xr_auR##k_##3942 == xr_auR
                      && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                      && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                      && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                      && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                      && lq_karg$xl_auR##k_##3942 == xl_auR
                      && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                      && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                      && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                      && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                      && lq_karg$VV##3941##k_##3942 == VV##F##39
                      && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd''))
      && (exists [lq_tmp$x##4067 : int;
                  lq_karg$SGDSimple.sgd##k_##3949 : (function int int);
                  lq_karg$sgd'r_rge##k_##3949 : (function int int);
                  lq_karg$SGDSimple.bind##k_##3949 : (function int (function (function int int) int));
                  lq_karg$sgd'l_rge##k_##3949 : (function int int);
                  lq_karg$xr_auR##k_##3949 : int;
                  lq_karg$SGDSimple.update'##k_##3949 : (function int (function int int));
                  lq_karg$VV##3948##k_##3949 : int;
                  lq_karg$xl_auR##k_##3949 : int;
                  lq_karg$SGDSimple.sgd''##k_##3949 : (function int int);
                  lq_karg$SGDSimple.sgd'##k_##3949 : (function int int);
                  lq_karg$lq_tmp$x##3925##k_##3949 : LIQUID$dummy##xo;
                  lq_karg$SGDSimple.update##k_##3949 : (function int int)]
            . (lq_tmp$x##4067 == lq_tmp$x##4070
               && lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
               && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
               && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
               && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
               && lq_karg$xr_auR##k_##3949 == xr_auR
               && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
               && lq_karg$VV##3948##k_##3949 == lq_tmp$x##4070
               && lq_karg$xl_auR##k_##3949 == xl_auR
               && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
               && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
               && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
               && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
              && exists [VV##F##27 : int]
                   . (lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                      && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                      && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                      && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                      && lq_karg$xr_auR##k_##3949 == xr_auR
                      && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                      && lq_karg$VV##3948##k_##3949 == VV##F##27
                      && lq_karg$xl_auR##k_##3949 == xl_auR
                      && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                      && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                      && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                      && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
          || exists [lq_tmp$x##4067 : int;
                     lq_karg$SGDSimple.sgd##k_##3949 : (function int int);
                     lq_karg$sgd'r_rge##k_##3949 : (function int int);
                     lq_karg$SGDSimple.bind##k_##3949 : (function int (function (function int int) int));
                     lq_karg$sgd'l_rge##k_##3949 : (function int int);
                     lq_karg$xr_auR##k_##3949 : int;
                     lq_karg$SGDSimple.update'##k_##3949 : (function int (function int int));
                     lq_karg$VV##3948##k_##3949 : int;
                     lq_karg$xl_auR##k_##3949 : int;
                     lq_karg$SGDSimple.sgd''##k_##3949 : (function int int);
                     lq_karg$SGDSimple.sgd'##k_##3949 : (function int int);
                     lq_karg$lq_tmp$x##3925##k_##3949 : LIQUID$dummy##xo;
                     lq_karg$SGDSimple.update##k_##3949 : (function int int)]
               . (lq_tmp$x##4067 == lq_tmp$x##4070
                  && lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                  && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                  && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                  && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                  && lq_karg$xr_auR##k_##3949 == xr_auR
                  && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                  && lq_karg$VV##3948##k_##3949 == lq_tmp$x##4070
                  && lq_karg$xl_auR##k_##3949 == xl_auR
                  && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                  && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                  && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                  && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
                 && exists [VV##F##38 : int]
                      . (lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                         && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                         && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                         && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                         && lq_karg$xr_auR##k_##3949 == xr_auR
                         && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                         && lq_karg$VV##3948##k_##3949 == VV##F##38
                         && lq_karg$xl_auR##k_##3949 == xl_auR
                         && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                         && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                         && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                         && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)))
     && GHC.Types.True
     && (VV##F##40 <=> (true => (lq_tmp$x##4066 < lq_tmp$x##4070 => lq_tmp$x##4073 <= lq_tmp$x##4074)))
     && (lq_tmp$x##4073 == apply SGDSimple.update lq_tmp$x##4066
         && lq_tmp$x##4073 == apply lq_anf$##7205759403792795927l_dBx lq_tmp$x##4066)
     && (lq_tmp$x##4074 == apply SGDSimple.update lq_tmp$x##4070
         && lq_tmp$x##4074 == apply lq_anf$##7205759403792795927r_dBx lq_tmp$x##4070)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##40
SMT READ
SMT Says: Unsat
UNSAT id 56 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (VV##F##56 <=> true)
     && not GHC.Types.False
RHS: VV##F##56
SMT READ
SMT Says: Sat
UNSAT id 72 True
LHS: GHC.Types.True
     && xl_auO < xr_auO
     && (VV##F##72 <=> (lq_tmp$x##3671 <= lq_tmp$x##3672 => lq_tmp$x##3671 < lq_tmp$x##3672))
     && not GHC.Types.False
     && lq_tmp$x##3671 == apply fl_auP xl_auO
     && lq_tmp$x##3672 == apply fr_auP xr_auO
RHS: VV##F##72
SMT READ
SMT Says: Unsat
UNSAT id 88 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && (VV##F##88 <=> true)
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##88
SMT READ
SMT Says: Unsat
UNSAT id 104 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && (VV##F##104 <=> true)
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##104
SMT READ
SMT Says: Unsat
UNSAT id 120 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && lq_tmp$x##2051 == xl_atA + lq_anf$##7205759403792795922l_dBs
     && lq_tmp$x##2052 == xr_atA + lq_anf$##7205759403792795922r_dBs
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && (VV##F##120 <=> (true => lq_tmp$x##2051 < lq_tmp$x##2052))
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##120
SMT READ
SMT Says: Unsat
UNSAT id 136 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##136 <=> true)
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##136
SMT READ
SMT Says: Unsat
UNSAT id 152 False
LHS: GHC.Types.True
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##152 <=> true)
RHS: VV##F##152
SMT READ
SMT Says: Unsat
UNSAT id 9 False
LHS: GHC.Types.True
     && (VV##F##9 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##9
SMT READ
SMT Says: Unsat
UNSAT id 25 False
LHS: GHC.Types.True
     && (VV##F##25 <=> true)
     && not GHC.Types.False
RHS: VV##F##25
SMT READ
SMT Says: Unsat
UNSAT id 41 False
LHS: GHC.Types.True
     && (VV##F##41 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##41
SMT READ
SMT Says: Unsat
UNSAT id 57 False
LHS: GHC.Types.True
     && (VV##F##57 <=> true)
     && xl_auQ < xr_auQ
     && not GHC.Types.False
RHS: VV##F##57
SMT READ
SMT Says: Unsat
UNSAT id 73 False
LHS: GHC.Types.True
     && (VV##F##73 <=> (true => lq_tmp$x##3667 < lq_tmp$x##3668))
     && xl_auO < xr_auO
     && lq_tmp$x##3667 == xl_auO
     && not GHC.Types.False
     && lq_tmp$x##3668 == xr_auO
RHS: VV##F##73
SMT READ
SMT Says: Unsat
UNSAT id 89 False
LHS: GHC.Types.True
     && (VV##F##89 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##89
SMT READ
SMT Says: Unsat
UNSAT id 105 False
LHS: GHC.Types.True
     && (VV##F##105 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##105
SMT READ
SMT Says: Unsat
UNSAT id 121 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##121 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##121
SMT READ
SMT Says: Unsat
UNSAT id 137 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##137 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##137
SMT READ
SMT Says: Unsat
UNSAT id 153 False
LHS: GHC.Types.True
     && (VV##F##153 <=> true)
     && not GHC.Types.False
RHS: VV##F##153
SMT READ
SMT Says: Unsat
UNSAT id 10 False
LHS: GHC.Types.True
     && xl_auT < xr_auT
     && (VV##F##10 <=> true)
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##10
SMT READ
SMT Says: Unsat
UNSAT id 26 False
LHS: GHC.Types.True
     && lq_tmp$x##4195 == apply (apply SGDSimple.bind xl_auR) lq_anf$##7205759403792795927l_dBx
     && lq_tmp$x##4196 == apply (apply SGDSimple.bind xr_auR) lq_anf$##7205759403792795927r_dBx
     && (VV##F##26 <=> (lq_tmp$x##4195 < lq_tmp$x##4196 => lq_tmp$x##4195 < lq_tmp$x##4196))
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##26
SMT READ
SMT Says: Unsat
UNSAT id 42 False
LHS: GHC.Types.True
     && xl_auR < xr_auR
     && (VV##F##42 <=> true)
     && not GHC.Types.False
RHS: VV##F##42
SMT READ
SMT Says: Unsat
UNSAT id 58 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && not GHC.Types.False
     && (VV##F##58 <=> (true => lq_tmp$x##3843 < lq_tmp$x##3844))
     && lq_tmp$x##3843 == xl_auQ
     && lq_tmp$x##3844 == xr_auQ
RHS: VV##F##58
SMT READ
SMT Says: Unsat
UNSAT id 74 False
LHS: GHC.Types.True
     && xl_auO < xr_auO
     && not GHC.Types.False
     && (VV##F##74 <=> true)
RHS: VV##F##74
SMT READ
SMT Says: Unsat
UNSAT id 90 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (VV##F##90 <=> true)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##90
SMT READ
SMT Says: Unsat
UNSAT id 106 False
LHS: GHC.Types.True
     && (VV##F##106 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##106
SMT READ
SMT Says: Unsat
UNSAT id 122 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##122 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##122
SMT READ
SMT Says: Unsat
UNSAT id 138 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##138 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##138
SMT READ
SMT Says: Unsat
UNSAT id 154 False
LHS: GHC.Types.True
     && (VV##F##154 <=> true)
     && not GHC.Types.False
RHS: VV##F##154
SMT READ
SMT Says: Unsat
UNSAT id 11 False
LHS: GHC.Types.True
     && (VV##F##11 <=> (true => lq_tmp$x##4377 < lq_tmp$x##4378))
     && lq_tmp$x##4377 == xl_auT
     && lq_tmp$x##4378 == xr_auT
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##11
SMT READ
SMT Says: Unsat
UNSAT id 43 False
LHS: GHC.Types.True
     && lq_tmp$x##4051 == xl_auR
     && (VV##F##43 <=> (true => lq_tmp$x##4051 < lq_tmp$x##4052))
     && lq_tmp$x##4052 == xr_auR
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##43
SMT READ
SMT Says: Unsat
UNSAT id 59 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (VV##F##59 <=> true)
     && not GHC.Types.False
RHS: VV##F##59
SMT READ
SMT Says: Unsat
UNSAT id 75 False
LHS: GHC.Types.True
     && (VV##F##75 <=> true)
     && xl_auO < xr_auO
     && not GHC.Types.False
RHS: VV##F##75
SMT READ
SMT Says: Unsat
UNSAT id 91 False
LHS: GHC.Types.True
     && (VV##F##91 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##91
SMT READ
SMT Says: Unsat
UNSAT id 107 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && (VV##F##107 <=> true)
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##107
SMT READ
SMT Says: Unsat
UNSAT id 123 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && (VV##F##123 <=> true)
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##123
SMT READ
SMT Says: Unsat
UNSAT id 139 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && (VV##F##139 <=> true)
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##139
SMT READ
SMT Says: Unsat
UNSAT id 12 False
LHS: GHC.Types.True
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (VV##F##12 <=> true)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##12
SMT READ
SMT Says: Unsat
UNSAT id 44 False
LHS: GHC.Types.True
     && (VV##F##44 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##44
SMT READ
SMT Says: Unsat
UNSAT id 60 False
LHS: GHC.Types.True
     && (VV##F##60 <=> true)
     && xl_auQ < xr_auQ
     && not GHC.Types.False
RHS: VV##F##60
SMT READ
SMT Says: Unsat
UNSAT id 76 False
LHS: GHC.Types.True
     && (VV##F##76 <=> (true => lq_tmp$x##3643 < lq_tmp$x##3644))
     && xl_auO < xr_auO
     && lq_tmp$x##3643 == xl_auO
     && lq_tmp$x##3644 == xr_auO
     && not GHC.Types.False
RHS: VV##F##76
SMT READ
SMT Says: Unsat
UNSAT id 92 False
LHS: GHC.Types.True
     && (VV##F##92 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##92
SMT READ
SMT Says: Unsat
UNSAT id 108 False
LHS: GHC.Types.True
     && (VV##F##108 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##108
SMT READ
SMT Says: Unsat
UNSAT id 124 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##124 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##124
SMT READ
SMT Says: Unsat
UNSAT id 140 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##140 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##140
SMT READ
SMT Says: Unsat
UNSAT id 13 False
LHS: GHC.Types.True
     && (VV##F##13 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##13
SMT READ
SMT Says: Sat
UNSAT id 29 True
LHS: ((exists [lq_tmp$x##4185 : int;
               lq_karg$SGDSimple.sgd##k_##3949 : (function int int);
               lq_karg$sgd'r_rge##k_##3949 : (function int int);
               lq_karg$SGDSimple.bind##k_##3949 : (function int (function (function int int) int));
               lq_karg$sgd'l_rge##k_##3949 : (function int int);
               lq_karg$xr_auR##k_##3949 : int;
               lq_karg$SGDSimple.update'##k_##3949 : (function int (function int int));
               lq_karg$VV##3948##k_##3949 : int;
               lq_karg$xl_auR##k_##3949 : int;
               lq_karg$SGDSimple.sgd''##k_##3949 : (function int int);
               lq_karg$SGDSimple.sgd'##k_##3949 : (function int int);
               lq_karg$lq_tmp$x##3925##k_##3949 : LIQUID$dummy##xo;
               lq_karg$SGDSimple.update##k_##3949 : (function int int)]
         . (lq_tmp$x##4185 == lq_tmp$x##4188
            && lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
            && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
            && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
            && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
            && lq_karg$xr_auR##k_##3949 == xr_auR
            && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
            && lq_karg$VV##3948##k_##3949 == lq_tmp$x##4188
            && lq_karg$xl_auR##k_##3949 == xl_auR
            && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
            && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
            && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
            && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
           && exists [VV##F##27 : int]
                . (lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                   && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                   && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                   && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                   && lq_karg$xr_auR##k_##3949 == xr_auR
                   && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                   && lq_karg$VV##3948##k_##3949 == VV##F##27
                   && lq_karg$xl_auR##k_##3949 == xl_auR
                   && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                   && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                   && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                   && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
       || exists [lq_tmp$x##4185 : int;
                  lq_karg$SGDSimple.sgd##k_##3949 : (function int int);
                  lq_karg$sgd'r_rge##k_##3949 : (function int int);
                  lq_karg$SGDSimple.bind##k_##3949 : (function int (function (function int int) int));
                  lq_karg$sgd'l_rge##k_##3949 : (function int int);
                  lq_karg$xr_auR##k_##3949 : int;
                  lq_karg$SGDSimple.update'##k_##3949 : (function int (function int int));
                  lq_karg$VV##3948##k_##3949 : int;
                  lq_karg$xl_auR##k_##3949 : int;
                  lq_karg$SGDSimple.sgd''##k_##3949 : (function int int);
                  lq_karg$SGDSimple.sgd'##k_##3949 : (function int int);
                  lq_karg$lq_tmp$x##3925##k_##3949 : LIQUID$dummy##xo;
                  lq_karg$SGDSimple.update##k_##3949 : (function int int)]
            . (lq_tmp$x##4185 == lq_tmp$x##4188
               && lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
               && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
               && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
               && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
               && lq_karg$xr_auR##k_##3949 == xr_auR
               && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
               && lq_karg$VV##3948##k_##3949 == lq_tmp$x##4188
               && lq_karg$xl_auR##k_##3949 == xl_auR
               && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
               && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
               && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
               && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
              && exists [VV##F##38 : int]
                   . (lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                      && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                      && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                      && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                      && lq_karg$xr_auR##k_##3949 == xr_auR
                      && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                      && lq_karg$VV##3948##k_##3949 == VV##F##38
                      && lq_karg$xl_auR##k_##3949 == xl_auR
                      && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                      && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                      && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                      && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update))
      && (exists [lq_karg$xr_auR##k_##3942 : int;
                  lq_karg$SGDSimple.bind##k_##3942 : (function int (function (function int int) int));
                  lq_karg$sgd'r_rge##k_##3942 : (function int int);
                  lq_karg$SGDSimple.sgd'##k_##3942 : (function int int);
                  lq_karg$SGDSimple.sgd##k_##3942 : (function int int);
                  lq_karg$xl_auR##k_##3942 : int;
                  lq_karg$SGDSimple.update'##k_##3942 : (function int (function int int));
                  lq_karg$sgd'l_rge##k_##3942 : (function int int);
                  lq_karg$SGDSimple.update##k_##3942 : (function int int);
                  lq_karg$lq_tmp$x##3925##k_##3942 : LIQUID$dummy##xo;
                  lq_tmp$x##4181 : int;
                  lq_karg$VV##3941##k_##3942 : int;
                  lq_karg$SGDSimple.sgd''##k_##3942 : (function int int)]
            . (lq_karg$xr_auR##k_##3942 == xr_auR
               && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
               && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
               && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
               && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
               && lq_karg$xl_auR##k_##3942 == xl_auR
               && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
               && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
               && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
               && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
               && lq_tmp$x##4181 == lq_tmp$x##4184
               && lq_karg$VV##3941##k_##3942 == lq_tmp$x##4184
               && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
              && exists [VV##F##28 : int]
                   . (lq_karg$xr_auR##k_##3942 == xr_auR
                      && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                      && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                      && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                      && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                      && lq_karg$xl_auR##k_##3942 == xl_auR
                      && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                      && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                      && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                      && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                      && lq_karg$VV##3941##k_##3942 == VV##F##28
                      && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
          || exists [lq_karg$xr_auR##k_##3942 : int;
                     lq_karg$SGDSimple.bind##k_##3942 : (function int (function (function int int) int));
                     lq_karg$sgd'r_rge##k_##3942 : (function int int);
                     lq_karg$SGDSimple.sgd'##k_##3942 : (function int int);
                     lq_karg$SGDSimple.sgd##k_##3942 : (function int int);
                     lq_karg$xl_auR##k_##3942 : int;
                     lq_karg$SGDSimple.update'##k_##3942 : (function int (function int int));
                     lq_karg$sgd'l_rge##k_##3942 : (function int int);
                     lq_karg$SGDSimple.update##k_##3942 : (function int int);
                     lq_karg$lq_tmp$x##3925##k_##3942 : LIQUID$dummy##xo;
                     lq_tmp$x##4181 : int;
                     lq_karg$VV##3941##k_##3942 : int;
                     lq_karg$SGDSimple.sgd''##k_##3942 : (function int int)]
               . (lq_karg$xr_auR##k_##3942 == xr_auR
                  && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                  && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                  && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                  && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                  && lq_karg$xl_auR##k_##3942 == xl_auR
                  && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                  && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                  && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                  && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                  && lq_tmp$x##4181 == lq_tmp$x##4184
                  && lq_karg$VV##3941##k_##3942 == lq_tmp$x##4184
                  && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
                 && exists [VV##F##39 : int]
                      . (lq_karg$xr_auR##k_##3942 == xr_auR
                         && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                         && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                         && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                         && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                         && lq_karg$xl_auR##k_##3942 == xl_auR
                         && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                         && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                         && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                         && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                         && lq_karg$VV##3941##k_##3942 == VV##F##39
                         && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')))
     && GHC.Types.True
     && (lq_tmp$x##4191 == apply SGDSimple.update lq_tmp$x##4184
         && lq_tmp$x##4191 == apply lq_anf$##7205759403792795927l_dBx lq_tmp$x##4184)
     && (lq_tmp$x##4192 == apply SGDSimple.update lq_tmp$x##4188
         && lq_tmp$x##4192 == apply lq_anf$##7205759403792795927r_dBx lq_tmp$x##4188)
     && (VV##F##29 <=> (true => (lq_tmp$x##4184 < lq_tmp$x##4188 => lq_tmp$x##4191 <= lq_tmp$x##4192)))
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##29
SMT READ
SMT Says: Unsat
UNSAT id 45 False
LHS: GHC.Types.True
     && (VV##F##45 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##45
SMT READ
SMT Says: Unsat
UNSAT id 61 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (VV##F##61 <=> ((lq_tmp$x##3788 < lq_tmp$x##3792 => lq_tmp$x##3795 < lq_tmp$x##3796) => (lq_tmp$x##3788 < lq_tmp$x##3792 => lq_tmp$x##3795 <= lq_tmp$x##3796)))
     && lq_tmp$x##3795 == apply SGDSimple.update lq_tmp$x##3788
     && lq_tmp$x##3796 == apply SGDSimple.update lq_tmp$x##3792
     && not GHC.Types.False
RHS: VV##F##61
SMT READ
SMT Says: Unsat
UNSAT id 77 False
LHS: GHC.Types.True
     && xl_auO < xr_auO
     && (VV##F##77 <=> true)
     && not GHC.Types.False
RHS: VV##F##77
SMT READ
SMT Says: Unsat
UNSAT id 93 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && (VV##F##93 <=> true)
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##93
SMT READ
SMT Says: Unsat
UNSAT id 109 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (VV##F##109 <=> true)
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##109
SMT READ
SMT Says: Unsat
UNSAT id 125 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##125 <=> true)
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##125
SMT READ
SMT Says: Unsat
UNSAT id 141 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
     && (VV##F##141 <=> true)
RHS: VV##F##141
SMT READ
SMT Says: Unsat
UNSAT id 14 False
LHS: GHC.Types.True
     && (VV##F##14 <=> (true => true))
     && (lq_tmp$x##4325 == lq_anf$##7205759403792795925l_dBv
         && lq_tmp$x##4325 == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv
         && lq_tmp$x##4325 == lq_anf$##7205759403792795926l_dBw)
     && (lq_tmp$x##4326 == lq_anf$##7205759403792795925r_dBv
         && lq_tmp$x##4326 == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv
         && lq_tmp$x##4326 == lq_anf$##7205759403792795926r_dBw)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##14
SMT READ
SMT Says: Unsat
UNSAT id 30 False
LHS: GHC.Types.True
     && (VV##F##30 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##30
SMT READ
SMT Says: Unsat
UNSAT id 46 False
LHS: GHC.Types.True
     && (VV##F##46 <=> (true => lq_tmp$x##4003 < lq_tmp$x##4004))
     && lq_tmp$x##4003 == xl_auR
     && lq_tmp$x##4004 == xr_auR
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##46
SMT READ
SMT Says: Unsat
UNSAT id 62 False
LHS: GHC.Types.True
     && (VV##F##62 <=> true)
     && xl_auQ < xr_auQ
     && not GHC.Types.False
RHS: VV##F##62
SMT READ
SMT Says: Unsat
UNSAT id 78 False
LHS: GHC.Types.True
     && (VV##F##78 <=> true)
     && xl_auO < xr_auO
     && not GHC.Types.False
RHS: VV##F##78
SMT READ
SMT Says: Unsat
UNSAT id 94 False
LHS: GHC.Types.True
     && (VV##F##94 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##94
SMT READ
SMT Says: Unsat
UNSAT id 110 False
LHS: GHC.Types.True
     && (VV##F##110 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##110
SMT READ
SMT Says: Unsat
UNSAT id 126 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##126 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##126
SMT READ
SMT Says: Unsat
UNSAT id 142 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##142 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##142
SMT READ
SMT Says: Unsat
UNSAT id 15 False
LHS: GHC.Types.True
     && (VV##F##15 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##15
SMT READ
SMT Says: Unsat
UNSAT id 31 False
LHS: GHC.Types.True
     && (VV##F##31 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##31
SMT READ
SMT Says: Unsat
UNSAT id 47 False
LHS: GHC.Types.True
     && (VV##F##47 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##47
SMT READ
SMT Says: Unsat
UNSAT id 63 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (VV##F##63 <=> true)
     && not GHC.Types.False
RHS: VV##F##63
SMT READ
SMT Says: Unsat
UNSAT id 79 False
LHS: GHC.Types.True
     && not GHC.Types.False
     && (VV##F##79 <=> true)
RHS: VV##F##79
SMT READ
SMT Says: Unsat
UNSAT id 95 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (VV##F##95 <=> true)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##95
SMT READ
SMT Says: Unsat
UNSAT id 111 False
LHS: GHC.Types.True
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
     && (VV##F##111 <=> true)
RHS: VV##F##111
SMT READ
SMT Says: Unsat
UNSAT id 127 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##127 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##127
SMT READ
SMT Says: Unsat
UNSAT id 143 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##143 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##143
RESULT: Unsafe (Stats {numCstr = 151, numIter = 151, numBrkt = 150, numChck = 150, numVald = 147}) [Just 40,Just 72,Just 29]

iter=152 id=155 change=False rank=1

Computing Result
SMT READ
SMT Says: Unsat
UNSAT id 16 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##16 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##16
SMT READ
SMT Says: Unsat
UNSAT id 32 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##32 <=> (true => lq_tmp$x##4169 < lq_tmp$x##4170))
     && xl_auR < xr_auR
     && not GHC.Types.False
     && lq_tmp$x##4169 == xl_auR
     && lq_tmp$x##4170 == xr_auR
RHS: VV##F##32
SMT READ
SMT Says: Unsat
UNSAT id 48 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##48 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##48
SMT READ
SMT Says: Unsat
UNSAT id 64 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && lq_tmp$x##3773 == xl_auQ
     && lq_tmp$x##3774 == xr_auQ
     && (VV##F##64 <=> (true => lq_tmp$x##3773 < lq_tmp$x##3774))
     && not GHC.Types.False
RHS: VV##F##64
SMT READ
SMT Says: Unsat
UNSAT id 80 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##80 <=> true)
     && not GHC.Types.False
RHS: VV##F##80
SMT READ
SMT Says: Unsat
UNSAT id 96 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && (VV##F##96 <=> true)
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##96
SMT READ
SMT Says: Unsat
UNSAT id 112 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (VV##F##112 <=> true)
RHS: VV##F##112
SMT READ
SMT Says: Unsat
UNSAT id 128 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##128 <=> true)
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##128
SMT READ
SMT Says: Unsat
UNSAT id 144 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##144 <=> true)
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##144
SMT READ
SMT Says: Unsat
UNSAT id 1 False
LHS: GHC.Types.True
     && (VV##F##1 <=> (lq_tmp$x##4533 < lq_tmp$x##4534 => lq_tmp$x##4533 < lq_tmp$x##4534))
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (lq_tmp$x##4533 == apply (apply SGDSimple.bind xl_auT) ul_auV
         && lq_tmp$x##4533 == apply b1l_auU ul_auV)
     && (lq_tmp$x##4534 == apply (apply SGDSimple.bind xr_auT) ur_auV
         && lq_tmp$x##4534 == apply b1r_auU ur_auV)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##1
SMT READ
SMT Says: Unsat
UNSAT id 17 False
LHS: GHC.Types.True
     && (lq_tmp$x##4289 == lq_anf$##7205759403792795925l_dBv
         && lq_tmp$x##4289 == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv
         && lq_tmp$x##4289 == lq_anf$##7205759403792795926l_dBw)
     && (VV##F##17 <=> (true => true))
     && (lq_tmp$x##4290 == lq_anf$##7205759403792795925r_dBv
         && lq_tmp$x##4290 == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv
         && lq_tmp$x##4290 == lq_anf$##7205759403792795926r_dBw)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##17
SMT READ
SMT Says: Unsat
UNSAT id 33 False
LHS: GHC.Types.True
     && (VV##F##33 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##33
SMT READ
SMT Says: Unsat
UNSAT id 49 False
LHS: GHC.Types.True
     && (VV##F##49 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##49
SMT READ
SMT Says: Unsat
UNSAT id 65 False
LHS: GHC.Types.True
     && (VV##F##65 <=> true)
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##65
SMT READ
SMT Says: Unsat
UNSAT id 81 False
LHS: GHC.Types.True
     && (VV##F##81 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##81
SMT READ
SMT Says: Unsat
UNSAT id 97 False
LHS: GHC.Types.True
     && (VV##F##97 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##97
SMT READ
SMT Says: Unsat
UNSAT id 113 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##113 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
RHS: VV##F##113
SMT READ
SMT Says: Unsat
UNSAT id 129 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##129 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##129
SMT READ
SMT Says: Unsat
UNSAT id 145 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##145 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##145
SMT READ
SMT Says: Unsat
UNSAT id 2 False
LHS: GHC.Types.True
     && (lq_tmp$x##4529 == apply (apply SGDSimple.update' lq_anf$##7205759403792795926l_dBw) lq_tmp$x##4522
         && lq_tmp$x##4529 == apply ul_auV lq_tmp$x##4522)
     && (lq_tmp$x##4530 == apply (apply SGDSimple.update' lq_anf$##7205759403792795926r_dBw) lq_tmp$x##4526
         && lq_tmp$x##4530 == apply ur_auV lq_tmp$x##4526)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && (VV##F##2 <=> ((lq_tmp$x##4522 < lq_tmp$x##4526 => lq_tmp$x##4529 < lq_tmp$x##4530) => (lq_tmp$x##4522 < lq_tmp$x##4526 => lq_tmp$x##4529 <= lq_tmp$x##4530)))
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##2
SMT READ
SMT Says: Unsat
UNSAT id 18 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && (VV##F##18 <=> true)
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##18
SMT READ
SMT Says: Unsat
UNSAT id 34 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && (VV##F##34 <=> true)
     && not GHC.Types.False
RHS: VV##F##34
SMT READ
SMT Says: Unsat
UNSAT id 50 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
     && (VV##F##50 <=> true)
RHS: VV##F##50
SMT READ
SMT Says: Unsat
UNSAT id 66 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
     && (VV##F##66 <=> true)
RHS: VV##F##66
SMT READ
SMT Says: Unsat
UNSAT id 82 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
     && (VV##F##82 <=> true)
RHS: VV##F##82
SMT READ
SMT Says: Unsat
UNSAT id 98 False
LHS: GHC.Types.True
     && (VV##F##98 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##98
SMT READ
SMT Says: Unsat
UNSAT id 114 False
LHS: GHC.Types.True
     && (VV##F##114 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
RHS: VV##F##114
SMT READ
SMT Says: Unsat
UNSAT id 130 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##130 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##130
SMT READ
SMT Says: Unsat
UNSAT id 146 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##146 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##146
SMT READ
SMT Says: Unsat
UNSAT id 3 False
LHS: GHC.Types.True
     && (VV##F##3 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##3
SMT READ
SMT Says: Unsat
UNSAT id 19 False
LHS: GHC.Types.True
     && (VV##F##19 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##19
SMT READ
SMT Says: Unsat
UNSAT id 35 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##35 <=> (true => lq_tmp$x##4121 < lq_tmp$x##4122))
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && lq_tmp$x##4121 == xl_auR
     && lq_tmp$x##4122 == xr_auR
     && not GHC.Types.False
RHS: VV##F##35
SMT READ
SMT Says: Unsat
UNSAT id 51 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && lq_tmp$x##3917 == apply (apply SGDSimple.bind xl_auQ) SGDSimple.update
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && lq_tmp$x##3918 == apply (apply SGDSimple.bind xr_auQ) SGDSimple.update
     && (VV##F##51 <=> (lq_tmp$x##3917 < lq_tmp$x##3918 => lq_tmp$x##3917 < lq_tmp$x##3918))
     && not GHC.Types.False
RHS: VV##F##51
SMT READ
SMT Says: Unsat
UNSAT id 67 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && lq_tmp$x##3725 == xl_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && lq_tmp$x##3726 == xr_auQ
     && (VV##F##67 <=> (true => lq_tmp$x##3725 < lq_tmp$x##3726))
     && not GHC.Types.False
RHS: VV##F##67
SMT READ
SMT Says: Unsat
UNSAT id 83 False
LHS: GHC.Types.True
     && lq_tmp$x##3611 == xl_auN + lq_anf$##7205759403792795924l_dBu
     && lq_tmp$x##3612 == xr_auN + lq_anf$##7205759403792795924r_dBu
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##83 <=> (true => lq_tmp$x##3611 < lq_tmp$x##3612))
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##83
SMT READ
SMT Says: Unsat
UNSAT id 99 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##99 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##99
SMT READ
SMT Says: Unsat
UNSAT id 115 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && (VV##F##115 <=> true)
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
RHS: VV##F##115
SMT READ
SMT Says: Unsat
UNSAT id 131 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && (VV##F##131 <=> true)
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##131
SMT READ
SMT Says: Unsat
UNSAT id 147 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && (VV##F##147 <=> true)
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##147
SMT READ
SMT Says: Unsat
UNSAT id 4 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (VV##F##4 <=> true)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##4
SMT READ
SMT Says: Unsat
UNSAT id 20 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (VV##F##20 <=> true)
RHS: VV##F##20
SMT READ
SMT Says: Unsat
UNSAT id 36 False
LHS: GHC.Types.True
     && (VV##F##36 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##36
SMT READ
SMT Says: Unsat
UNSAT id 52 False
LHS: GHC.Types.True
     && (VV##F##52 <=> ((lq_tmp$x##3906 < lq_tmp$x##3910 => lq_tmp$x##3913 < lq_tmp$x##3914) => (lq_tmp$x##3906 < lq_tmp$x##3910 => lq_tmp$x##3913 <= lq_tmp$x##3914)))
     && lq_tmp$x##3913 == apply SGDSimple.update lq_tmp$x##3906
     && xl_auQ < xr_auQ
     && lq_tmp$x##3914 == apply SGDSimple.update lq_tmp$x##3910
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##52
SMT READ
SMT Says: Unsat
UNSAT id 68 False
LHS: GHC.Types.True
     && (VV##F##68 <=> true)
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##68
SMT READ
SMT Says: Unsat
UNSAT id 84 False
LHS: GHC.Types.True
     && (VV##F##84 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##84
SMT READ
SMT Says: Unsat
UNSAT id 100 False
LHS: GHC.Types.True
     && (VV##F##100 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##100
SMT READ
SMT Says: Unsat
UNSAT id 116 False
LHS: GHC.Types.True
     && (VV##F##116 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##116
SMT READ
SMT Says: Unsat
UNSAT id 132 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##132 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##132
SMT READ
SMT Says: Unsat
UNSAT id 148 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##148 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##148
SMT READ
SMT Says: Unsat
UNSAT id 5 False
LHS: GHC.Types.True
     && (lq_tmp$x##4479 == apply (apply SGDSimple.update' lq_anf$##7205759403792795926l_dBw) lq_tmp$x##4472
         && lq_tmp$x##4479 == apply ul_auV lq_tmp$x##4472)
     && (lq_tmp$x##4480 == apply (apply SGDSimple.update' lq_anf$##7205759403792795926r_dBw) lq_tmp$x##4476
         && lq_tmp$x##4480 == apply ur_auV lq_tmp$x##4476)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##5 <=> ((lq_tmp$x##4472 < lq_tmp$x##4476 => lq_tmp$x##4479 < lq_tmp$x##4480) => (lq_tmp$x##4472 < lq_tmp$x##4476 => lq_tmp$x##4479 <= lq_tmp$x##4480)))
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##5
SMT READ
SMT Says: Unsat
UNSAT id 21 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##21 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
RHS: VV##F##21
SMT READ
SMT Says: Unsat
UNSAT id 37 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##37 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##37
SMT READ
SMT Says: Unsat
UNSAT id 53 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##53 <=> true)
     && not GHC.Types.False
RHS: VV##F##53
SMT READ
SMT Says: Unsat
UNSAT id 69 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##69 <=> true)
     && not GHC.Types.False
RHS: VV##F##69
SMT READ
SMT Says: Unsat
UNSAT id 85 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (VV##F##85 <=> true)
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##85
SMT READ
SMT Says: Unsat
UNSAT id 101 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (VV##F##101 <=> true)
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##101
SMT READ
SMT Says: Unsat
UNSAT id 117 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
     && (VV##F##117 <=> true)
RHS: VV##F##117
SMT READ
SMT Says: Unsat
UNSAT id 133 False
LHS: GHC.Types.True
     && (VV##F##133 <=> true)
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##133
SMT READ
SMT Says: Unsat
UNSAT id 149 False
LHS: GHC.Types.True
     && (VV##F##149 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
RHS: VV##F##149
SMT READ
SMT Says: Unsat
UNSAT id 6 False
LHS: GHC.Types.True
     && (VV##F##6 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##6
SMT READ
SMT Says: Unsat
UNSAT id 22 False
LHS: GHC.Types.True
     && (VV##F##22 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
RHS: VV##F##22
SMT READ
SMT Says: Unsat
UNSAT id 54 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (VV##F##54 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##54
SMT READ
SMT Says: Unsat
UNSAT id 70 False
LHS: GHC.Types.True
     && (VV##F##70 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##70
SMT READ
SMT Says: Unsat
UNSAT id 86 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##86 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##86
SMT READ
SMT Says: Unsat
UNSAT id 102 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##102 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##102
SMT READ
SMT Says: Unsat
UNSAT id 118 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##118 <=> true)
     && not GHC.Types.False
RHS: VV##F##118
SMT READ
SMT Says: Unsat
UNSAT id 134 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##134 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##134
SMT READ
SMT Says: Unsat
UNSAT id 150 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##150 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
RHS: VV##F##150
SMT READ
SMT Says: Unsat
UNSAT id 7 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && (VV##F##7 <=> true)
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##7
SMT READ
SMT Says: Unsat
UNSAT id 23 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (VV##F##23 <=> true)
RHS: VV##F##23
SMT READ
SMT Says: Unsat
UNSAT id 55 False
LHS: GHC.Types.True
     && lq_tmp$x##3892 == xr_auQ
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
     && (VV##F##55 <=> (true => lq_tmp$x##3891 < lq_tmp$x##3892))
     && lq_tmp$x##3891 == xl_auQ
RHS: VV##F##55
SMT READ
SMT Says: Unsat
UNSAT id 71 False
LHS: GHC.Types.True
     && (VV##F##71 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##71
SMT READ
SMT Says: Unsat
UNSAT id 87 False
LHS: GHC.Types.True
     && (VV##F##87 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##87
SMT READ
SMT Says: Unsat
UNSAT id 103 False
LHS: GHC.Types.True
     && (VV##F##103 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##103
SMT READ
SMT Says: Unsat
UNSAT id 119 False
LHS: GHC.Types.True
     && (VV##F##119 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##119
SMT READ
SMT Says: Unsat
UNSAT id 135 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##135 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##135
SMT READ
SMT Says: Unsat
UNSAT id 151 False
LHS: GHC.Types.True
     && (VV##F##151 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
RHS: VV##F##151
SMT READ
SMT Says: Unsat
UNSAT id 8 False
LHS: GHC.Types.True
     && (VV##F##8 <=> (true => lq_tmp$x##4425 < lq_tmp$x##4426))
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_tmp$x##4425 == xl_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_tmp$x##4426 == xr_auT
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##8
SMT READ
SMT Says: Unsat
UNSAT id 24 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##24 <=> true)
     && not GHC.Types.False
RHS: VV##F##24
SMT READ
SMT Says: Sat
UNSAT id 40 True
LHS: ((exists [lq_karg$xr_auR##k_##3942 : int;
               lq_karg$SGDSimple.bind##k_##3942 : (function int (function (function int int) int));
               lq_karg$sgd'r_rge##k_##3942 : (function int int);
               lq_karg$SGDSimple.sgd'##k_##3942 : (function int int);
               lq_tmp$x##4063 : int;
               lq_karg$SGDSimple.sgd##k_##3942 : (function int int);
               lq_karg$xl_auR##k_##3942 : int;
               lq_karg$SGDSimple.update'##k_##3942 : (function int (function int int));
               lq_karg$sgd'l_rge##k_##3942 : (function int int);
               lq_karg$SGDSimple.update##k_##3942 : (function int int);
               lq_karg$lq_tmp$x##3925##k_##3942 : LIQUID$dummy##xo;
               lq_karg$VV##3941##k_##3942 : int;
               lq_karg$SGDSimple.sgd''##k_##3942 : (function int int)]
         . (lq_karg$xr_auR##k_##3942 == xr_auR
            && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
            && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
            && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
            && lq_tmp$x##4063 == lq_tmp$x##4066
            && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
            && lq_karg$xl_auR##k_##3942 == xl_auR
            && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
            && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
            && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
            && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
            && lq_karg$VV##3941##k_##3942 == lq_tmp$x##4066
            && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
           && exists [VV##F##28 : int]
                . (lq_karg$xr_auR##k_##3942 == xr_auR
                   && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                   && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                   && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                   && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                   && lq_karg$xl_auR##k_##3942 == xl_auR
                   && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                   && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                   && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                   && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                   && lq_karg$VV##3941##k_##3942 == VV##F##28
                   && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
       || exists [lq_karg$xr_auR##k_##3942 : int;
                  lq_karg$SGDSimple.bind##k_##3942 : (function int (function (function int int) int));
                  lq_karg$sgd'r_rge##k_##3942 : (function int int);
                  lq_karg$SGDSimple.sgd'##k_##3942 : (function int int);
                  lq_tmp$x##4063 : int;
                  lq_karg$SGDSimple.sgd##k_##3942 : (function int int);
                  lq_karg$xl_auR##k_##3942 : int;
                  lq_karg$SGDSimple.update'##k_##3942 : (function int (function int int));
                  lq_karg$sgd'l_rge##k_##3942 : (function int int);
                  lq_karg$SGDSimple.update##k_##3942 : (function int int);
                  lq_karg$lq_tmp$x##3925##k_##3942 : LIQUID$dummy##xo;
                  lq_karg$VV##3941##k_##3942 : int;
                  lq_karg$SGDSimple.sgd''##k_##3942 : (function int int)]
            . (lq_karg$xr_auR##k_##3942 == xr_auR
               && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
               && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
               && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
               && lq_tmp$x##4063 == lq_tmp$x##4066
               && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
               && lq_karg$xl_auR##k_##3942 == xl_auR
               && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
               && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
               && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
               && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
               && lq_karg$VV##3941##k_##3942 == lq_tmp$x##4066
               && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
              && exists [VV##F##39 : int]
                   . (lq_karg$xr_auR##k_##3942 == xr_auR
                      && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                      && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                      && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                      && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                      && lq_karg$xl_auR##k_##3942 == xl_auR
                      && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                      && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                      && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                      && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                      && lq_karg$VV##3941##k_##3942 == VV##F##39
                      && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd''))
      && (exists [lq_tmp$x##4067 : int;
                  lq_karg$SGDSimple.sgd##k_##3949 : (function int int);
                  lq_karg$sgd'r_rge##k_##3949 : (function int int);
                  lq_karg$SGDSimple.bind##k_##3949 : (function int (function (function int int) int));
                  lq_karg$sgd'l_rge##k_##3949 : (function int int);
                  lq_karg$xr_auR##k_##3949 : int;
                  lq_karg$SGDSimple.update'##k_##3949 : (function int (function int int));
                  lq_karg$VV##3948##k_##3949 : int;
                  lq_karg$xl_auR##k_##3949 : int;
                  lq_karg$SGDSimple.sgd''##k_##3949 : (function int int);
                  lq_karg$SGDSimple.sgd'##k_##3949 : (function int int);
                  lq_karg$lq_tmp$x##3925##k_##3949 : LIQUID$dummy##xo;
                  lq_karg$SGDSimple.update##k_##3949 : (function int int)]
            . (lq_tmp$x##4067 == lq_tmp$x##4070
               && lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
               && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
               && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
               && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
               && lq_karg$xr_auR##k_##3949 == xr_auR
               && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
               && lq_karg$VV##3948##k_##3949 == lq_tmp$x##4070
               && lq_karg$xl_auR##k_##3949 == xl_auR
               && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
               && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
               && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
               && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
              && exists [VV##F##27 : int]
                   . (lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                      && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                      && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                      && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                      && lq_karg$xr_auR##k_##3949 == xr_auR
                      && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                      && lq_karg$VV##3948##k_##3949 == VV##F##27
                      && lq_karg$xl_auR##k_##3949 == xl_auR
                      && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                      && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                      && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                      && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
          || exists [lq_tmp$x##4067 : int;
                     lq_karg$SGDSimple.sgd##k_##3949 : (function int int);
                     lq_karg$sgd'r_rge##k_##3949 : (function int int);
                     lq_karg$SGDSimple.bind##k_##3949 : (function int (function (function int int) int));
                     lq_karg$sgd'l_rge##k_##3949 : (function int int);
                     lq_karg$xr_auR##k_##3949 : int;
                     lq_karg$SGDSimple.update'##k_##3949 : (function int (function int int));
                     lq_karg$VV##3948##k_##3949 : int;
                     lq_karg$xl_auR##k_##3949 : int;
                     lq_karg$SGDSimple.sgd''##k_##3949 : (function int int);
                     lq_karg$SGDSimple.sgd'##k_##3949 : (function int int);
                     lq_karg$lq_tmp$x##3925##k_##3949 : LIQUID$dummy##xo;
                     lq_karg$SGDSimple.update##k_##3949 : (function int int)]
               . (lq_tmp$x##4067 == lq_tmp$x##4070
                  && lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                  && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                  && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                  && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                  && lq_karg$xr_auR##k_##3949 == xr_auR
                  && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                  && lq_karg$VV##3948##k_##3949 == lq_tmp$x##4070
                  && lq_karg$xl_auR##k_##3949 == xl_auR
                  && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                  && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                  && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                  && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
                 && exists [VV##F##38 : int]
                      . (lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                         && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                         && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                         && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                         && lq_karg$xr_auR##k_##3949 == xr_auR
                         && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                         && lq_karg$VV##3948##k_##3949 == VV##F##38
                         && lq_karg$xl_auR##k_##3949 == xl_auR
                         && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                         && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                         && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                         && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)))
     && GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && ((VV##F##40 <=> (true => (lq_tmp$x##4066 < lq_tmp$x##4070 => lq_tmp$x##4073 <= lq_tmp$x##4074)))
         && apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (lq_tmp$x##4073 == apply SGDSimple.update lq_tmp$x##4066
         && lq_tmp$x##4073 == apply lq_anf$##7205759403792795927l_dBx lq_tmp$x##4066)
     && (lq_tmp$x##4074 == apply SGDSimple.update lq_tmp$x##4070
         && lq_tmp$x##4074 == apply lq_anf$##7205759403792795927r_dBx lq_tmp$x##4070)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##40
SMT READ
SMT Says: Unsat
UNSAT id 56 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##56 <=> true)
     && not GHC.Types.False
RHS: VV##F##56
SMT READ
SMT Says: Sat
UNSAT id 72 True
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auO < xr_auO
     && ((VV##F##72 <=> (lq_tmp$x##3671 <= lq_tmp$x##3672 => lq_tmp$x##3671 < lq_tmp$x##3672))
         && apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
     && lq_tmp$x##3671 == apply fl_auP xl_auO
     && lq_tmp$x##3672 == apply fr_auP xr_auO
RHS: VV##F##72
SMT READ
SMT Says: Unsat
UNSAT id 88 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && (VV##F##88 <=> true)
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##88
SMT READ
SMT Says: Unsat
UNSAT id 104 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && (VV##F##104 <=> true)
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##104
SMT READ
SMT Says: Unsat
UNSAT id 120 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && lq_tmp$x##2051 == xl_atA + lq_anf$##7205759403792795922l_dBs
     && lq_tmp$x##2052 == xr_atA + lq_anf$##7205759403792795922r_dBs
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && (VV##F##120 <=> (true => lq_tmp$x##2051 < lq_tmp$x##2052))
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##120
SMT READ
SMT Says: Unsat
UNSAT id 136 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##136 <=> true)
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##136
SMT READ
SMT Says: Unsat
UNSAT id 152 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##152 <=> true)
RHS: VV##F##152
SMT READ
SMT Says: Unsat
UNSAT id 9 False
LHS: GHC.Types.True
     && (VV##F##9 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##9
SMT READ
SMT Says: Unsat
UNSAT id 25 False
LHS: GHC.Types.True
     && (VV##F##25 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##25
SMT READ
SMT Says: Unsat
UNSAT id 41 False
LHS: GHC.Types.True
     && (VV##F##41 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##41
SMT READ
SMT Says: Unsat
UNSAT id 57 False
LHS: GHC.Types.True
     && (VV##F##57 <=> true)
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##57
SMT READ
SMT Says: Unsat
UNSAT id 73 False
LHS: GHC.Types.True
     && (VV##F##73 <=> (true => lq_tmp$x##3667 < lq_tmp$x##3668))
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auO < xr_auO
     && lq_tmp$x##3667 == xl_auO
     && not GHC.Types.False
     && lq_tmp$x##3668 == xr_auO
RHS: VV##F##73
SMT READ
SMT Says: Unsat
UNSAT id 89 False
LHS: GHC.Types.True
     && (VV##F##89 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##89
SMT READ
SMT Says: Unsat
UNSAT id 105 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##105 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##105
SMT READ
SMT Says: Unsat
UNSAT id 121 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##121 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##121
SMT READ
SMT Says: Unsat
UNSAT id 137 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##137 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##137
SMT READ
SMT Says: Unsat
UNSAT id 153 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##153 <=> true)
     && not GHC.Types.False
RHS: VV##F##153
SMT READ
SMT Says: Unsat
UNSAT id 10 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && (VV##F##10 <=> true)
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##10
SMT READ
SMT Says: Unsat
UNSAT id 26 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && lq_tmp$x##4195 == apply (apply SGDSimple.bind xl_auR) lq_anf$##7205759403792795927l_dBx
     && lq_tmp$x##4196 == apply (apply SGDSimple.bind xr_auR) lq_anf$##7205759403792795927r_dBx
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##26 <=> (lq_tmp$x##4195 < lq_tmp$x##4196 => lq_tmp$x##4195 < lq_tmp$x##4196))
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##26
SMT READ
SMT Says: Unsat
UNSAT id 42 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && (VV##F##42 <=> true)
     && not GHC.Types.False
RHS: VV##F##42
SMT READ
SMT Says: Unsat
UNSAT id 58 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
     && (VV##F##58 <=> (true => lq_tmp$x##3843 < lq_tmp$x##3844))
     && lq_tmp$x##3843 == xl_auQ
     && lq_tmp$x##3844 == xr_auQ
RHS: VV##F##58
SMT READ
SMT Says: Unsat
UNSAT id 74 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auO < xr_auO
     && not GHC.Types.False
     && (VV##F##74 <=> true)
RHS: VV##F##74
SMT READ
SMT Says: Unsat
UNSAT id 90 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (VV##F##90 <=> true)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##90
SMT READ
SMT Says: Unsat
UNSAT id 106 False
LHS: GHC.Types.True
     && (VV##F##106 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##106
SMT READ
SMT Says: Unsat
UNSAT id 122 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##122 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##122
SMT READ
SMT Says: Unsat
UNSAT id 138 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##138 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##138
SMT READ
SMT Says: Unsat
UNSAT id 154 False
LHS: GHC.Types.True
     && (VV##F##154 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##154
SMT READ
SMT Says: Unsat
UNSAT id 11 False
LHS: GHC.Types.True
     && (VV##F##11 <=> (true => lq_tmp$x##4377 < lq_tmp$x##4378))
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && lq_tmp$x##4377 == xl_auT
     && lq_tmp$x##4378 == xr_auT
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##11
SMT READ
SMT Says: Unsat
UNSAT id 43 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && lq_tmp$x##4051 == xl_auR
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##43 <=> (true => lq_tmp$x##4051 < lq_tmp$x##4052))
     && lq_tmp$x##4052 == xr_auR
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##43
SMT READ
SMT Says: Unsat
UNSAT id 59 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##59 <=> true)
     && not GHC.Types.False
RHS: VV##F##59
SMT READ
SMT Says: Unsat
UNSAT id 75 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##75 <=> true)
     && xl_auO < xr_auO
     && not GHC.Types.False
RHS: VV##F##75
SMT READ
SMT Says: Unsat
UNSAT id 91 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##91 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##91
SMT READ
SMT Says: Unsat
UNSAT id 107 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && (VV##F##107 <=> true)
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##107
SMT READ
SMT Says: Unsat
UNSAT id 123 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && (VV##F##123 <=> true)
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##123
SMT READ
SMT Says: Unsat
UNSAT id 139 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && (VV##F##139 <=> true)
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##139
SMT READ
SMT Says: Unsat
UNSAT id 12 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (VV##F##12 <=> true)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##12
SMT READ
SMT Says: Unsat
UNSAT id 44 False
LHS: GHC.Types.True
     && (VV##F##44 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##44
SMT READ
SMT Says: Unsat
UNSAT id 60 False
LHS: GHC.Types.True
     && (VV##F##60 <=> true)
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##60
SMT READ
SMT Says: Unsat
UNSAT id 76 False
LHS: GHC.Types.True
     && (VV##F##76 <=> (true => lq_tmp$x##3643 < lq_tmp$x##3644))
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auO < xr_auO
     && lq_tmp$x##3643 == xl_auO
     && lq_tmp$x##3644 == xr_auO
     && not GHC.Types.False
RHS: VV##F##76
SMT READ
SMT Says: Unsat
UNSAT id 92 False
LHS: GHC.Types.True
     && (VV##F##92 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##92
SMT READ
SMT Says: Unsat
UNSAT id 108 False
LHS: GHC.Types.True
     && (VV##F##108 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##108
SMT READ
SMT Says: Unsat
UNSAT id 124 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##124 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##124
SMT READ
SMT Says: Unsat
UNSAT id 140 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##140 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##140
SMT READ
SMT Says: Unsat
UNSAT id 13 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##13 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##13
SMT READ
SMT Says: Sat
UNSAT id 29 True
LHS: ((exists [lq_tmp$x##4185 : int;
               lq_karg$SGDSimple.sgd##k_##3949 : (function int int);
               lq_karg$sgd'r_rge##k_##3949 : (function int int);
               lq_karg$SGDSimple.bind##k_##3949 : (function int (function (function int int) int));
               lq_karg$sgd'l_rge##k_##3949 : (function int int);
               lq_karg$xr_auR##k_##3949 : int;
               lq_karg$SGDSimple.update'##k_##3949 : (function int (function int int));
               lq_karg$VV##3948##k_##3949 : int;
               lq_karg$xl_auR##k_##3949 : int;
               lq_karg$SGDSimple.sgd''##k_##3949 : (function int int);
               lq_karg$SGDSimple.sgd'##k_##3949 : (function int int);
               lq_karg$lq_tmp$x##3925##k_##3949 : LIQUID$dummy##xo;
               lq_karg$SGDSimple.update##k_##3949 : (function int int)]
         . (lq_tmp$x##4185 == lq_tmp$x##4188
            && lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
            && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
            && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
            && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
            && lq_karg$xr_auR##k_##3949 == xr_auR
            && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
            && lq_karg$VV##3948##k_##3949 == lq_tmp$x##4188
            && lq_karg$xl_auR##k_##3949 == xl_auR
            && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
            && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
            && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
            && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
           && exists [VV##F##27 : int]
                . (lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                   && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                   && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                   && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                   && lq_karg$xr_auR##k_##3949 == xr_auR
                   && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                   && lq_karg$VV##3948##k_##3949 == VV##F##27
                   && lq_karg$xl_auR##k_##3949 == xl_auR
                   && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                   && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                   && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                   && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
       || exists [lq_tmp$x##4185 : int;
                  lq_karg$SGDSimple.sgd##k_##3949 : (function int int);
                  lq_karg$sgd'r_rge##k_##3949 : (function int int);
                  lq_karg$SGDSimple.bind##k_##3949 : (function int (function (function int int) int));
                  lq_karg$sgd'l_rge##k_##3949 : (function int int);
                  lq_karg$xr_auR##k_##3949 : int;
                  lq_karg$SGDSimple.update'##k_##3949 : (function int (function int int));
                  lq_karg$VV##3948##k_##3949 : int;
                  lq_karg$xl_auR##k_##3949 : int;
                  lq_karg$SGDSimple.sgd''##k_##3949 : (function int int);
                  lq_karg$SGDSimple.sgd'##k_##3949 : (function int int);
                  lq_karg$lq_tmp$x##3925##k_##3949 : LIQUID$dummy##xo;
                  lq_karg$SGDSimple.update##k_##3949 : (function int int)]
            . (lq_tmp$x##4185 == lq_tmp$x##4188
               && lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
               && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
               && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
               && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
               && lq_karg$xr_auR##k_##3949 == xr_auR
               && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
               && lq_karg$VV##3948##k_##3949 == lq_tmp$x##4188
               && lq_karg$xl_auR##k_##3949 == xl_auR
               && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
               && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
               && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
               && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update)
              && exists [VV##F##38 : int]
                   . (lq_karg$SGDSimple.sgd##k_##3949 == SGDSimple.sgd
                      && lq_karg$sgd'r_rge##k_##3949 == sgd'r_rge
                      && lq_karg$SGDSimple.bind##k_##3949 == SGDSimple.bind
                      && lq_karg$sgd'l_rge##k_##3949 == sgd'l_rge
                      && lq_karg$xr_auR##k_##3949 == xr_auR
                      && lq_karg$SGDSimple.update'##k_##3949 == SGDSimple.update'
                      && lq_karg$VV##3948##k_##3949 == VV##F##38
                      && lq_karg$xl_auR##k_##3949 == xl_auR
                      && lq_karg$SGDSimple.sgd''##k_##3949 == SGDSimple.sgd''
                      && lq_karg$SGDSimple.sgd'##k_##3949 == SGDSimple.sgd'
                      && lq_karg$lq_tmp$x##3925##k_##3949 == lq_tmp$x##3925
                      && lq_karg$SGDSimple.update##k_##3949 == SGDSimple.update))
      && (exists [lq_karg$xr_auR##k_##3942 : int;
                  lq_karg$SGDSimple.bind##k_##3942 : (function int (function (function int int) int));
                  lq_karg$sgd'r_rge##k_##3942 : (function int int);
                  lq_karg$SGDSimple.sgd'##k_##3942 : (function int int);
                  lq_karg$SGDSimple.sgd##k_##3942 : (function int int);
                  lq_karg$xl_auR##k_##3942 : int;
                  lq_karg$SGDSimple.update'##k_##3942 : (function int (function int int));
                  lq_karg$sgd'l_rge##k_##3942 : (function int int);
                  lq_karg$SGDSimple.update##k_##3942 : (function int int);
                  lq_karg$lq_tmp$x##3925##k_##3942 : LIQUID$dummy##xo;
                  lq_tmp$x##4181 : int;
                  lq_karg$VV##3941##k_##3942 : int;
                  lq_karg$SGDSimple.sgd''##k_##3942 : (function int int)]
            . (lq_karg$xr_auR##k_##3942 == xr_auR
               && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
               && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
               && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
               && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
               && lq_karg$xl_auR##k_##3942 == xl_auR
               && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
               && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
               && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
               && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
               && lq_tmp$x##4181 == lq_tmp$x##4184
               && lq_karg$VV##3941##k_##3942 == lq_tmp$x##4184
               && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
              && exists [VV##F##28 : int]
                   . (lq_karg$xr_auR##k_##3942 == xr_auR
                      && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                      && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                      && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                      && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                      && lq_karg$xl_auR##k_##3942 == xl_auR
                      && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                      && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                      && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                      && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                      && lq_karg$VV##3941##k_##3942 == VV##F##28
                      && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
          || exists [lq_karg$xr_auR##k_##3942 : int;
                     lq_karg$SGDSimple.bind##k_##3942 : (function int (function (function int int) int));
                     lq_karg$sgd'r_rge##k_##3942 : (function int int);
                     lq_karg$SGDSimple.sgd'##k_##3942 : (function int int);
                     lq_karg$SGDSimple.sgd##k_##3942 : (function int int);
                     lq_karg$xl_auR##k_##3942 : int;
                     lq_karg$SGDSimple.update'##k_##3942 : (function int (function int int));
                     lq_karg$sgd'l_rge##k_##3942 : (function int int);
                     lq_karg$SGDSimple.update##k_##3942 : (function int int);
                     lq_karg$lq_tmp$x##3925##k_##3942 : LIQUID$dummy##xo;
                     lq_tmp$x##4181 : int;
                     lq_karg$VV##3941##k_##3942 : int;
                     lq_karg$SGDSimple.sgd''##k_##3942 : (function int int)]
               . (lq_karg$xr_auR##k_##3942 == xr_auR
                  && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                  && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                  && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                  && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                  && lq_karg$xl_auR##k_##3942 == xl_auR
                  && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                  && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                  && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                  && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                  && lq_tmp$x##4181 == lq_tmp$x##4184
                  && lq_karg$VV##3941##k_##3942 == lq_tmp$x##4184
                  && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')
                 && exists [VV##F##39 : int]
                      . (lq_karg$xr_auR##k_##3942 == xr_auR
                         && lq_karg$SGDSimple.bind##k_##3942 == SGDSimple.bind
                         && lq_karg$sgd'r_rge##k_##3942 == sgd'r_rge
                         && lq_karg$SGDSimple.sgd'##k_##3942 == SGDSimple.sgd'
                         && lq_karg$SGDSimple.sgd##k_##3942 == SGDSimple.sgd
                         && lq_karg$xl_auR##k_##3942 == xl_auR
                         && lq_karg$SGDSimple.update'##k_##3942 == SGDSimple.update'
                         && lq_karg$sgd'l_rge##k_##3942 == sgd'l_rge
                         && lq_karg$SGDSimple.update##k_##3942 == SGDSimple.update
                         && lq_karg$lq_tmp$x##3925##k_##3942 == lq_tmp$x##3925
                         && lq_karg$VV##3941##k_##3942 == VV##F##39
                         && lq_karg$SGDSimple.sgd''##k_##3942 == SGDSimple.sgd'')))
     && GHC.Types.True
     && (lq_tmp$x##4191 == apply SGDSimple.update lq_tmp$x##4184
         && lq_tmp$x##4191 == apply lq_anf$##7205759403792795927l_dBx lq_tmp$x##4184)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (lq_tmp$x##4192 == apply SGDSimple.update lq_tmp$x##4188
         && lq_tmp$x##4192 == apply lq_anf$##7205759403792795927r_dBx lq_tmp$x##4188)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && ((VV##F##29 <=> (true => (lq_tmp$x##4184 < lq_tmp$x##4188 => lq_tmp$x##4191 <= lq_tmp$x##4192)))
         && apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##29
SMT READ
SMT Says: Unsat
UNSAT id 45 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##45 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##45
SMT READ
SMT Says: Unsat
UNSAT id 61 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##61 <=> ((lq_tmp$x##3788 < lq_tmp$x##3792 => lq_tmp$x##3795 < lq_tmp$x##3796) => (lq_tmp$x##3788 < lq_tmp$x##3792 => lq_tmp$x##3795 <= lq_tmp$x##3796)))
     && lq_tmp$x##3795 == apply SGDSimple.update lq_tmp$x##3788
     && lq_tmp$x##3796 == apply SGDSimple.update lq_tmp$x##3792
     && not GHC.Types.False
RHS: VV##F##61
SMT READ
SMT Says: Unsat
UNSAT id 77 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auO < xr_auO
     && (VV##F##77 <=> true)
     && not GHC.Types.False
RHS: VV##F##77
SMT READ
SMT Says: Unsat
UNSAT id 93 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && (VV##F##93 <=> true)
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##93
SMT READ
SMT Says: Unsat
UNSAT id 109 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (VV##F##109 <=> true)
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##109
SMT READ
SMT Says: Unsat
UNSAT id 125 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (VV##F##125 <=> true)
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##125
SMT READ
SMT Says: Unsat
UNSAT id 141 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
     && (VV##F##141 <=> true)
RHS: VV##F##141
SMT READ
SMT Says: Unsat
UNSAT id 14 False
LHS: GHC.Types.True
     && (VV##F##14 <=> (true => true))
     && (lq_tmp$x##4325 == lq_anf$##7205759403792795925l_dBv
         && lq_tmp$x##4325 == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv
         && lq_tmp$x##4325 == lq_anf$##7205759403792795926l_dBw)
     && (lq_tmp$x##4326 == lq_anf$##7205759403792795925r_dBv
         && lq_tmp$x##4326 == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv
         && lq_tmp$x##4326 == lq_anf$##7205759403792795926r_dBw)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##14
SMT READ
SMT Says: Unsat
UNSAT id 30 False
LHS: GHC.Types.True
     && (VV##F##30 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##30
SMT READ
SMT Says: Unsat
UNSAT id 46 False
LHS: GHC.Types.True
     && (VV##F##46 <=> (true => lq_tmp$x##4003 < lq_tmp$x##4004))
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && lq_tmp$x##4003 == xl_auR
     && lq_tmp$x##4004 == xr_auR
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##46
SMT READ
SMT Says: Unsat
UNSAT id 62 False
LHS: GHC.Types.True
     && (VV##F##62 <=> true)
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
RHS: VV##F##62
SMT READ
SMT Says: Unsat
UNSAT id 78 False
LHS: GHC.Types.True
     && (VV##F##78 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auO < xr_auO
     && not GHC.Types.False
RHS: VV##F##78
SMT READ
SMT Says: Unsat
UNSAT id 94 False
LHS: GHC.Types.True
     && (VV##F##94 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##94
SMT READ
SMT Says: Unsat
UNSAT id 110 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##110 <=> true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##110
SMT READ
SMT Says: Unsat
UNSAT id 126 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##126 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##126
SMT READ
SMT Says: Unsat
UNSAT id 142 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##142 <=> true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##142
SMT READ
SMT Says: Unsat
UNSAT id 15 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##15 <=> true)
     && xl_auT < xr_auT
     && lq_anf$##7205759403792795925l_dBv == 0
     && lq_anf$##7205759403792795925r_dBv == 0
     && not GHC.Types.False
     && (lq_anf$##7205759403792795926l_dBw == lq_anf$##7205759403792795925l_dBv
         && lq_anf$##7205759403792795926l_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925l_dBv)
     && (lq_anf$##7205759403792795926r_dBw == lq_anf$##7205759403792795925r_dBv
         && lq_anf$##7205759403792795926r_dBw == apply GHC.Types.I# lq_anf$##7205759403792795925r_dBv)
RHS: VV##F##15
SMT READ
SMT Says: Unsat
UNSAT id 31 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##31 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##31
SMT READ
SMT Says: Unsat
UNSAT id 47 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##47 <=> true)
     && xl_auR < xr_auR
     && not GHC.Types.False
RHS: VV##F##47
SMT READ
SMT Says: Unsat
UNSAT id 63 False
LHS: GHC.Types.True
     && xl_auQ < xr_auQ
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && (VV##F##63 <=> true)
     && not GHC.Types.False
RHS: VV##F##63
SMT READ
SMT Says: Unsat
UNSAT id 79 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && not GHC.Types.False
     && (VV##F##79 <=> true)
RHS: VV##F##79
SMT READ
SMT Says: Unsat
UNSAT id 95 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (VV##F##95 <=> true)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
RHS: VV##F##95
SMT READ
SMT Says: Unsat
UNSAT id 111 False
LHS: GHC.Types.True
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_auN < xr_auN
     && lq_anf$##7205759403792795923l_dBt == 1
     && lq_anf$##7205759403792795923r_dBt == 1
     && not GHC.Types.False
     && (lq_anf$##7205759403792795924l_dBu == lq_anf$##7205759403792795923l_dBt
         && lq_anf$##7205759403792795924l_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923l_dBt)
     && (lq_anf$##7205759403792795924r_dBu == lq_anf$##7205759403792795923r_dBt
         && lq_anf$##7205759403792795924r_dBu == apply GHC.Types.I# lq_anf$##7205759403792795923r_dBt)
     && (VV##F##111 <=> true)
RHS: VV##F##111
SMT READ
SMT Says: Unsat
UNSAT id 127 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##127 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##127
SMT READ
SMT Says: Unsat
UNSAT id 143 False
LHS: GHC.Types.True
     && (lq_anf$##7205759403792795922r_dBs == lq_anf$##7205759403792795921r_dBr
         && lq_anf$##7205759403792795922r_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921r_dBr)
     && (VV##F##143 <=> true)
     && (apply is$GHC.Types.: GHC.Types.[] == false
         && apply isJust GHC.Maybe.Nothing == false
         && apply len GHC.Types.[] == 0
         && apply is$GHC.Types.[] GHC.Types.[] == true)
     && xl_atA < xr_atA
     && lq_anf$##7205759403792795921l_dBr == 1
     && not GHC.Types.False
     && lq_anf$##7205759403792795921r_dBr == 1
     && (lq_anf$##7205759403792795922l_dBs == lq_anf$##7205759403792795921l_dBr
         && lq_anf$##7205759403792795922l_dBs == apply GHC.Types.I# lq_anf$##7205759403792795921l_dBr)
RHS: VV##F##143
RESULT: Unsafe (Stats {numCstr = 151, numIter = 302, numBrkt = 300, numChck = 300, numVald = 294}) [Just 40,Just 72,Just 29]
Saving Solution: /Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/.liquid/SGDSimple.hs.fqout

[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** LIQUID: UNSAFE ************************************************************
[0m/Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:35:1-32: error: 
    Relational Check
    Property
      {VV : _ | VV <=> (true => (?c < ?a => SGDSimple.update ?c <= SGDSimple.update ?a))}
    .
    Not provable in context
      ?c := GHC.Types.Int

      ?a := GHC.Types.Int
/Users/elizavetavasilenko/liquidhaskell/tests/relational/pos/SGDSimple.hs:19:31: error: 
    Relational Check
    Property
      {VV : _ | VV <=> (fl_auP xl_auO <= fr_auP xr_auO => fl_auP xl_auO < fr_auP xr_auO)}
    .
    Not provable in context
      xl_auO := GHC.Types.Int

      xr_auO := GHC.Types.Int
